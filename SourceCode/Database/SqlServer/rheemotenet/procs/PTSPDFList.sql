/*
'===============================================================================
' Generated by GenerateDataAndObjectLayer Version 1.0.0.0
'
' <auto-generated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated. 
' </auto-generated>
'===============================================================================

*/
USE [rheemotenet]

/* ------------------------------------------------------------
   Get rid of obsolete InsertPTSPDFList
   Get rid of obsolete UpdatePTSPDFList
   Get rid of obsolete DeletePTSPDFList
   Get rid of obsolete SearchPTSPDFListByString
   Get rid of obsolete GetPTSPDFListByID
   ------------------------------------------------------------ */
If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('InsertPTSPDFList') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE InsertPTSPDFList;
        PRINT 'Dropped InsertPTSPDFList'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('UpdatePTSPDFList') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE UpdatePTSPDFList;
        PRINT 'Dropped UpdatePTSPDFList'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DeletePTSPDFList') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE DeletePTSPDFList;
        PRINT 'Dropped DeletePTSPDFList'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('SearchPTSPDFListByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE SearchPTSPDFListByString;
        PRINT 'Dropped SearchPTSPDFListByString'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('GetPTSPDFListByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE GetPTSPDFListByID;
        PRINT 'Dropped GetPTSPDFListByID'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__PTSPDFList_GetByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__PTSPDFList_GetByID;
        PRINT 'Dropped spGen__PTSPDFList_GetByID'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__PTSPDFList_GetByID

   Description:  Selects record(s) from table 'PTSPDFList'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__PTSPDFList_GetByID
(
    @PTSPDFListID uniqueidentifier

)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int

    Select [PTSPDFListID],[Directory],[FileName],[FileURL],[Keywords],[Title],[FileDateTime],[CreateDateTime__Gen],[UpdateDateTime__Gen]
    FROM [PTSPDFList]
    WHERE [PTSPDFListID] = @PTSPDFListID

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__PTSPDFList_GetByID Succeeded'
Else PRINT 'Procedure Creation: spGen__PTSPDFList_GetByID Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__PTSPDFList_SearchByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__PTSPDFList_SearchByString;
        PRINT 'Dropped spGen__PTSPDFList_SearchByString'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__PTSPDFList_SearchByString

   Description:  Selects a record from table 'PTSPDFList'
                 And puts values into parameters

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__PTSPDFList_SearchByString
(
    @searchParam varchar(8000)
)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int
    DECLARE @strSql varchar(8000)

    SET @strSql = ' Select [PTSPDFListID],[Directory],[FileName],[FileURL],[Keywords],[Title],[FileDateTime],[CreateDateTime__Gen],[UpdateDateTime__Gen]
    FROM [PTSPDFList]
    WHERE ' +  @searchParam

    EXEC(@strSql)

    --//We should NOT be using exec above.
    --//If params are NOT known, then be sure to clean sql
    --//If params are known, format like example below

    --IF @prodname IS NOT NULL
    --SELECT @sql = @sql + ' ProductName LIKE @prodname'
    --EXEC sp_executesql @sql, N'@prodname varchar(400)',@prodname

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__PTSPDFList_SearchByString Succeeded'
Else PRINT 'Procedure Creation: spGen__PTSPDFList_SearchByString Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__PTSPDFList_Delete') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__PTSPDFList_Delete;
        PRINT 'Dropped spGen__PTSPDFList_Delete'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__PTSPDFList_Delete

   Description:  Deletes a record from table 'PTSPDFList'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__PTSPDFList_Delete
(
    @PTSPDFListID uniqueidentifier

)
AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN
    DECLARE @Err Int


    DELETE FROM [PTSPDFList]
    WHERE [PTSPDFListID] = @PTSPDFListID


End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__PTSPDFList_Delete Succeeded'
Else PRINT 'Procedure Creation: spGen__PTSPDFList_Delete Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__PTSPDFList_Save') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__PTSPDFList_Save;
        PRINT 'Dropped spGen__PTSPDFList_Save'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__PTSPDFList_Save

   Description:  Updates or Deletes a record In table 'PTSPDFList'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__PTSPDFList_Save
(
    @ErrText varchar(4000) output,
    @PTSPDFListID uniqueidentifier output,
    @Directory varchar(450),
    @FileName varchar(450),
    @FileURL varchar(900),
    @Keywords varchar(900),
    @Title varchar(900),
    @FileDateTime datetime
)

AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN

    DECLARE @UniqueRowCount Int
    IF @PTSPDFListID = '00000000-0000-0000-0000-000000000000' SET @PTSPDFListID = NULL
    IF @PTSPDFListID IS NULL
        BEGIN
            SELECT @UniqueRowCount = COUNT(1) FROM [PTSPDFList] where [Directory] = @Directory and [FileName] = @FileName 
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = 'A row matching these unique index columns was found: Directory, FileName'
                END
            ELSE
                BEGIN
                    SET @PTSPDFListID = NewID()

                    INSERT
                    INTO [PTSPDFList]
                    (
                        [PTSPDFListID],
                        [Directory],
                        [FileName],
                        [FileURL],
                        [Keywords],
                        [Title],
                        [FileDateTime],
                        [CreateDateTime__Gen],
                        [UpdateDateTime__Gen]
                    )
                    VALUES
                    (
                        @PTSPDFListID,
                        @Directory,
                        @FileName,
                        @FileURL,
                        @Keywords,
                        @Title,
                        @FileDateTime,
                        SYSDATETIME(),
                        SYSDATETIME()
                    )
                END
        END
    ELSE
        BEGIN
            -- check to see that there isn't another row like this one (assuming the unique index column(s) might have changed)
            SELECT @UniqueRowCount = COUNT(1) FROM [PTSPDFList] where [Directory] = @Directory and [FileName] = @FileName  and [PTSPDFListID] <> @PTSPDFListID
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = 'A row matching these unique index columns was found: Directory, FileName'
                END
            ELSE
                BEGIN
                    UPDATE [PTSPDFList]
                    SET
                    [Directory] = @Directory,
                    [FileName] = @FileName,
                    [FileURL] = @FileURL,
                    [Keywords] = @Keywords,
                    [Title] = @Title,
                    [FileDateTime] = @FileDateTime,
                    [UpdateDateTime__Gen] = SYSDATETIME()
                    WHERE [PTSPDFListID] = @PTSPDFListID
                END
        END

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__PTSPDFList_Save Succeeded'
Else PRINT 'Procedure Creation: spGen__PTSPDFList_Save Error on Creation'
GO





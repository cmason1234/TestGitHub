/*
'===============================================================================
' Generated by GenerateDataAndObjectLayer Version 1.0.0.0
'
' <auto-generated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated. 
' </auto-generated>
'===============================================================================

*/
USE [rcn]

/* ------------------------------------------------------------
   Get rid of obsolete InsertDocument
   Get rid of obsolete UpdateDocument
   Get rid of obsolete DeleteDocument
   Get rid of obsolete SearchDocumentByString
   Get rid of obsolete GetDocumentByID
   ------------------------------------------------------------ */
If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('InsertDocument') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE InsertDocument;
        PRINT 'Dropped InsertDocument'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('UpdateDocument') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE UpdateDocument;
        PRINT 'Dropped UpdateDocument'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DeleteDocument') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE DeleteDocument;
        PRINT 'Dropped DeleteDocument'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('SearchDocumentByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE SearchDocumentByString;
        PRINT 'Dropped SearchDocumentByString'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('GetDocumentByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE GetDocumentByID;
        PRINT 'Dropped GetDocumentByID'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__Document_GetByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__Document_GetByID;
        PRINT 'Dropped spGen__Document_GetByID'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__Document_GetByID

   Description:  Selects record(s) from table 'Document'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__Document_GetByID
(
    @DocumentID uniqueidentifier

)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int

    Select [DocumentID],[DocumentTitle],[DocumentNumber],[Category],[Distribution],[PublicationDate],[UploadDate],[Keywords],[Abstract],[Filename],[MimeTypeOLD],[ByteCount],[DocumentSrc],[Hot],[MimeType]
    FROM [Document]
    WHERE [DocumentID] = @DocumentID

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__Document_GetByID Succeeded'
Else PRINT 'Procedure Creation: spGen__Document_GetByID Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__Document_SearchByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__Document_SearchByString;
        PRINT 'Dropped spGen__Document_SearchByString'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__Document_SearchByString

   Description:  Selects a record from table 'Document'
                 And puts values into parameters

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__Document_SearchByString
(
    @searchParam varchar(4000)
)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int
    DECLARE @strSql varchar(4000)

    SET @strSql = ' Select [DocumentID],[DocumentTitle],[DocumentNumber],[Category],[Distribution],[PublicationDate],[UploadDate],[Keywords],[Abstract],[Filename],[MimeTypeOLD],[ByteCount],[DocumentSrc],[Hot],[MimeType]
    FROM [Document]
    WHERE ' +  @searchParam

    EXEC(@strSql)

    --//We should NOT be using exec above.
    --//If params are NOT known, then be sure to clean sql
    --//If params are known, format like example below

    --IF @prodname IS NOT NULL
    --SELECT @sql = @sql + ' ProductName LIKE @prodname'
    --EXEC sp_executesql @sql, N'@prodname varchar(400)',@prodname

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__Document_SearchByString Succeeded'
Else PRINT 'Procedure Creation: spGen__Document_SearchByString Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__Document_Delete') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__Document_Delete;
        PRINT 'Dropped spGen__Document_Delete'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__Document_Delete

   Description:  Deletes a record from table 'Document'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__Document_Delete
(
    @DocumentID uniqueidentifier

)
AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN
    DECLARE @Err Int


    DELETE FROM [Document]
    WHERE [DocumentID] = @DocumentID


End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__Document_Delete Succeeded'
Else PRINT 'Procedure Creation: spGen__Document_Delete Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__Document_Save') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__Document_Save;
        PRINT 'Dropped spGen__Document_Save'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__Document_Save

   Description:  Updates or Deletes a record In table 'Document'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__Document_Save
(
    @ErrText varchar(4000) output,
    @DocumentID uniqueidentifier output,
    @DocumentTitle varchar(256),
    @DocumentNumber varchar(256),
    @Category varchar(50),
    @Distribution char(10),
    @PublicationDate datetime,
    @UploadDate datetime,
    @Keywords varchar(2048),
    @Abstract text,
    @Filename varchar(256),
    @MimeTypeOLD varchar(50),
    @ByteCount int,
    @DocumentSrc image,
    @Hot bit,
    @MimeType varchar(512)
)

AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN

    DECLARE @UniqueRowCount Int
    IF @DocumentID = '00000000-0000-0000-0000-000000000000' SET @DocumentID = NULL
    IF @DocumentID IS NULL
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    SET @DocumentID = NewID()

                    INSERT
                    INTO [Document]
                    (
                        [DocumentID],
                        [DocumentTitle],
                        [DocumentNumber],
                        [Category],
                        [Distribution],
                        [PublicationDate],
                        [UploadDate],
                        [Keywords],
                        [Abstract],
                        [Filename],
                        [MimeTypeOLD],
                        [ByteCount],
                        [DocumentSrc],
                        [Hot],
                        [MimeType]
                    )
                    VALUES
                    (
                        @DocumentID,
                        @DocumentTitle,
                        @DocumentNumber,
                        @Category,
                        @Distribution,
                        @PublicationDate,
                        @UploadDate,
                        @Keywords,
                        @Abstract,
                        @Filename,
                        @MimeTypeOLD,
                        @ByteCount,
                        @DocumentSrc,
                        @Hot,
                        @MimeType
                    )
                END
        END
    ELSE
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    UPDATE [Document]
                    SET
                    [DocumentTitle] = @DocumentTitle,
                    [DocumentNumber] = @DocumentNumber,
                    [Category] = @Category,
                    [Distribution] = @Distribution,
                    [PublicationDate] = @PublicationDate,
                    [UploadDate] = @UploadDate,
                    [Keywords] = @Keywords,
                    [Abstract] = @Abstract,
                    [Filename] = @Filename,
                    [MimeTypeOLD] = @MimeTypeOLD,
                    [ByteCount] = @ByteCount,
                    [DocumentSrc] = @DocumentSrc,
                    [Hot] = @Hot,
                    [MimeType] = @MimeType
                    WHERE [DocumentID] = @DocumentID
                END
        END

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__Document_Save Succeeded'
Else PRINT 'Procedure Creation: spGen__Document_Save Error on Creation'
GO





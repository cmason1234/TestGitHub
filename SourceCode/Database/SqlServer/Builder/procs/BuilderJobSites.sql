/*
'===============================================================================
' Generated by GenerateDataAndObjectLayer Version 1.0.0.0
'
' <auto-generated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated. 
' </auto-generated>
'===============================================================================

*/
USE [Builder]

/* ------------------------------------------------------------
   Get rid of obsolete InsertBuilderJobSites
   Get rid of obsolete UpdateBuilderJobSites
   Get rid of obsolete DeleteBuilderJobSites
   Get rid of obsolete SearchBuilderJobSitesByString
   Get rid of obsolete GetBuilderJobSitesByID
   ------------------------------------------------------------ */
If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('InsertBuilderJobSites') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE InsertBuilderJobSites;
        PRINT 'Dropped InsertBuilderJobSites'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('UpdateBuilderJobSites') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE UpdateBuilderJobSites;
        PRINT 'Dropped UpdateBuilderJobSites'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DeleteBuilderJobSites') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE DeleteBuilderJobSites;
        PRINT 'Dropped DeleteBuilderJobSites'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('SearchBuilderJobSitesByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE SearchBuilderJobSitesByString;
        PRINT 'Dropped SearchBuilderJobSitesByString'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('GetBuilderJobSitesByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE GetBuilderJobSitesByID;
        PRINT 'Dropped GetBuilderJobSitesByID'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__BuilderJobSites_GetByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__BuilderJobSites_GetByID;
        PRINT 'Dropped spGen__BuilderJobSites_GetByID'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__BuilderJobSites_GetByID

   Description:  Selects record(s) from table 'BuilderJobSites'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__BuilderJobSites_GetByID
(
    @JobSiteID uniqueidentifier

)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int

    Select [JobSiteID],[BuilderID],[SubdivisionName],[City],[State],[ZipCode],[RebateID],[TotalRebate],[ConfirmationNumber],[CreatedDate],[CreatePersonID],[SubmittedDate],[SubmittedPersonID],[ApprovedDate],[ApprovedPersonID],[CompletedDate],[CompletedPersonID],[ContractorOrganizationID],[MotorBearings],[BulkImport]
    FROM [BuilderJobSites]
    WHERE [JobSiteID] = @JobSiteID

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__BuilderJobSites_GetByID Succeeded'
Else PRINT 'Procedure Creation: spGen__BuilderJobSites_GetByID Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__BuilderJobSites_SearchByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__BuilderJobSites_SearchByString;
        PRINT 'Dropped spGen__BuilderJobSites_SearchByString'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__BuilderJobSites_SearchByString

   Description:  Selects a record from table 'BuilderJobSites'
                 And puts values into parameters

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__BuilderJobSites_SearchByString
(
    @searchParam varchar(4000)
)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int
    DECLARE @strSql varchar(4000)

    SET @strSql = ' Select [JobSiteID],[BuilderID],[SubdivisionName],[City],[State],[ZipCode],[RebateID],[TotalRebate],[ConfirmationNumber],[CreatedDate],[CreatePersonID],[SubmittedDate],[SubmittedPersonID],[ApprovedDate],[ApprovedPersonID],[CompletedDate],[CompletedPersonID],[ContractorOrganizationID],[MotorBearings],[BulkImport]
    FROM [BuilderJobSites]
    WHERE ' +  @searchParam

    EXEC(@strSql)

    --//We should NOT be using exec above.
    --//If params are NOT known, then be sure to clean sql
    --//If params are known, format like example below

    --IF @prodname IS NOT NULL
    --SELECT @sql = @sql + ' ProductName LIKE @prodname'
    --EXEC sp_executesql @sql, N'@prodname varchar(400)',@prodname

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__BuilderJobSites_SearchByString Succeeded'
Else PRINT 'Procedure Creation: spGen__BuilderJobSites_SearchByString Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__BuilderJobSites_Delete') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__BuilderJobSites_Delete;
        PRINT 'Dropped spGen__BuilderJobSites_Delete'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__BuilderJobSites_Delete

   Description:  Deletes a record from table 'BuilderJobSites'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__BuilderJobSites_Delete
(
    @JobSiteID uniqueidentifier

)
AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN
    DECLARE @Err Int


    DELETE FROM [BuilderJobSites]
    WHERE [JobSiteID] = @JobSiteID


End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__BuilderJobSites_Delete Succeeded'
Else PRINT 'Procedure Creation: spGen__BuilderJobSites_Delete Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__BuilderJobSites_Save') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__BuilderJobSites_Save;
        PRINT 'Dropped spGen__BuilderJobSites_Save'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__BuilderJobSites_Save

   Description:  Updates or Deletes a record In table 'BuilderJobSites'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__BuilderJobSites_Save
(
    @ErrText varchar(4000) output,
    @JobSiteID uniqueidentifier output,
    @BuilderID uniqueidentifier,
    @SubdivisionName varchar(256),
    @City varchar(256),
    @State char(2),
    @ZipCode varchar(10),
    @RebateID uniqueidentifier,
    @TotalRebate float,
    @ConfirmationNumber int,
    @CreatedDate datetime,
    @CreatePersonID uniqueidentifier,
    @SubmittedDate datetime,
    @SubmittedPersonID uniqueidentifier,
    @ApprovedDate datetime,
    @ApprovedPersonID uniqueidentifier,
    @CompletedDate datetime,
    @CompletedPersonID uniqueidentifier,
    @ContractorOrganizationID uniqueidentifier,
    @MotorBearings int,
    @BulkImport bit
)

AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN

    DECLARE @UniqueRowCount Int
    IF @JobSiteID = '00000000-0000-0000-0000-000000000000' SET @JobSiteID = NULL
    IF @JobSiteID IS NULL
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    SET @JobSiteID = NewID()

                    INSERT
                    INTO [BuilderJobSites]
                    (
                        [JobSiteID],
                        [BuilderID],
                        [SubdivisionName],
                        [City],
                        [State],
                        [ZipCode],
                        [RebateID],
                        [TotalRebate],
                        [ConfirmationNumber],
                        [CreatedDate],
                        [CreatePersonID],
                        [SubmittedDate],
                        [SubmittedPersonID],
                        [ApprovedDate],
                        [ApprovedPersonID],
                        [CompletedDate],
                        [CompletedPersonID],
                        [ContractorOrganizationID],
                        [MotorBearings],
                        [BulkImport]
                    )
                    VALUES
                    (
                        @JobSiteID,
                        @BuilderID,
                        @SubdivisionName,
                        @City,
                        @State,
                        @ZipCode,
                        @RebateID,
                        @TotalRebate,
                        @ConfirmationNumber,
                        @CreatedDate,
                        @CreatePersonID,
                        @SubmittedDate,
                        @SubmittedPersonID,
                        @ApprovedDate,
                        @ApprovedPersonID,
                        @CompletedDate,
                        @CompletedPersonID,
                        @ContractorOrganizationID,
                        @MotorBearings,
                        @BulkImport
                    )
                END
        END
    ELSE
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    UPDATE [BuilderJobSites]
                    SET
                    [BuilderID] = @BuilderID,
                    [SubdivisionName] = @SubdivisionName,
                    [City] = @City,
                    [State] = @State,
                    [ZipCode] = @ZipCode,
                    [RebateID] = @RebateID,
                    [TotalRebate] = @TotalRebate,
                    [ConfirmationNumber] = @ConfirmationNumber,
                    [CreatedDate] = @CreatedDate,
                    [CreatePersonID] = @CreatePersonID,
                    [SubmittedDate] = @SubmittedDate,
                    [SubmittedPersonID] = @SubmittedPersonID,
                    [ApprovedDate] = @ApprovedDate,
                    [ApprovedPersonID] = @ApprovedPersonID,
                    [CompletedDate] = @CompletedDate,
                    [CompletedPersonID] = @CompletedPersonID,
                    [ContractorOrganizationID] = @ContractorOrganizationID,
                    [MotorBearings] = @MotorBearings,
                    [BulkImport] = @BulkImport
                    WHERE [JobSiteID] = @JobSiteID
                END
        END

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__BuilderJobSites_Save Succeeded'
Else PRINT 'Procedure Creation: spGen__BuilderJobSites_Save Error on Creation'
GO





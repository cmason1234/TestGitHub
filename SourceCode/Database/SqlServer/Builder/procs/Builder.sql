/*
'===============================================================================
' Generated by GenerateDataAndObjectLayer Version 1.0.0.0
'
' <auto-generated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated. 
' </auto-generated>
'===============================================================================

*/
USE [Builder]

/* ------------------------------------------------------------
   Get rid of obsolete InsertBuilder
   Get rid of obsolete UpdateBuilder
   Get rid of obsolete DeleteBuilder
   Get rid of obsolete SearchBuilderByString
   Get rid of obsolete GetBuilderByID
   ------------------------------------------------------------ */
If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('InsertBuilder') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE InsertBuilder;
        PRINT 'Dropped InsertBuilder'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('UpdateBuilder') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE UpdateBuilder;
        PRINT 'Dropped UpdateBuilder'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DeleteBuilder') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE DeleteBuilder;
        PRINT 'Dropped DeleteBuilder'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('SearchBuilderByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE SearchBuilderByString;
        PRINT 'Dropped SearchBuilderByString'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('GetBuilderByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE GetBuilderByID;
        PRINT 'Dropped GetBuilderByID'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__Builder_GetByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__Builder_GetByID;
        PRINT 'Dropped spGen__Builder_GetByID'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__Builder_GetByID

   Description:  Selects record(s) from table 'Builder'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__Builder_GetByID
(
    @BuilderID uniqueidentifier

)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int

    Select [BuilderID],[BuilderName],[Division],[Address],[City],[State],[ZipCode],[Contact],[ContactTitle],[Phone],[Email],[Subdivision],[Location],[HomesPerYear],[SystemsPerHome],[BuilderTypeStarter],[BuilderTypeCustom],[BuilderTypeApts],[BuilderTypeCondo],[Achieved100],[VendorNumber],[EquipmentMfg],[MfgCommitments],[MfgCommitExp],[IAQConcerns],[CurrentSEER],[OfferUpgrades],[UpgradeProcess],[UpgradeFrom],[LikeRebates],[RebateEnclosed],[RebateImproved],[RequiresPriceList],[PriceListEnclosed],[DELETEDistributorBranch],[DELETEBranchLocation],[DistributorEmail],[PresentationDate],[CopiesRequired],[CopiesSentName],[CopiesSentCompany],[CopiesSentAddress],[CopiesSentCity],[CopiesSentState],[CopiesSentZipCode],[CopiesSentPhone],[RebateLevelModelHome],[DisplayROI],[CreatedBy],[Status],[ProgramType],[DeliveryMethod],[OpenJobSites],[SubmittedJobSites],[ApprovedJobSites],[AppByFinancing],[CheckMailed],[SendCreateEmail],[ProposalSent],[ProposalReceived],[ShowNotesOnProposal],[ProposalNotes],[BGSPersonID],[RheemContractors],[RuudContractors],[InactiveReason],[InactiveReasonDesc],[ProposalGenerated]
    FROM [Builder]
    WHERE [BuilderID] = @BuilderID

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__Builder_GetByID Succeeded'
Else PRINT 'Procedure Creation: spGen__Builder_GetByID Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__Builder_SearchByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__Builder_SearchByString;
        PRINT 'Dropped spGen__Builder_SearchByString'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__Builder_SearchByString

   Description:  Selects a record from table 'Builder'
                 And puts values into parameters

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__Builder_SearchByString
(
    @searchParam varchar(4000)
)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int
    DECLARE @strSql varchar(4000)

    SET @strSql = ' Select [BuilderID],[BuilderName],[Division],[Address],[City],[State],[ZipCode],[Contact],[ContactTitle],[Phone],[Email],[Subdivision],[Location],[HomesPerYear],[SystemsPerHome],[BuilderTypeStarter],[BuilderTypeCustom],[BuilderTypeApts],[BuilderTypeCondo],[Achieved100],[VendorNumber],[EquipmentMfg],[MfgCommitments],[MfgCommitExp],[IAQConcerns],[CurrentSEER],[OfferUpgrades],[UpgradeProcess],[UpgradeFrom],[LikeRebates],[RebateEnclosed],[RebateImproved],[RequiresPriceList],[PriceListEnclosed],[DELETEDistributorBranch],[DELETEBranchLocation],[DistributorEmail],[PresentationDate],[CopiesRequired],[CopiesSentName],[CopiesSentCompany],[CopiesSentAddress],[CopiesSentCity],[CopiesSentState],[CopiesSentZipCode],[CopiesSentPhone],[RebateLevelModelHome],[DisplayROI],[CreatedBy],[Status],[ProgramType],[DeliveryMethod],[OpenJobSites],[SubmittedJobSites],[ApprovedJobSites],[AppByFinancing],[CheckMailed],[SendCreateEmail],[ProposalSent],[ProposalReceived],[ShowNotesOnProposal],[ProposalNotes],[BGSPersonID],[RheemContractors],[RuudContractors],[InactiveReason],[InactiveReasonDesc],[ProposalGenerated]
    FROM [Builder]
    WHERE ' +  @searchParam

    EXEC(@strSql)

    --//We should NOT be using exec above.
    --//If params are NOT known, then be sure to clean sql
    --//If params are known, format like example below

    --IF @prodname IS NOT NULL
    --SELECT @sql = @sql + ' ProductName LIKE @prodname'
    --EXEC sp_executesql @sql, N'@prodname varchar(400)',@prodname

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__Builder_SearchByString Succeeded'
Else PRINT 'Procedure Creation: spGen__Builder_SearchByString Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__Builder_Delete') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__Builder_Delete;
        PRINT 'Dropped spGen__Builder_Delete'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__Builder_Delete

   Description:  Deletes a record from table 'Builder'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__Builder_Delete
(
    @BuilderID uniqueidentifier

)
AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN
    DECLARE @Err Int


    DELETE FROM [Builder]
    WHERE [BuilderID] = @BuilderID


End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__Builder_Delete Succeeded'
Else PRINT 'Procedure Creation: spGen__Builder_Delete Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__Builder_Save') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__Builder_Save;
        PRINT 'Dropped spGen__Builder_Save'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__Builder_Save

   Description:  Updates or Deletes a record In table 'Builder'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__Builder_Save
(
    @ErrText varchar(4000) output,
    @BuilderID uniqueidentifier output,
    @BuilderName varchar(50),
    @Division varchar(50),
    @Address varchar(50),
    @City varchar(50),
    @State char(2),
    @ZipCode char(10),
    @Contact varchar(50),
    @ContactTitle varchar(50),
    @Phone varchar(50),
    @Email varchar(50),
    @Subdivision varchar(256),
    @Location varchar(256),
    @HomesPerYear int,
    @SystemsPerHome int,
    @BuilderTypeStarter bit,
    @BuilderTypeCustom bit,
    @BuilderTypeApts bit,
    @BuilderTypeCondo bit,
    @Achieved100 varchar(3),
    @VendorNumber varchar(50),
    @EquipmentMfg varchar(50),
    @MfgCommitments varchar(50),
    @MfgCommitExp datetime,
    @IAQConcerns varchar(50),
    @CurrentSEER varchar(50),
    @OfferUpgrades bit,
    @UpgradeProcess varchar(50),
    @UpgradeFrom varchar(256),
    @LikeRebates bit,
    @RebateEnclosed bit,
    @RebateImproved varchar(256),
    @RequiresPriceList bit,
    @PriceListEnclosed bit,
    @DELETEDistributorBranch varchar(50),
    @DELETEBranchLocation varchar(50),
    @DistributorEmail varchar(50),
    @PresentationDate datetime,
    @CopiesRequired int,
    @CopiesSentName varchar(50),
    @CopiesSentCompany varchar(50),
    @CopiesSentAddress varchar(50),
    @CopiesSentCity varchar(50),
    @CopiesSentState char(2),
    @CopiesSentZipCode char(10),
    @CopiesSentPhone varchar(50),
    @RebateLevelModelHome varchar(50),
    @DisplayROI bit,
    @CreatedBy varchar(50),
    @Status varchar(16),
    @ProgramType varchar(50),
    @DeliveryMethod varchar(50),
    @OpenJobSites int,
    @SubmittedJobSites int,
    @ApprovedJobSites int,
    @AppByFinancing int,
    @CheckMailed int,
    @SendCreateEmail int,
    @ProposalSent datetime,
    @ProposalReceived datetime,
    @ShowNotesOnProposal bit,
    @ProposalNotes varchar(1024),
    @BGSPersonID uniqueidentifier,
    @RheemContractors int,
    @RuudContractors int,
    @InactiveReason varchar(50),
    @InactiveReasonDesc varchar(1024),
    @ProposalGenerated datetime
)

AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN

    DECLARE @UniqueRowCount Int
    IF @BuilderID = '00000000-0000-0000-0000-000000000000' SET @BuilderID = NULL
    IF @BuilderID IS NULL
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    SET @BuilderID = NewID()

                    INSERT
                    INTO [Builder]
                    (
                        [BuilderID],
                        [BuilderName],
                        [Division],
                        [Address],
                        [City],
                        [State],
                        [ZipCode],
                        [Contact],
                        [ContactTitle],
                        [Phone],
                        [Email],
                        [Subdivision],
                        [Location],
                        [HomesPerYear],
                        [SystemsPerHome],
                        [BuilderTypeStarter],
                        [BuilderTypeCustom],
                        [BuilderTypeApts],
                        [BuilderTypeCondo],
                        [Achieved100],
                        [VendorNumber],
                        [EquipmentMfg],
                        [MfgCommitments],
                        [MfgCommitExp],
                        [IAQConcerns],
                        [CurrentSEER],
                        [OfferUpgrades],
                        [UpgradeProcess],
                        [UpgradeFrom],
                        [LikeRebates],
                        [RebateEnclosed],
                        [RebateImproved],
                        [RequiresPriceList],
                        [PriceListEnclosed],
                        [DELETEDistributorBranch],
                        [DELETEBranchLocation],
                        [DistributorEmail],
                        [PresentationDate],
                        [CopiesRequired],
                        [CopiesSentName],
                        [CopiesSentCompany],
                        [CopiesSentAddress],
                        [CopiesSentCity],
                        [CopiesSentState],
                        [CopiesSentZipCode],
                        [CopiesSentPhone],
                        [RebateLevelModelHome],
                        [DisplayROI],
                        [CreatedBy],
                        [Status],
                        [ProgramType],
                        [DeliveryMethod],
                        [OpenJobSites],
                        [SubmittedJobSites],
                        [ApprovedJobSites],
                        [AppByFinancing],
                        [CheckMailed],
                        [SendCreateEmail],
                        [ProposalSent],
                        [ProposalReceived],
                        [ShowNotesOnProposal],
                        [ProposalNotes],
                        [BGSPersonID],
                        [RheemContractors],
                        [RuudContractors],
                        [InactiveReason],
                        [InactiveReasonDesc],
                        [ProposalGenerated]
                    )
                    VALUES
                    (
                        @BuilderID,
                        @BuilderName,
                        @Division,
                        @Address,
                        @City,
                        @State,
                        @ZipCode,
                        @Contact,
                        @ContactTitle,
                        @Phone,
                        @Email,
                        @Subdivision,
                        @Location,
                        @HomesPerYear,
                        @SystemsPerHome,
                        @BuilderTypeStarter,
                        @BuilderTypeCustom,
                        @BuilderTypeApts,
                        @BuilderTypeCondo,
                        @Achieved100,
                        @VendorNumber,
                        @EquipmentMfg,
                        @MfgCommitments,
                        @MfgCommitExp,
                        @IAQConcerns,
                        @CurrentSEER,
                        @OfferUpgrades,
                        @UpgradeProcess,
                        @UpgradeFrom,
                        @LikeRebates,
                        @RebateEnclosed,
                        @RebateImproved,
                        @RequiresPriceList,
                        @PriceListEnclosed,
                        @DELETEDistributorBranch,
                        @DELETEBranchLocation,
                        @DistributorEmail,
                        @PresentationDate,
                        @CopiesRequired,
                        @CopiesSentName,
                        @CopiesSentCompany,
                        @CopiesSentAddress,
                        @CopiesSentCity,
                        @CopiesSentState,
                        @CopiesSentZipCode,
                        @CopiesSentPhone,
                        @RebateLevelModelHome,
                        @DisplayROI,
                        @CreatedBy,
                        @Status,
                        @ProgramType,
                        @DeliveryMethod,
                        @OpenJobSites,
                        @SubmittedJobSites,
                        @ApprovedJobSites,
                        @AppByFinancing,
                        @CheckMailed,
                        @SendCreateEmail,
                        @ProposalSent,
                        @ProposalReceived,
                        @ShowNotesOnProposal,
                        @ProposalNotes,
                        @BGSPersonID,
                        @RheemContractors,
                        @RuudContractors,
                        @InactiveReason,
                        @InactiveReasonDesc,
                        @ProposalGenerated
                    )
                END
        END
    ELSE
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    UPDATE [Builder]
                    SET
                    [BuilderName] = @BuilderName,
                    [Division] = @Division,
                    [Address] = @Address,
                    [City] = @City,
                    [State] = @State,
                    [ZipCode] = @ZipCode,
                    [Contact] = @Contact,
                    [ContactTitle] = @ContactTitle,
                    [Phone] = @Phone,
                    [Email] = @Email,
                    [Subdivision] = @Subdivision,
                    [Location] = @Location,
                    [HomesPerYear] = @HomesPerYear,
                    [SystemsPerHome] = @SystemsPerHome,
                    [BuilderTypeStarter] = @BuilderTypeStarter,
                    [BuilderTypeCustom] = @BuilderTypeCustom,
                    [BuilderTypeApts] = @BuilderTypeApts,
                    [BuilderTypeCondo] = @BuilderTypeCondo,
                    [Achieved100] = @Achieved100,
                    [VendorNumber] = @VendorNumber,
                    [EquipmentMfg] = @EquipmentMfg,
                    [MfgCommitments] = @MfgCommitments,
                    [MfgCommitExp] = @MfgCommitExp,
                    [IAQConcerns] = @IAQConcerns,
                    [CurrentSEER] = @CurrentSEER,
                    [OfferUpgrades] = @OfferUpgrades,
                    [UpgradeProcess] = @UpgradeProcess,
                    [UpgradeFrom] = @UpgradeFrom,
                    [LikeRebates] = @LikeRebates,
                    [RebateEnclosed] = @RebateEnclosed,
                    [RebateImproved] = @RebateImproved,
                    [RequiresPriceList] = @RequiresPriceList,
                    [PriceListEnclosed] = @PriceListEnclosed,
                    [DELETEDistributorBranch] = @DELETEDistributorBranch,
                    [DELETEBranchLocation] = @DELETEBranchLocation,
                    [DistributorEmail] = @DistributorEmail,
                    [PresentationDate] = @PresentationDate,
                    [CopiesRequired] = @CopiesRequired,
                    [CopiesSentName] = @CopiesSentName,
                    [CopiesSentCompany] = @CopiesSentCompany,
                    [CopiesSentAddress] = @CopiesSentAddress,
                    [CopiesSentCity] = @CopiesSentCity,
                    [CopiesSentState] = @CopiesSentState,
                    [CopiesSentZipCode] = @CopiesSentZipCode,
                    [CopiesSentPhone] = @CopiesSentPhone,
                    [RebateLevelModelHome] = @RebateLevelModelHome,
                    [DisplayROI] = @DisplayROI,
                    [CreatedBy] = @CreatedBy,
                    [Status] = @Status,
                    [ProgramType] = @ProgramType,
                    [DeliveryMethod] = @DeliveryMethod,
                    [OpenJobSites] = @OpenJobSites,
                    [SubmittedJobSites] = @SubmittedJobSites,
                    [ApprovedJobSites] = @ApprovedJobSites,
                    [AppByFinancing] = @AppByFinancing,
                    [CheckMailed] = @CheckMailed,
                    [SendCreateEmail] = @SendCreateEmail,
                    [ProposalSent] = @ProposalSent,
                    [ProposalReceived] = @ProposalReceived,
                    [ShowNotesOnProposal] = @ShowNotesOnProposal,
                    [ProposalNotes] = @ProposalNotes,
                    [BGSPersonID] = @BGSPersonID,
                    [RheemContractors] = @RheemContractors,
                    [RuudContractors] = @RuudContractors,
                    [InactiveReason] = @InactiveReason,
                    [InactiveReasonDesc] = @InactiveReasonDesc,
                    [ProposalGenerated] = @ProposalGenerated
                    WHERE [BuilderID] = @BuilderID
                END
        END

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__Builder_Save Succeeded'
Else PRINT 'Procedure Creation: spGen__Builder_Save Error on Creation'
GO





/*
'===============================================================================
' Generated by GenerateDataAndObjectLayer Version 1.0.0.0
'
' <auto-generated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated. 
' </auto-generated>
'===============================================================================

*/
USE [RheemEvents]

/* ------------------------------------------------------------
   Get rid of obsolete InsertTask
   Get rid of obsolete UpdateTask
   Get rid of obsolete DeleteTask
   Get rid of obsolete SearchTaskByString
   Get rid of obsolete GetTaskByID
   ------------------------------------------------------------ */
If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('InsertTask') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE InsertTask;
        PRINT 'Dropped InsertTask'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('UpdateTask') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE UpdateTask;
        PRINT 'Dropped UpdateTask'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DeleteTask') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE DeleteTask;
        PRINT 'Dropped DeleteTask'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('SearchTaskByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE SearchTaskByString;
        PRINT 'Dropped SearchTaskByString'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('GetTaskByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE GetTaskByID;
        PRINT 'Dropped GetTaskByID'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__Task_GetByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__Task_GetByID;
        PRINT 'Dropped spGen__Task_GetByID'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__Task_GetByID

   Description:  Selects record(s) from table 'Task'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__Task_GetByID
(
    @TaskID uniqueidentifier

)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int

    Select [TaskID],[EventType],[TaskOrder],[Title],[DaysPrior]
    FROM [Task]
    WHERE [TaskID] = @TaskID

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__Task_GetByID Succeeded'
Else PRINT 'Procedure Creation: spGen__Task_GetByID Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__Task_SearchByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__Task_SearchByString;
        PRINT 'Dropped spGen__Task_SearchByString'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__Task_SearchByString

   Description:  Selects a record from table 'Task'
                 And puts values into parameters

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__Task_SearchByString
(
    @searchParam varchar(4000)
)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int
    DECLARE @strSql varchar(4000)

    SET @strSql = ' Select [TaskID],[EventType],[TaskOrder],[Title],[DaysPrior]
    FROM [Task]
    WHERE ' +  @searchParam

    EXEC(@strSql)

    --//We should NOT be using exec above.
    --//If params are NOT known, then be sure to clean sql
    --//If params are known, format like example below

    --IF @prodname IS NOT NULL
    --SELECT @sql = @sql + ' ProductName LIKE @prodname'
    --EXEC sp_executesql @sql, N'@prodname varchar(400)',@prodname

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__Task_SearchByString Succeeded'
Else PRINT 'Procedure Creation: spGen__Task_SearchByString Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__Task_Delete') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__Task_Delete;
        PRINT 'Dropped spGen__Task_Delete'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__Task_Delete

   Description:  Deletes a record from table 'Task'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__Task_Delete
(
    @TaskID uniqueidentifier

)
AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN
    DECLARE @Err Int


    DELETE FROM [Task]
    WHERE [TaskID] = @TaskID


End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__Task_Delete Succeeded'
Else PRINT 'Procedure Creation: spGen__Task_Delete Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__Task_Save') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__Task_Save;
        PRINT 'Dropped spGen__Task_Save'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__Task_Save

   Description:  Updates or Deletes a record In table 'Task'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__Task_Save
(
    @ErrText varchar(4000) output,
    @TaskID uniqueidentifier output,
    @EventType varchar(50),
    @TaskOrder int,
    @Title nvarchar(550),
    @DaysPrior int
)

AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN

    DECLARE @UniqueRowCount Int
    IF @TaskID = '00000000-0000-0000-0000-000000000000' SET @TaskID = NULL
    IF @TaskID IS NULL
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    SET @TaskID = NewID()

                    INSERT
                    INTO [Task]
                    (
                        [TaskID],
                        [EventType],
                        [TaskOrder],
                        [Title],
                        [DaysPrior]
                    )
                    VALUES
                    (
                        @TaskID,
                        @EventType,
                        @TaskOrder,
                        @Title,
                        @DaysPrior
                    )
                END
        END
    ELSE
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    UPDATE [Task]
                    SET
                    [EventType] = @EventType,
                    [TaskOrder] = @TaskOrder,
                    [Title] = @Title,
                    [DaysPrior] = @DaysPrior
                    WHERE [TaskID] = @TaskID
                END
        END

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__Task_Save Succeeded'
Else PRINT 'Procedure Creation: spGen__Task_Save Error on Creation'
GO





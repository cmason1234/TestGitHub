/*
'===============================================================================
' Generated by GenerateDataAndObjectLayer Version 1.0.0.0
'
' <auto-generated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated. 
' </auto-generated>
'===============================================================================

*/
USE [RheemEvents]

/* ------------------------------------------------------------
   Get rid of obsolete InsertCollateral
   Get rid of obsolete UpdateCollateral
   Get rid of obsolete DeleteCollateral
   Get rid of obsolete SearchCollateralByString
   Get rid of obsolete GetCollateralByID
   ------------------------------------------------------------ */
If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('InsertCollateral') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE InsertCollateral;
        PRINT 'Dropped InsertCollateral'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('UpdateCollateral') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE UpdateCollateral;
        PRINT 'Dropped UpdateCollateral'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DeleteCollateral') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE DeleteCollateral;
        PRINT 'Dropped DeleteCollateral'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('SearchCollateralByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE SearchCollateralByString;
        PRINT 'Dropped SearchCollateralByString'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('GetCollateralByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE GetCollateralByID;
        PRINT 'Dropped GetCollateralByID'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__Collateral_GetByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__Collateral_GetByID;
        PRINT 'Dropped spGen__Collateral_GetByID'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__Collateral_GetByID

   Description:  Selects record(s) from table 'Collateral'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__Collateral_GetByID
(
    @CollateralID uniqueidentifier

)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int

    Select [CollateralID],[IsActive],[CollateralType],[Brand],[Title],[Description],[Cost]
    FROM [Collateral]
    WHERE [CollateralID] = @CollateralID

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__Collateral_GetByID Succeeded'
Else PRINT 'Procedure Creation: spGen__Collateral_GetByID Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__Collateral_SearchByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__Collateral_SearchByString;
        PRINT 'Dropped spGen__Collateral_SearchByString'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__Collateral_SearchByString

   Description:  Selects a record from table 'Collateral'
                 And puts values into parameters

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__Collateral_SearchByString
(
    @searchParam varchar(4000)
)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int
    DECLARE @strSql varchar(4000)

    SET @strSql = ' Select [CollateralID],[IsActive],[CollateralType],[Brand],[Title],[Description],[Cost]
    FROM [Collateral]
    WHERE ' +  @searchParam

    EXEC(@strSql)

    --//We should NOT be using exec above.
    --//If params are NOT known, then be sure to clean sql
    --//If params are known, format like example below

    --IF @prodname IS NOT NULL
    --SELECT @sql = @sql + ' ProductName LIKE @prodname'
    --EXEC sp_executesql @sql, N'@prodname varchar(400)',@prodname

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__Collateral_SearchByString Succeeded'
Else PRINT 'Procedure Creation: spGen__Collateral_SearchByString Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__Collateral_Delete') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__Collateral_Delete;
        PRINT 'Dropped spGen__Collateral_Delete'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__Collateral_Delete

   Description:  Deletes a record from table 'Collateral'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__Collateral_Delete
(
    @CollateralID uniqueidentifier

)
AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN
    DECLARE @Err Int


    DELETE FROM [Collateral]
    WHERE [CollateralID] = @CollateralID


End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__Collateral_Delete Succeeded'
Else PRINT 'Procedure Creation: spGen__Collateral_Delete Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__Collateral_Save') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__Collateral_Save;
        PRINT 'Dropped spGen__Collateral_Save'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__Collateral_Save

   Description:  Updates or Deletes a record In table 'Collateral'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__Collateral_Save
(
    @ErrText varchar(4000) output,
    @CollateralID uniqueidentifier output,
    @IsActive int,
    @CollateralType varchar(50),
    @Brand varchar(50),
    @Title nvarchar(150),
    @Description ntext,
    @Cost money
)

AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN

    DECLARE @UniqueRowCount Int
    IF @CollateralID = '00000000-0000-0000-0000-000000000000' SET @CollateralID = NULL
    IF @CollateralID IS NULL
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    SET @CollateralID = NewID()

                    INSERT
                    INTO [Collateral]
                    (
                        [CollateralID],
                        [IsActive],
                        [CollateralType],
                        [Brand],
                        [Title],
                        [Description],
                        [Cost]
                    )
                    VALUES
                    (
                        @CollateralID,
                        @IsActive,
                        @CollateralType,
                        @Brand,
                        @Title,
                        @Description,
                        @Cost
                    )
                END
        END
    ELSE
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    UPDATE [Collateral]
                    SET
                    [IsActive] = @IsActive,
                    [CollateralType] = @CollateralType,
                    [Brand] = @Brand,
                    [Title] = @Title,
                    [Description] = @Description,
                    [Cost] = @Cost
                    WHERE [CollateralID] = @CollateralID
                END
        END

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__Collateral_Save Succeeded'
Else PRINT 'Procedure Creation: spGen__Collateral_Save Error on Creation'
GO





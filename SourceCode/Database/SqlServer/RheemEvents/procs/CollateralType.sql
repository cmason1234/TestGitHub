/*
'===============================================================================
' Generated by GenerateDataAndObjectLayer Version 1.0.0.0
'
' <auto-generated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated. 
' </auto-generated>
'===============================================================================

*/
USE [RheemEvents]

/* ------------------------------------------------------------
   Get rid of obsolete InsertCollateralType
   Get rid of obsolete UpdateCollateralType
   Get rid of obsolete DeleteCollateralType
   Get rid of obsolete SearchCollateralTypeByString
   Get rid of obsolete GetCollateralTypeByID
   ------------------------------------------------------------ */
If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('InsertCollateralType') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE InsertCollateralType;
        PRINT 'Dropped InsertCollateralType'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('UpdateCollateralType') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE UpdateCollateralType;
        PRINT 'Dropped UpdateCollateralType'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DeleteCollateralType') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE DeleteCollateralType;
        PRINT 'Dropped DeleteCollateralType'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('SearchCollateralTypeByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE SearchCollateralTypeByString;
        PRINT 'Dropped SearchCollateralTypeByString'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('GetCollateralTypeByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE GetCollateralTypeByID;
        PRINT 'Dropped GetCollateralTypeByID'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__CollateralType_GetByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__CollateralType_GetByID;
        PRINT 'Dropped spGen__CollateralType_GetByID'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__CollateralType_GetByID

   Description:  Selects record(s) from table 'CollateralType'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__CollateralType_GetByID
(
    @CollateralTypeID uniqueidentifier

)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int

    Select [CollateralTypeID],[CollateralType],[IsActive]
    FROM [CollateralType]
    WHERE [CollateralTypeID] = @CollateralTypeID

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__CollateralType_GetByID Succeeded'
Else PRINT 'Procedure Creation: spGen__CollateralType_GetByID Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__CollateralType_SearchByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__CollateralType_SearchByString;
        PRINT 'Dropped spGen__CollateralType_SearchByString'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__CollateralType_SearchByString

   Description:  Selects a record from table 'CollateralType'
                 And puts values into parameters

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__CollateralType_SearchByString
(
    @searchParam varchar(4000)
)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int
    DECLARE @strSql varchar(4000)

    SET @strSql = ' Select [CollateralTypeID],[CollateralType],[IsActive]
    FROM [CollateralType]
    WHERE ' +  @searchParam

    EXEC(@strSql)

    --//We should NOT be using exec above.
    --//If params are NOT known, then be sure to clean sql
    --//If params are known, format like example below

    --IF @prodname IS NOT NULL
    --SELECT @sql = @sql + ' ProductName LIKE @prodname'
    --EXEC sp_executesql @sql, N'@prodname varchar(400)',@prodname

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__CollateralType_SearchByString Succeeded'
Else PRINT 'Procedure Creation: spGen__CollateralType_SearchByString Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__CollateralType_Delete') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__CollateralType_Delete;
        PRINT 'Dropped spGen__CollateralType_Delete'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__CollateralType_Delete

   Description:  Deletes a record from table 'CollateralType'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__CollateralType_Delete
(
    @CollateralTypeID uniqueidentifier

)
AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN
    DECLARE @Err Int


    DELETE FROM [CollateralType]
    WHERE [CollateralTypeID] = @CollateralTypeID


End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__CollateralType_Delete Succeeded'
Else PRINT 'Procedure Creation: spGen__CollateralType_Delete Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__CollateralType_Save') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__CollateralType_Save;
        PRINT 'Dropped spGen__CollateralType_Save'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__CollateralType_Save

   Description:  Updates or Deletes a record In table 'CollateralType'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__CollateralType_Save
(
    @ErrText varchar(4000) output,
    @CollateralTypeID uniqueidentifier output,
    @CollateralType varchar(150),
    @IsActive bit
)

AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN

    DECLARE @UniqueRowCount Int
    IF @CollateralTypeID = '00000000-0000-0000-0000-000000000000' SET @CollateralTypeID = NULL
    IF @CollateralTypeID IS NULL
        BEGIN
            SELECT @UniqueRowCount = COUNT(1) FROM [CollateralType] where [CollateralType] = @CollateralType 
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = 'CollateralType ' + Convert(varchar(36), @CollateralType) + ' already exists'
                END
            ELSE
                BEGIN
                    SET @CollateralTypeID = NewID()

                    INSERT
                    INTO [CollateralType]
                    (
                        [CollateralTypeID],
                        [CollateralType],
                        [IsActive]
                    )
                    VALUES
                    (
                        @CollateralTypeID,
                        @CollateralType,
                        @IsActive
                    )
                END
        END
    ELSE
        BEGIN
            -- check to see that there isn't another row like this one (assuming the unique index column(s) might have changed)
            SELECT @UniqueRowCount = COUNT(1) FROM [CollateralType] where [CollateralType] = @CollateralType  and [CollateralTypeID] <> @CollateralTypeID
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = 'CollateralType ' + Convert(varchar(36), @CollateralType) + ' already exists'
                END
            ELSE
                BEGIN
                    UPDATE [CollateralType]
                    SET
                    [CollateralType] = @CollateralType,
                    [IsActive] = @IsActive
                    WHERE [CollateralTypeID] = @CollateralTypeID
                END
        END

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__CollateralType_Save Succeeded'
Else PRINT 'Procedure Creation: spGen__CollateralType_Save Error on Creation'
GO





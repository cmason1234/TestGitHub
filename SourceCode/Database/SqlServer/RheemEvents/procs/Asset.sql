/*
'===============================================================================
' Generated by GenerateDataAndObjectLayer Version 1.0.0.0
'
' <auto-generated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated. 
' </auto-generated>
'===============================================================================

*/
USE [RheemEvents]

/* ------------------------------------------------------------
   Get rid of obsolete InsertAsset
   Get rid of obsolete UpdateAsset
   Get rid of obsolete DeleteAsset
   Get rid of obsolete SearchAssetByString
   Get rid of obsolete GetAssetByID
   ------------------------------------------------------------ */
If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('InsertAsset') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE InsertAsset;
        PRINT 'Dropped InsertAsset'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('UpdateAsset') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE UpdateAsset;
        PRINT 'Dropped UpdateAsset'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DeleteAsset') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE DeleteAsset;
        PRINT 'Dropped DeleteAsset'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('SearchAssetByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE SearchAssetByString;
        PRINT 'Dropped SearchAssetByString'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('GetAssetByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE GetAssetByID;
        PRINT 'Dropped GetAssetByID'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__Asset_GetByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__Asset_GetByID;
        PRINT 'Dropped spGen__Asset_GetByID'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__Asset_GetByID

   Description:  Selects record(s) from table 'Asset'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__Asset_GetByID
(
    @AssetID uniqueidentifier

)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int

    Select [AssetID],[AssetTag],[IsActive],[IsAvailable],[Brand],[Title],[AssetCategory],[Description],[ShipWeightLbs],[ShipLengthInches],[ShipWidthInches],[ShipHeightInches],[ShipLeadDays]
    FROM [Asset]
    WHERE [AssetID] = @AssetID

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__Asset_GetByID Succeeded'
Else PRINT 'Procedure Creation: spGen__Asset_GetByID Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__Asset_SearchByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__Asset_SearchByString;
        PRINT 'Dropped spGen__Asset_SearchByString'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__Asset_SearchByString

   Description:  Selects a record from table 'Asset'
                 And puts values into parameters

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__Asset_SearchByString
(
    @searchParam varchar(4000)
)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int
    DECLARE @strSql varchar(4000)

    SET @strSql = ' Select [AssetID],[AssetTag],[IsActive],[IsAvailable],[Brand],[Title],[AssetCategory],[Description],[ShipWeightLbs],[ShipLengthInches],[ShipWidthInches],[ShipHeightInches],[ShipLeadDays]
    FROM [Asset]
    WHERE ' +  @searchParam

    EXEC(@strSql)

    --//We should NOT be using exec above.
    --//If params are NOT known, then be sure to clean sql
    --//If params are known, format like example below

    --IF @prodname IS NOT NULL
    --SELECT @sql = @sql + ' ProductName LIKE @prodname'
    --EXEC sp_executesql @sql, N'@prodname varchar(400)',@prodname

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__Asset_SearchByString Succeeded'
Else PRINT 'Procedure Creation: spGen__Asset_SearchByString Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__Asset_Delete') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__Asset_Delete;
        PRINT 'Dropped spGen__Asset_Delete'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__Asset_Delete

   Description:  Deletes a record from table 'Asset'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__Asset_Delete
(
    @AssetID uniqueidentifier

)
AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN
    DECLARE @Err Int


    DELETE FROM [Asset]
    WHERE [AssetID] = @AssetID


End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__Asset_Delete Succeeded'
Else PRINT 'Procedure Creation: spGen__Asset_Delete Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__Asset_Save') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__Asset_Save;
        PRINT 'Dropped spGen__Asset_Save'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__Asset_Save

   Description:  Updates or Deletes a record In table 'Asset'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__Asset_Save
(
    @ErrText varchar(4000) output,
    @AssetID uniqueidentifier output,
    @AssetTag varchar(50),
    @IsActive bit,
    @IsAvailable int,
    @Brand varchar(50),
    @Title nvarchar(150),
    @AssetCategory varchar(150),
    @Description ntext,
    @ShipWeightLbs int,
    @ShipLengthInches int,
    @ShipWidthInches int,
    @ShipHeightInches int,
    @ShipLeadDays int
)

AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN

    DECLARE @UniqueRowCount Int
    IF @AssetID = '00000000-0000-0000-0000-000000000000' SET @AssetID = NULL
    IF @AssetID IS NULL
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    SET @AssetID = NewID()

                    INSERT
                    INTO [Asset]
                    (
                        [AssetID],
                        [AssetTag],
                        [IsActive],
                        [IsAvailable],
                        [Brand],
                        [Title],
                        [AssetCategory],
                        [Description],
                        [ShipWeightLbs],
                        [ShipLengthInches],
                        [ShipWidthInches],
                        [ShipHeightInches],
                        [ShipLeadDays]
                    )
                    VALUES
                    (
                        @AssetID,
                        @AssetTag,
                        @IsActive,
                        @IsAvailable,
                        @Brand,
                        @Title,
                        @AssetCategory,
                        @Description,
                        @ShipWeightLbs,
                        @ShipLengthInches,
                        @ShipWidthInches,
                        @ShipHeightInches,
                        @ShipLeadDays
                    )
                END
        END
    ELSE
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    UPDATE [Asset]
                    SET
                    [AssetTag] = @AssetTag,
                    [IsActive] = @IsActive,
                    [IsAvailable] = @IsAvailable,
                    [Brand] = @Brand,
                    [Title] = @Title,
                    [AssetCategory] = @AssetCategory,
                    [Description] = @Description,
                    [ShipWeightLbs] = @ShipWeightLbs,
                    [ShipLengthInches] = @ShipLengthInches,
                    [ShipWidthInches] = @ShipWidthInches,
                    [ShipHeightInches] = @ShipHeightInches,
                    [ShipLeadDays] = @ShipLeadDays
                    WHERE [AssetID] = @AssetID
                END
        END

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__Asset_Save Succeeded'
Else PRINT 'Procedure Creation: spGen__Asset_Save Error on Creation'
GO





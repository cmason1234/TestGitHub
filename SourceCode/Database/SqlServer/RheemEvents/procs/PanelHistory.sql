/*
'===============================================================================
' Generated by GenerateDataAndObjectLayer Version 1.0.0.0
'
' <auto-generated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated. 
' </auto-generated>
'===============================================================================

*/
USE [RheemEvents]

/* ------------------------------------------------------------
   Get rid of obsolete InsertPanelHistory
   Get rid of obsolete UpdatePanelHistory
   Get rid of obsolete DeletePanelHistory
   Get rid of obsolete SearchPanelHistoryByString
   Get rid of obsolete GetPanelHistoryByID
   ------------------------------------------------------------ */
If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('InsertPanelHistory') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE InsertPanelHistory;
        PRINT 'Dropped InsertPanelHistory'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('UpdatePanelHistory') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE UpdatePanelHistory;
        PRINT 'Dropped UpdatePanelHistory'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DeletePanelHistory') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE DeletePanelHistory;
        PRINT 'Dropped DeletePanelHistory'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('SearchPanelHistoryByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE SearchPanelHistoryByString;
        PRINT 'Dropped SearchPanelHistoryByString'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('GetPanelHistoryByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE GetPanelHistoryByID;
        PRINT 'Dropped GetPanelHistoryByID'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__PanelHistory_GetByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__PanelHistory_GetByID;
        PRINT 'Dropped spGen__PanelHistory_GetByID'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__PanelHistory_GetByID

   Description:  Selects record(s) from table 'PanelHistory'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__PanelHistory_GetByID
(
    @PanelHistoryID uniqueidentifier

)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int

    Select [PanelHistoryID],[PanelID],[ApprovedOrDenied],[ApprovedOrDeniedDate],[ApprovingPersonID]
    FROM [PanelHistory]
    WHERE [PanelHistoryID] = @PanelHistoryID

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__PanelHistory_GetByID Succeeded'
Else PRINT 'Procedure Creation: spGen__PanelHistory_GetByID Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__PanelHistory_SearchByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__PanelHistory_SearchByString;
        PRINT 'Dropped spGen__PanelHistory_SearchByString'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__PanelHistory_SearchByString

   Description:  Selects a record from table 'PanelHistory'
                 And puts values into parameters

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__PanelHistory_SearchByString
(
    @searchParam varchar(4000)
)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int
    DECLARE @strSql varchar(4000)

    SET @strSql = ' Select [PanelHistoryID],[PanelID],[ApprovedOrDenied],[ApprovedOrDeniedDate],[ApprovingPersonID]
    FROM [PanelHistory]
    WHERE ' +  @searchParam

    EXEC(@strSql)

    --//We should NOT be using exec above.
    --//If params are NOT known, then be sure to clean sql
    --//If params are known, format like example below

    --IF @prodname IS NOT NULL
    --SELECT @sql = @sql + ' ProductName LIKE @prodname'
    --EXEC sp_executesql @sql, N'@prodname varchar(400)',@prodname

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__PanelHistory_SearchByString Succeeded'
Else PRINT 'Procedure Creation: spGen__PanelHistory_SearchByString Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__PanelHistory_Delete') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__PanelHistory_Delete;
        PRINT 'Dropped spGen__PanelHistory_Delete'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__PanelHistory_Delete

   Description:  Deletes a record from table 'PanelHistory'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__PanelHistory_Delete
(
    @PanelHistoryID uniqueidentifier

)
AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN
    DECLARE @Err Int


    DELETE FROM [PanelHistory]
    WHERE [PanelHistoryID] = @PanelHistoryID


End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__PanelHistory_Delete Succeeded'
Else PRINT 'Procedure Creation: spGen__PanelHistory_Delete Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__PanelHistory_Save') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__PanelHistory_Save;
        PRINT 'Dropped spGen__PanelHistory_Save'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__PanelHistory_Save

   Description:  Updates or Deletes a record In table 'PanelHistory'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__PanelHistory_Save
(
    @ErrText varchar(4000) output,
    @PanelHistoryID uniqueidentifier output,
    @PanelID uniqueidentifier,
    @ApprovedOrDenied varchar(50),
    @ApprovedOrDeniedDate datetime,
    @ApprovingPersonID uniqueidentifier
)

AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN

    DECLARE @UniqueRowCount Int
    IF @PanelHistoryID = '00000000-0000-0000-0000-000000000000' SET @PanelHistoryID = NULL
    IF @PanelHistoryID IS NULL
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    SET @PanelHistoryID = NewID()

                    INSERT
                    INTO [PanelHistory]
                    (
                        [PanelHistoryID],
                        [PanelID],
                        [ApprovedOrDenied],
                        [ApprovedOrDeniedDate],
                        [ApprovingPersonID]
                    )
                    VALUES
                    (
                        @PanelHistoryID,
                        @PanelID,
                        @ApprovedOrDenied,
                        @ApprovedOrDeniedDate,
                        @ApprovingPersonID
                    )
                END
        END
    ELSE
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    UPDATE [PanelHistory]
                    SET
                    [PanelID] = @PanelID,
                    [ApprovedOrDenied] = @ApprovedOrDenied,
                    [ApprovedOrDeniedDate] = @ApprovedOrDeniedDate,
                    [ApprovingPersonID] = @ApprovingPersonID
                    WHERE [PanelHistoryID] = @PanelHistoryID
                END
        END

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__PanelHistory_Save Succeeded'
Else PRINT 'Procedure Creation: spGen__PanelHistory_Save Error on Creation'
GO





/*
'===============================================================================
' Generated by GenerateDataAndObjectLayer Version 1.0.0.0
'
' <auto-generated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated. 
' </auto-generated>
'===============================================================================

*/
USE [RheemEvents]

/* ------------------------------------------------------------
   Get rid of obsolete InsertPanel
   Get rid of obsolete UpdatePanel
   Get rid of obsolete DeletePanel
   Get rid of obsolete SearchPanelByString
   Get rid of obsolete GetPanelByID
   ------------------------------------------------------------ */
If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('InsertPanel') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE InsertPanel;
        PRINT 'Dropped InsertPanel'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('UpdatePanel') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE UpdatePanel;
        PRINT 'Dropped UpdatePanel'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DeletePanel') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE DeletePanel;
        PRINT 'Dropped DeletePanel'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('SearchPanelByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE SearchPanelByString;
        PRINT 'Dropped SearchPanelByString'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('GetPanelByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE GetPanelByID;
        PRINT 'Dropped GetPanelByID'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__Panel_GetByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__Panel_GetByID;
        PRINT 'Dropped spGen__Panel_GetByID'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__Panel_GetByID

   Description:  Selects record(s) from table 'Panel'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__Panel_GetByID
(
    @PanelID uniqueidentifier

)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int

    Select [PanelID],[ParentAssetID],[PanelType],[PanelPosition],[PanelName],[ImageID]
    FROM [Panel]
    WHERE [PanelID] = @PanelID

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__Panel_GetByID Succeeded'
Else PRINT 'Procedure Creation: spGen__Panel_GetByID Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__Panel_SearchByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__Panel_SearchByString;
        PRINT 'Dropped spGen__Panel_SearchByString'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__Panel_SearchByString

   Description:  Selects a record from table 'Panel'
                 And puts values into parameters

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__Panel_SearchByString
(
    @searchParam varchar(4000)
)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int
    DECLARE @strSql varchar(4000)

    SET @strSql = ' Select [PanelID],[ParentAssetID],[PanelType],[PanelPosition],[PanelName],[ImageID]
    FROM [Panel]
    WHERE ' +  @searchParam

    EXEC(@strSql)

    --//We should NOT be using exec above.
    --//If params are NOT known, then be sure to clean sql
    --//If params are known, format like example below

    --IF @prodname IS NOT NULL
    --SELECT @sql = @sql + ' ProductName LIKE @prodname'
    --EXEC sp_executesql @sql, N'@prodname varchar(400)',@prodname

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__Panel_SearchByString Succeeded'
Else PRINT 'Procedure Creation: spGen__Panel_SearchByString Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__Panel_Delete') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__Panel_Delete;
        PRINT 'Dropped spGen__Panel_Delete'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__Panel_Delete

   Description:  Deletes a record from table 'Panel'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__Panel_Delete
(
    @PanelID uniqueidentifier

)
AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN
    DECLARE @Err Int


    DELETE FROM [Panel]
    WHERE [PanelID] = @PanelID


End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__Panel_Delete Succeeded'
Else PRINT 'Procedure Creation: spGen__Panel_Delete Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__Panel_Save') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__Panel_Save;
        PRINT 'Dropped spGen__Panel_Save'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__Panel_Save

   Description:  Updates or Deletes a record In table 'Panel'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__Panel_Save
(
    @ErrText varchar(4000) output,
    @PanelID uniqueidentifier output,
    @ParentAssetID uniqueidentifier,
    @PanelType varchar(50),
    @PanelPosition int,
    @PanelName varchar(150),
    @ImageID uniqueidentifier
)

AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN

    DECLARE @UniqueRowCount Int
    IF @PanelID = '00000000-0000-0000-0000-000000000000' SET @PanelID = NULL
    IF @PanelID IS NULL
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    SET @PanelID = NewID()

                    INSERT
                    INTO [Panel]
                    (
                        [PanelID],
                        [ParentAssetID],
                        [PanelType],
                        [PanelPosition],
                        [PanelName],
                        [ImageID]
                    )
                    VALUES
                    (
                        @PanelID,
                        @ParentAssetID,
                        @PanelType,
                        @PanelPosition,
                        @PanelName,
                        @ImageID
                    )
                END
        END
    ELSE
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    UPDATE [Panel]
                    SET
                    [ParentAssetID] = @ParentAssetID,
                    [PanelType] = @PanelType,
                    [PanelPosition] = @PanelPosition,
                    [PanelName] = @PanelName,
                    [ImageID] = @ImageID
                    WHERE [PanelID] = @PanelID
                END
        END

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__Panel_Save Succeeded'
Else PRINT 'Procedure Creation: spGen__Panel_Save Error on Creation'
GO





/*
'===============================================================================
' Generated by GenerateDataAndObjectLayer Version 1.0.0.0
'
' <auto-generated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated. 
' </auto-generated>
'===============================================================================

*/
USE [RheemDB]

/* ------------------------------------------------------------
   Get rid of obsolete InsertCNTemplate
   Get rid of obsolete UpdateCNTemplate
   Get rid of obsolete DeleteCNTemplate
   Get rid of obsolete SearchCNTemplateByString
   Get rid of obsolete GetCNTemplateByID
   ------------------------------------------------------------ */
If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('InsertCNTemplate') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE InsertCNTemplate;
        PRINT 'Dropped InsertCNTemplate'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('UpdateCNTemplate') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE UpdateCNTemplate;
        PRINT 'Dropped UpdateCNTemplate'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DeleteCNTemplate') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE DeleteCNTemplate;
        PRINT 'Dropped DeleteCNTemplate'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('SearchCNTemplateByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE SearchCNTemplateByString;
        PRINT 'Dropped SearchCNTemplateByString'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('GetCNTemplateByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE GetCNTemplateByID;
        PRINT 'Dropped GetCNTemplateByID'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__CNTemplate_GetByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__CNTemplate_GetByID;
        PRINT 'Dropped spGen__CNTemplate_GetByID'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__CNTemplate_GetByID

   Description:  Selects record(s) from table 'CNTemplate'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__CNTemplate_GetByID
(
    @CNTemplateID uniqueidentifier

)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int

    Select [CNTemplateID],[CNCategoryID],[BrandID],[TemplateHTML]
    FROM [CNTemplate]
    WHERE [CNTemplateID] = @CNTemplateID

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__CNTemplate_GetByID Succeeded'
Else PRINT 'Procedure Creation: spGen__CNTemplate_GetByID Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__CNTemplate_SearchByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__CNTemplate_SearchByString;
        PRINT 'Dropped spGen__CNTemplate_SearchByString'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__CNTemplate_SearchByString

   Description:  Selects a record from table 'CNTemplate'
                 And puts values into parameters

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__CNTemplate_SearchByString
(
    @searchParam varchar(4000)
)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int
    DECLARE @strSql varchar(4000)

    SET @strSql = ' Select [CNTemplateID],[CNCategoryID],[BrandID],[TemplateHTML]
    FROM [CNTemplate]
    WHERE ' +  @searchParam

    EXEC(@strSql)

    --//We should NOT be using exec above.
    --//If params are NOT known, then be sure to clean sql
    --//If params are known, format like example below

    --IF @prodname IS NOT NULL
    --SELECT @sql = @sql + ' ProductName LIKE @prodname'
    --EXEC sp_executesql @sql, N'@prodname varchar(400)',@prodname

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__CNTemplate_SearchByString Succeeded'
Else PRINT 'Procedure Creation: spGen__CNTemplate_SearchByString Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__CNTemplate_Delete') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__CNTemplate_Delete;
        PRINT 'Dropped spGen__CNTemplate_Delete'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__CNTemplate_Delete

   Description:  Deletes a record from table 'CNTemplate'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__CNTemplate_Delete
(
    @CNTemplateID uniqueidentifier

)
AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN
    DECLARE @Err Int


    DELETE FROM [CNTemplate]
    WHERE [CNTemplateID] = @CNTemplateID


End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__CNTemplate_Delete Succeeded'
Else PRINT 'Procedure Creation: spGen__CNTemplate_Delete Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__CNTemplate_Save') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__CNTemplate_Save;
        PRINT 'Dropped spGen__CNTemplate_Save'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__CNTemplate_Save

   Description:  Updates or Deletes a record In table 'CNTemplate'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__CNTemplate_Save
(
    @ErrText varchar(4000) output,
    @CNTemplateID uniqueidentifier output,
    @CNCategoryID uniqueidentifier,
    @BrandID uniqueidentifier,
    @TemplateHTML text
)

AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN

    DECLARE @UniqueRowCount Int
    IF @CNTemplateID = '00000000-0000-0000-0000-000000000000' SET @CNTemplateID = NULL
    IF @CNTemplateID IS NULL
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    SET @CNTemplateID = NewID()

                    INSERT
                    INTO [CNTemplate]
                    (
                        [CNTemplateID],
                        [CNCategoryID],
                        [BrandID],
                        [TemplateHTML]
                    )
                    VALUES
                    (
                        @CNTemplateID,
                        @CNCategoryID,
                        @BrandID,
                        @TemplateHTML
                    )
                END
        END
    ELSE
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    UPDATE [CNTemplate]
                    SET
                    [CNCategoryID] = @CNCategoryID,
                    [BrandID] = @BrandID,
                    [TemplateHTML] = @TemplateHTML
                    WHERE [CNTemplateID] = @CNTemplateID
                END
        END

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__CNTemplate_Save Succeeded'
Else PRINT 'Procedure Creation: spGen__CNTemplate_Save Error on Creation'
GO





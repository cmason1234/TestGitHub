/*
'===============================================================================
' Generated by GenerateDataAndObjectLayer Version 1.0.0.0
'
' <auto-generated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated. 
' </auto-generated>
'===============================================================================

*/
USE [RheemDB]

/* ------------------------------------------------------------
   Get rid of obsolete InsertEC_CreditProductDescription
   Get rid of obsolete UpdateEC_CreditProductDescription
   Get rid of obsolete DeleteEC_CreditProductDescription
   Get rid of obsolete SearchEC_CreditProductDescriptionByString
   Get rid of obsolete GetEC_CreditProductDescriptionByID
   ------------------------------------------------------------ */
If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('InsertEC_CreditProductDescription') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE InsertEC_CreditProductDescription;
        PRINT 'Dropped InsertEC_CreditProductDescription'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('UpdateEC_CreditProductDescription') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE UpdateEC_CreditProductDescription;
        PRINT 'Dropped UpdateEC_CreditProductDescription'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DeleteEC_CreditProductDescription') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE DeleteEC_CreditProductDescription;
        PRINT 'Dropped DeleteEC_CreditProductDescription'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('SearchEC_CreditProductDescriptionByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE SearchEC_CreditProductDescriptionByString;
        PRINT 'Dropped SearchEC_CreditProductDescriptionByString'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('GetEC_CreditProductDescriptionByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE GetEC_CreditProductDescriptionByID;
        PRINT 'Dropped GetEC_CreditProductDescriptionByID'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__EC_CreditProductDescription_GetByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__EC_CreditProductDescription_GetByID;
        PRINT 'Dropped spGen__EC_CreditProductDescription_GetByID'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__EC_CreditProductDescription_GetByID

   Description:  Selects record(s) from table 'EC_CreditProductDescription'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__EC_CreditProductDescription_GetByID
(
    @CreditProductDescriptionID uniqueidentifier

)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int

    Select [CreditProductDescriptionID],[ProductDescription],[CreditMarketingCodeID],[IsActive],[SortOrder]
    FROM [EC_CreditProductDescription]
    WHERE [CreditProductDescriptionID] = @CreditProductDescriptionID

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__EC_CreditProductDescription_GetByID Succeeded'
Else PRINT 'Procedure Creation: spGen__EC_CreditProductDescription_GetByID Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__EC_CreditProductDescription_SearchByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__EC_CreditProductDescription_SearchByString;
        PRINT 'Dropped spGen__EC_CreditProductDescription_SearchByString'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__EC_CreditProductDescription_SearchByString

   Description:  Selects a record from table 'EC_CreditProductDescription'
                 And puts values into parameters

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__EC_CreditProductDescription_SearchByString
(
    @searchParam varchar(4000)
)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int
    DECLARE @strSql varchar(4000)

    SET @strSql = ' Select [CreditProductDescriptionID],[ProductDescription],[CreditMarketingCodeID],[IsActive],[SortOrder]
    FROM [EC_CreditProductDescription]
    WHERE ' +  @searchParam

    EXEC(@strSql)

    --//We should NOT be using exec above.
    --//If params are NOT known, then be sure to clean sql
    --//If params are known, format like example below

    --IF @prodname IS NOT NULL
    --SELECT @sql = @sql + ' ProductName LIKE @prodname'
    --EXEC sp_executesql @sql, N'@prodname varchar(400)',@prodname

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__EC_CreditProductDescription_SearchByString Succeeded'
Else PRINT 'Procedure Creation: spGen__EC_CreditProductDescription_SearchByString Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__EC_CreditProductDescription_Delete') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__EC_CreditProductDescription_Delete;
        PRINT 'Dropped spGen__EC_CreditProductDescription_Delete'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__EC_CreditProductDescription_Delete

   Description:  Deletes a record from table 'EC_CreditProductDescription'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__EC_CreditProductDescription_Delete
(
    @CreditProductDescriptionID uniqueidentifier

)
AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN
    DECLARE @Err Int


    DELETE FROM [EC_CreditProductDescription]
    WHERE [CreditProductDescriptionID] = @CreditProductDescriptionID


End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__EC_CreditProductDescription_Delete Succeeded'
Else PRINT 'Procedure Creation: spGen__EC_CreditProductDescription_Delete Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__EC_CreditProductDescription_Save') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__EC_CreditProductDescription_Save;
        PRINT 'Dropped spGen__EC_CreditProductDescription_Save'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__EC_CreditProductDescription_Save

   Description:  Updates or Deletes a record In table 'EC_CreditProductDescription'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__EC_CreditProductDescription_Save
(
    @ErrText varchar(4000) output,
    @CreditProductDescriptionID uniqueidentifier output,
    @ProductDescription varchar(50),
    @CreditMarketingCodeID uniqueidentifier,
    @IsActive bit,
    @SortOrder int
)

AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN

    DECLARE @UniqueRowCount Int
    IF @CreditProductDescriptionID = '00000000-0000-0000-0000-000000000000' SET @CreditProductDescriptionID = NULL
    IF @CreditProductDescriptionID IS NULL
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    SET @CreditProductDescriptionID = NewID()

                    INSERT
                    INTO [EC_CreditProductDescription]
                    (
                        [CreditProductDescriptionID],
                        [ProductDescription],
                        [CreditMarketingCodeID],
                        [IsActive],
                        [SortOrder]
                    )
                    VALUES
                    (
                        @CreditProductDescriptionID,
                        @ProductDescription,
                        @CreditMarketingCodeID,
                        @IsActive,
                        @SortOrder
                    )
                END
        END
    ELSE
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    UPDATE [EC_CreditProductDescription]
                    SET
                    [ProductDescription] = @ProductDescription,
                    [CreditMarketingCodeID] = @CreditMarketingCodeID,
                    [IsActive] = @IsActive,
                    [SortOrder] = @SortOrder
                    WHERE [CreditProductDescriptionID] = @CreditProductDescriptionID
                END
        END

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__EC_CreditProductDescription_Save Succeeded'
Else PRINT 'Procedure Creation: spGen__EC_CreditProductDescription_Save Error on Creation'
GO





/*
'===============================================================================
' Generated by GenerateDataAndObjectLayer Version 1.0.0.0
'
' <auto-generated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated. 
' </auto-generated>
'===============================================================================

*/
USE [RheemDB]

/* ------------------------------------------------------------
   Get rid of obsolete InsertEC_DistributorTag
   Get rid of obsolete UpdateEC_DistributorTag
   Get rid of obsolete DeleteEC_DistributorTag
   Get rid of obsolete SearchEC_DistributorTagByString
   Get rid of obsolete GetEC_DistributorTagByID
   ------------------------------------------------------------ */
If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('InsertEC_DistributorTag') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE InsertEC_DistributorTag;
        PRINT 'Dropped InsertEC_DistributorTag'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('UpdateEC_DistributorTag') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE UpdateEC_DistributorTag;
        PRINT 'Dropped UpdateEC_DistributorTag'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DeleteEC_DistributorTag') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE DeleteEC_DistributorTag;
        PRINT 'Dropped DeleteEC_DistributorTag'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('SearchEC_DistributorTagByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE SearchEC_DistributorTagByString;
        PRINT 'Dropped SearchEC_DistributorTagByString'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('GetEC_DistributorTagByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE GetEC_DistributorTagByID;
        PRINT 'Dropped GetEC_DistributorTagByID'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__EC_DistributorTag_GetByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__EC_DistributorTag_GetByID;
        PRINT 'Dropped spGen__EC_DistributorTag_GetByID'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__EC_DistributorTag_GetByID

   Description:  Selects record(s) from table 'EC_DistributorTag'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__EC_DistributorTag_GetByID
(
    @EC_DistributorTagID uniqueidentifier

)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int

    Select [EC_DistributorTagID],[GDPClaimYear],[OrganizationID],[TagName],[GDPBudget],[TCBudget],[WHBudget],[SPBudget],[PROSTOCKBudget]
    FROM [EC_DistributorTag]
    WHERE [EC_DistributorTagID] = @EC_DistributorTagID

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__EC_DistributorTag_GetByID Succeeded'
Else PRINT 'Procedure Creation: spGen__EC_DistributorTag_GetByID Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__EC_DistributorTag_SearchByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__EC_DistributorTag_SearchByString;
        PRINT 'Dropped spGen__EC_DistributorTag_SearchByString'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__EC_DistributorTag_SearchByString

   Description:  Selects a record from table 'EC_DistributorTag'
                 And puts values into parameters

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__EC_DistributorTag_SearchByString
(
    @searchParam varchar(4000)
)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int
    DECLARE @strSql varchar(4000)

    SET @strSql = ' Select [EC_DistributorTagID],[GDPClaimYear],[OrganizationID],[TagName],[GDPBudget],[TCBudget],[WHBudget],[SPBudget],[PROSTOCKBudget]
    FROM [EC_DistributorTag]
    WHERE ' +  @searchParam

    EXEC(@strSql)

    --//We should NOT be using exec above.
    --//If params are NOT known, then be sure to clean sql
    --//If params are known, format like example below

    --IF @prodname IS NOT NULL
    --SELECT @sql = @sql + ' ProductName LIKE @prodname'
    --EXEC sp_executesql @sql, N'@prodname varchar(400)',@prodname

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__EC_DistributorTag_SearchByString Succeeded'
Else PRINT 'Procedure Creation: spGen__EC_DistributorTag_SearchByString Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__EC_DistributorTag_Delete') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__EC_DistributorTag_Delete;
        PRINT 'Dropped spGen__EC_DistributorTag_Delete'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__EC_DistributorTag_Delete

   Description:  Deletes a record from table 'EC_DistributorTag'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__EC_DistributorTag_Delete
(
    @EC_DistributorTagID uniqueidentifier

)
AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN
    DECLARE @Err Int


    DELETE FROM [EC_DistributorTag]
    WHERE [EC_DistributorTagID] = @EC_DistributorTagID


End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__EC_DistributorTag_Delete Succeeded'
Else PRINT 'Procedure Creation: spGen__EC_DistributorTag_Delete Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__EC_DistributorTag_Save') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__EC_DistributorTag_Save;
        PRINT 'Dropped spGen__EC_DistributorTag_Save'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__EC_DistributorTag_Save

   Description:  Updates or Deletes a record In table 'EC_DistributorTag'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__EC_DistributorTag_Save
(
    @ErrText varchar(4000) output,
    @EC_DistributorTagID uniqueidentifier output,
    @GDPClaimYear int,
    @OrganizationID uniqueidentifier,
    @TagName varchar(50),
    @GDPBudget bit,
    @TCBudget bit,
    @WHBudget bit,
    @SPBudget bit,
    @PROSTOCKBudget bit
)

AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN

    DECLARE @UniqueRowCount Int
    IF @EC_DistributorTagID = '00000000-0000-0000-0000-000000000000' SET @EC_DistributorTagID = NULL
    IF @EC_DistributorTagID IS NULL
        BEGIN
            SELECT @UniqueRowCount = COUNT(1) FROM [EC_DistributorTag] where [GDPClaimYear] = @GDPClaimYear and [OrganizationID] = @OrganizationID and [TagName] = @TagName and [GDPBudget] = @GDPBudget and [TCBudget] = @TCBudget and [WHBudget] = @WHBudget and [SPBudget] = @SPBudget and [PROSTOCKBudget] = @PROSTOCKBudget 
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = 'A row matching these unique index columns was found: GDPClaimYear, OrganizationID, TagName, GDPBudget, TCBudget, WHBudget, SPBudget, PROSTOCKBudget'
                END
            ELSE
                BEGIN
                    SET @EC_DistributorTagID = NewID()

                    INSERT
                    INTO [EC_DistributorTag]
                    (
                        [EC_DistributorTagID],
                        [GDPClaimYear],
                        [OrganizationID],
                        [TagName],
                        [GDPBudget],
                        [TCBudget],
                        [WHBudget],
                        [SPBudget],
                        [PROSTOCKBudget]
                    )
                    VALUES
                    (
                        @EC_DistributorTagID,
                        @GDPClaimYear,
                        @OrganizationID,
                        @TagName,
                        @GDPBudget,
                        @TCBudget,
                        @WHBudget,
                        @SPBudget,
                        @PROSTOCKBudget
                    )
                END
        END
    ELSE
        BEGIN
            -- check to see that there isn't another row like this one (assuming the unique index column(s) might have changed)
            SELECT @UniqueRowCount = COUNT(1) FROM [EC_DistributorTag] where [GDPClaimYear] = @GDPClaimYear and [OrganizationID] = @OrganizationID and [TagName] = @TagName and [GDPBudget] = @GDPBudget and [TCBudget] = @TCBudget and [WHBudget] = @WHBudget and [SPBudget] = @SPBudget and [PROSTOCKBudget] = @PROSTOCKBudget  and [EC_DistributorTagID] <> @EC_DistributorTagID
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = 'A row matching these unique index columns was found: GDPClaimYear, OrganizationID, TagName, GDPBudget, TCBudget, WHBudget, SPBudget, PROSTOCKBudget'
                END
            ELSE
                BEGIN
                    UPDATE [EC_DistributorTag]
                    SET
                    [GDPClaimYear] = @GDPClaimYear,
                    [OrganizationID] = @OrganizationID,
                    [TagName] = @TagName,
                    [GDPBudget] = @GDPBudget,
                    [TCBudget] = @TCBudget,
                    [WHBudget] = @WHBudget,
                    [SPBudget] = @SPBudget,
                    [PROSTOCKBudget] = @PROSTOCKBudget
                    WHERE [EC_DistributorTagID] = @EC_DistributorTagID
                END
        END

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__EC_DistributorTag_Save Succeeded'
Else PRINT 'Procedure Creation: spGen__EC_DistributorTag_Save Error on Creation'
GO





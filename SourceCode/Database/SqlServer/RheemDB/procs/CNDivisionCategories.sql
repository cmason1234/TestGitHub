/*
'===============================================================================
' Generated by GenerateDataAndObjectLayer Version 1.0.0.0
'
' <auto-generated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated. 
' </auto-generated>
'===============================================================================

*/
USE [RheemDB]

/* ------------------------------------------------------------
   Get rid of obsolete InsertCNDivisionCategories
   Get rid of obsolete UpdateCNDivisionCategories
   Get rid of obsolete DeleteCNDivisionCategories
   Get rid of obsolete SearchCNDivisionCategoriesByString
   Get rid of obsolete GetCNDivisionCategoriesByID
   ------------------------------------------------------------ */
If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('InsertCNDivisionCategories') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE InsertCNDivisionCategories;
        PRINT 'Dropped InsertCNDivisionCategories'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('UpdateCNDivisionCategories') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE UpdateCNDivisionCategories;
        PRINT 'Dropped UpdateCNDivisionCategories'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DeleteCNDivisionCategories') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE DeleteCNDivisionCategories;
        PRINT 'Dropped DeleteCNDivisionCategories'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('SearchCNDivisionCategoriesByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE SearchCNDivisionCategoriesByString;
        PRINT 'Dropped SearchCNDivisionCategoriesByString'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('GetCNDivisionCategoriesByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE GetCNDivisionCategoriesByID;
        PRINT 'Dropped GetCNDivisionCategoriesByID'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__CNDivisionCategories_GetByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__CNDivisionCategories_GetByID;
        PRINT 'Dropped spGen__CNDivisionCategories_GetByID'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__CNDivisionCategories_GetByID

   Description:  Selects record(s) from table 'CNDivisionCategories'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__CNDivisionCategories_GetByID
(
    @CNDivisionCategoriesID uniqueidentifier

)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int

    Select [CNDivisionCategoriesID],[OrganizationID],[CNCategoryID]
    FROM [CNDivisionCategories]
    WHERE [CNDivisionCategoriesID] = @CNDivisionCategoriesID

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__CNDivisionCategories_GetByID Succeeded'
Else PRINT 'Procedure Creation: spGen__CNDivisionCategories_GetByID Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__CNDivisionCategories_SearchByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__CNDivisionCategories_SearchByString;
        PRINT 'Dropped spGen__CNDivisionCategories_SearchByString'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__CNDivisionCategories_SearchByString

   Description:  Selects a record from table 'CNDivisionCategories'
                 And puts values into parameters

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__CNDivisionCategories_SearchByString
(
    @searchParam varchar(4000)
)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int
    DECLARE @strSql varchar(4000)

    SET @strSql = ' Select [CNDivisionCategoriesID],[OrganizationID],[CNCategoryID]
    FROM [CNDivisionCategories]
    WHERE ' +  @searchParam

    EXEC(@strSql)

    --//We should NOT be using exec above.
    --//If params are NOT known, then be sure to clean sql
    --//If params are known, format like example below

    --IF @prodname IS NOT NULL
    --SELECT @sql = @sql + ' ProductName LIKE @prodname'
    --EXEC sp_executesql @sql, N'@prodname varchar(400)',@prodname

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__CNDivisionCategories_SearchByString Succeeded'
Else PRINT 'Procedure Creation: spGen__CNDivisionCategories_SearchByString Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__CNDivisionCategories_Delete') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__CNDivisionCategories_Delete;
        PRINT 'Dropped spGen__CNDivisionCategories_Delete'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__CNDivisionCategories_Delete

   Description:  Deletes a record from table 'CNDivisionCategories'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__CNDivisionCategories_Delete
(
    @CNDivisionCategoriesID uniqueidentifier

)
AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN
    DECLARE @Err Int


    DELETE FROM [CNDivisionCategories]
    WHERE [CNDivisionCategoriesID] = @CNDivisionCategoriesID


End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__CNDivisionCategories_Delete Succeeded'
Else PRINT 'Procedure Creation: spGen__CNDivisionCategories_Delete Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__CNDivisionCategories_Save') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__CNDivisionCategories_Save;
        PRINT 'Dropped spGen__CNDivisionCategories_Save'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__CNDivisionCategories_Save

   Description:  Updates or Deletes a record In table 'CNDivisionCategories'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__CNDivisionCategories_Save
(
    @ErrText varchar(4000) output,
    @CNDivisionCategoriesID uniqueidentifier output,
    @OrganizationID uniqueidentifier,
    @CNCategoryID uniqueidentifier
)

AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN

    DECLARE @UniqueRowCount Int
    IF @CNDivisionCategoriesID = '00000000-0000-0000-0000-000000000000' SET @CNDivisionCategoriesID = NULL
    IF @CNDivisionCategoriesID IS NULL
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    SET @CNDivisionCategoriesID = NewID()

                    INSERT
                    INTO [CNDivisionCategories]
                    (
                        [CNDivisionCategoriesID],
                        [OrganizationID],
                        [CNCategoryID]
                    )
                    VALUES
                    (
                        @CNDivisionCategoriesID,
                        @OrganizationID,
                        @CNCategoryID
                    )
                END
        END
    ELSE
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    UPDATE [CNDivisionCategories]
                    SET
                    [OrganizationID] = @OrganizationID,
                    [CNCategoryID] = @CNCategoryID
                    WHERE [CNDivisionCategoriesID] = @CNDivisionCategoriesID
                END
        END

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__CNDivisionCategories_Save Succeeded'
Else PRINT 'Procedure Creation: spGen__CNDivisionCategories_Save Error on Creation'
GO





/*
'===============================================================================
' Generated by GenerateDataAndObjectLayer Version 1.0.0.0
'
' <auto-generated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated. 
' </auto-generated>
'===============================================================================

*/
USE [RheemDB]

/* ------------------------------------------------------------
   Get rid of obsolete InsertEC_ClaimSection
   Get rid of obsolete UpdateEC_ClaimSection
   Get rid of obsolete DeleteEC_ClaimSection
   Get rid of obsolete SearchEC_ClaimSectionByString
   Get rid of obsolete GetEC_ClaimSectionByID
   ------------------------------------------------------------ */
If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('InsertEC_ClaimSection') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE InsertEC_ClaimSection;
        PRINT 'Dropped InsertEC_ClaimSection'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('UpdateEC_ClaimSection') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE UpdateEC_ClaimSection;
        PRINT 'Dropped UpdateEC_ClaimSection'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DeleteEC_ClaimSection') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE DeleteEC_ClaimSection;
        PRINT 'Dropped DeleteEC_ClaimSection'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('SearchEC_ClaimSectionByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE SearchEC_ClaimSectionByString;
        PRINT 'Dropped SearchEC_ClaimSectionByString'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('GetEC_ClaimSectionByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE GetEC_ClaimSectionByID;
        PRINT 'Dropped GetEC_ClaimSectionByID'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__EC_ClaimSection_GetByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__EC_ClaimSection_GetByID;
        PRINT 'Dropped spGen__EC_ClaimSection_GetByID'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__EC_ClaimSection_GetByID

   Description:  Selects record(s) from table 'EC_ClaimSection'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__EC_ClaimSection_GetByID
(
    @ClaimSectionID uniqueidentifier

)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int

    Select [ClaimSectionID],[SectionName],[MinRequirement],[MaxRequirement],[GDPSection],[TCSection],[ProStockSection],[SpecialProgramSection],[GDPYear],[MinPercent],[MaxPercent],[FixedRequirement],[FixedPercent],[DisplayOrder],[WHSection],[ShortName],[Reserved]
    FROM [EC_ClaimSection]
    WHERE [ClaimSectionID] = @ClaimSectionID

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__EC_ClaimSection_GetByID Succeeded'
Else PRINT 'Procedure Creation: spGen__EC_ClaimSection_GetByID Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__EC_ClaimSection_SearchByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__EC_ClaimSection_SearchByString;
        PRINT 'Dropped spGen__EC_ClaimSection_SearchByString'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__EC_ClaimSection_SearchByString

   Description:  Selects a record from table 'EC_ClaimSection'
                 And puts values into parameters

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__EC_ClaimSection_SearchByString
(
    @searchParam varchar(4000)
)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int
    DECLARE @strSql varchar(4000)

    SET @strSql = ' Select [ClaimSectionID],[SectionName],[MinRequirement],[MaxRequirement],[GDPSection],[TCSection],[ProStockSection],[SpecialProgramSection],[GDPYear],[MinPercent],[MaxPercent],[FixedRequirement],[FixedPercent],[DisplayOrder],[WHSection],[ShortName],[Reserved]
    FROM [EC_ClaimSection]
    WHERE ' +  @searchParam

    EXEC(@strSql)

    --//We should NOT be using exec above.
    --//If params are NOT known, then be sure to clean sql
    --//If params are known, format like example below

    --IF @prodname IS NOT NULL
    --SELECT @sql = @sql + ' ProductName LIKE @prodname'
    --EXEC sp_executesql @sql, N'@prodname varchar(400)',@prodname

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__EC_ClaimSection_SearchByString Succeeded'
Else PRINT 'Procedure Creation: spGen__EC_ClaimSection_SearchByString Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__EC_ClaimSection_Delete') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__EC_ClaimSection_Delete;
        PRINT 'Dropped spGen__EC_ClaimSection_Delete'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__EC_ClaimSection_Delete

   Description:  Deletes a record from table 'EC_ClaimSection'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__EC_ClaimSection_Delete
(
    @ClaimSectionID uniqueidentifier

)
AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN
    DECLARE @Err Int


    DELETE FROM [EC_ClaimSection]
    WHERE [ClaimSectionID] = @ClaimSectionID


End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__EC_ClaimSection_Delete Succeeded'
Else PRINT 'Procedure Creation: spGen__EC_ClaimSection_Delete Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__EC_ClaimSection_Save') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__EC_ClaimSection_Save;
        PRINT 'Dropped spGen__EC_ClaimSection_Save'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__EC_ClaimSection_Save

   Description:  Updates or Deletes a record In table 'EC_ClaimSection'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__EC_ClaimSection_Save
(
    @ErrText varchar(4000) output,
    @ClaimSectionID uniqueidentifier output,
    @SectionName varchar(100),
    @MinRequirement bit,
    @MaxRequirement bit,
    @GDPSection bit,
    @TCSection bit,
    @ProStockSection bit,
    @SpecialProgramSection bit,
    @GDPYear int,
    @MinPercent int,
    @MaxPercent int,
    @FixedRequirement bit,
    @FixedPercent float,
    @DisplayOrder int,
    @WHSection bit,
    @ShortName varchar(18),
    @Reserved bit
)

AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN

    DECLARE @UniqueRowCount Int
    IF @ClaimSectionID = '00000000-0000-0000-0000-000000000000' SET @ClaimSectionID = NULL
    IF @ClaimSectionID IS NULL
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    SET @ClaimSectionID = NewID()

                    INSERT
                    INTO [EC_ClaimSection]
                    (
                        [ClaimSectionID],
                        [SectionName],
                        [MinRequirement],
                        [MaxRequirement],
                        [GDPSection],
                        [TCSection],
                        [ProStockSection],
                        [SpecialProgramSection],
                        [GDPYear],
                        [MinPercent],
                        [MaxPercent],
                        [FixedRequirement],
                        [FixedPercent],
                        [DisplayOrder],
                        [WHSection],
                        [ShortName],
                        [Reserved]
                    )
                    VALUES
                    (
                        @ClaimSectionID,
                        @SectionName,
                        @MinRequirement,
                        @MaxRequirement,
                        @GDPSection,
                        @TCSection,
                        @ProStockSection,
                        @SpecialProgramSection,
                        @GDPYear,
                        @MinPercent,
                        @MaxPercent,
                        @FixedRequirement,
                        @FixedPercent,
                        @DisplayOrder,
                        @WHSection,
                        @ShortName,
                        @Reserved
                    )
                END
        END
    ELSE
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    UPDATE [EC_ClaimSection]
                    SET
                    [SectionName] = @SectionName,
                    [MinRequirement] = @MinRequirement,
                    [MaxRequirement] = @MaxRequirement,
                    [GDPSection] = @GDPSection,
                    [TCSection] = @TCSection,
                    [ProStockSection] = @ProStockSection,
                    [SpecialProgramSection] = @SpecialProgramSection,
                    [GDPYear] = @GDPYear,
                    [MinPercent] = @MinPercent,
                    [MaxPercent] = @MaxPercent,
                    [FixedRequirement] = @FixedRequirement,
                    [FixedPercent] = @FixedPercent,
                    [DisplayOrder] = @DisplayOrder,
                    [WHSection] = @WHSection,
                    [ShortName] = @ShortName,
                    [Reserved] = @Reserved
                    WHERE [ClaimSectionID] = @ClaimSectionID
                END
        END

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__EC_ClaimSection_Save Succeeded'
Else PRINT 'Procedure Creation: spGen__EC_ClaimSection_Save Error on Creation'
GO





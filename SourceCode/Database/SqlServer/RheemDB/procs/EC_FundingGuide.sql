/*
'===============================================================================
' Generated by GenerateDataAndObjectLayer Version 1.0.0.0
'
' <auto-generated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated. 
' </auto-generated>
'===============================================================================

*/
USE [RheemDB]

/* ------------------------------------------------------------
   Get rid of obsolete InsertEC_FundingGuide
   Get rid of obsolete UpdateEC_FundingGuide
   Get rid of obsolete DeleteEC_FundingGuide
   Get rid of obsolete SearchEC_FundingGuideByString
   Get rid of obsolete GetEC_FundingGuideByID
   ------------------------------------------------------------ */
If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('InsertEC_FundingGuide') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE InsertEC_FundingGuide;
        PRINT 'Dropped InsertEC_FundingGuide'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('UpdateEC_FundingGuide') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE UpdateEC_FundingGuide;
        PRINT 'Dropped UpdateEC_FundingGuide'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DeleteEC_FundingGuide') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE DeleteEC_FundingGuide;
        PRINT 'Dropped DeleteEC_FundingGuide'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('SearchEC_FundingGuideByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE SearchEC_FundingGuideByString;
        PRINT 'Dropped SearchEC_FundingGuideByString'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('GetEC_FundingGuideByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE GetEC_FundingGuideByID;
        PRINT 'Dropped GetEC_FundingGuideByID'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__EC_FundingGuide_GetByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__EC_FundingGuide_GetByID;
        PRINT 'Dropped spGen__EC_FundingGuide_GetByID'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__EC_FundingGuide_GetByID

   Description:  Selects record(s) from table 'EC_FundingGuide'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__EC_FundingGuide_GetByID
(
    @FundingGuideID uniqueidentifier

)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int

    Select [FundingGuideID],[GDPYear],[OrganizationID],[PriorYearRetailUnits],[CurrYearRetailUnitsGrowth],[CurrYearRetailTotalUnits],[GDPFundingEst],[TCFundingEst],[TotalEst],[PrevYearTotalUnits],[CurrYearForecastedTotalUnits],[PrevYearTotalCoop],[CurrYearTotalCoop]
    FROM [EC_FundingGuide]
    WHERE [FundingGuideID] = @FundingGuideID

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__EC_FundingGuide_GetByID Succeeded'
Else PRINT 'Procedure Creation: spGen__EC_FundingGuide_GetByID Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__EC_FundingGuide_SearchByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__EC_FundingGuide_SearchByString;
        PRINT 'Dropped spGen__EC_FundingGuide_SearchByString'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__EC_FundingGuide_SearchByString

   Description:  Selects a record from table 'EC_FundingGuide'
                 And puts values into parameters

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__EC_FundingGuide_SearchByString
(
    @searchParam varchar(4000)
)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int
    DECLARE @strSql varchar(4000)

    SET @strSql = ' Select [FundingGuideID],[GDPYear],[OrganizationID],[PriorYearRetailUnits],[CurrYearRetailUnitsGrowth],[CurrYearRetailTotalUnits],[GDPFundingEst],[TCFundingEst],[TotalEst],[PrevYearTotalUnits],[CurrYearForecastedTotalUnits],[PrevYearTotalCoop],[CurrYearTotalCoop]
    FROM [EC_FundingGuide]
    WHERE ' +  @searchParam

    EXEC(@strSql)

    --//We should NOT be using exec above.
    --//If params are NOT known, then be sure to clean sql
    --//If params are known, format like example below

    --IF @prodname IS NOT NULL
    --SELECT @sql = @sql + ' ProductName LIKE @prodname'
    --EXEC sp_executesql @sql, N'@prodname varchar(400)',@prodname

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__EC_FundingGuide_SearchByString Succeeded'
Else PRINT 'Procedure Creation: spGen__EC_FundingGuide_SearchByString Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__EC_FundingGuide_Delete') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__EC_FundingGuide_Delete;
        PRINT 'Dropped spGen__EC_FundingGuide_Delete'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__EC_FundingGuide_Delete

   Description:  Deletes a record from table 'EC_FundingGuide'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__EC_FundingGuide_Delete
(
    @FundingGuideID uniqueidentifier

)
AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN
    DECLARE @Err Int


    DELETE FROM [EC_FundingGuide]
    WHERE [FundingGuideID] = @FundingGuideID


End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__EC_FundingGuide_Delete Succeeded'
Else PRINT 'Procedure Creation: spGen__EC_FundingGuide_Delete Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__EC_FundingGuide_Save') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__EC_FundingGuide_Save;
        PRINT 'Dropped spGen__EC_FundingGuide_Save'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__EC_FundingGuide_Save

   Description:  Updates or Deletes a record In table 'EC_FundingGuide'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__EC_FundingGuide_Save
(
    @ErrText varchar(4000) output,
    @FundingGuideID uniqueidentifier output,
    @GDPYear int,
    @OrganizationID uniqueidentifier,
    @PriorYearRetailUnits int,
    @CurrYearRetailUnitsGrowth int,
    @CurrYearRetailTotalUnits int,
    @GDPFundingEst decimal(18,2),
    @TCFundingEst decimal(18,2),
    @TotalEst decimal(18,2),
    @PrevYearTotalUnits int,
    @CurrYearForecastedTotalUnits int,
    @PrevYearTotalCoop decimal(18,2),
    @CurrYearTotalCoop decimal(18,2)
)

AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN

    DECLARE @UniqueRowCount Int
    IF @FundingGuideID = '00000000-0000-0000-0000-000000000000' SET @FundingGuideID = NULL
    IF @FundingGuideID IS NULL
        BEGIN
            SELECT @UniqueRowCount = COUNT(1) FROM [EC_FundingGuide] where [GDPYear] = @GDPYear and [OrganizationID] = @OrganizationID 
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = 'A row matching these unique index columns was found: GDPYear, OrganizationID'
                END
            ELSE
                BEGIN
                    SET @FundingGuideID = NewID()

                    INSERT
                    INTO [EC_FundingGuide]
                    (
                        [FundingGuideID],
                        [GDPYear],
                        [OrganizationID],
                        [PriorYearRetailUnits],
                        [CurrYearRetailUnitsGrowth],
                        [CurrYearRetailTotalUnits],
                        [GDPFundingEst],
                        [TCFundingEst],
                        [TotalEst],
                        [PrevYearTotalUnits],
                        [CurrYearForecastedTotalUnits],
                        [PrevYearTotalCoop],
                        [CurrYearTotalCoop]
                    )
                    VALUES
                    (
                        @FundingGuideID,
                        @GDPYear,
                        @OrganizationID,
                        @PriorYearRetailUnits,
                        @CurrYearRetailUnitsGrowth,
                        @CurrYearRetailTotalUnits,
                        @GDPFundingEst,
                        @TCFundingEst,
                        @TotalEst,
                        @PrevYearTotalUnits,
                        @CurrYearForecastedTotalUnits,
                        @PrevYearTotalCoop,
                        @CurrYearTotalCoop
                    )
                END
        END
    ELSE
        BEGIN
            -- check to see that there isn't another row like this one (assuming the unique index column(s) might have changed)
            SELECT @UniqueRowCount = COUNT(1) FROM [EC_FundingGuide] where [GDPYear] = @GDPYear and [OrganizationID] = @OrganizationID  and [FundingGuideID] <> @FundingGuideID
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = 'A row matching these unique index columns was found: GDPYear, OrganizationID'
                END
            ELSE
                BEGIN
                    UPDATE [EC_FundingGuide]
                    SET
                    [GDPYear] = @GDPYear,
                    [OrganizationID] = @OrganizationID,
                    [PriorYearRetailUnits] = @PriorYearRetailUnits,
                    [CurrYearRetailUnitsGrowth] = @CurrYearRetailUnitsGrowth,
                    [CurrYearRetailTotalUnits] = @CurrYearRetailTotalUnits,
                    [GDPFundingEst] = @GDPFundingEst,
                    [TCFundingEst] = @TCFundingEst,
                    [TotalEst] = @TotalEst,
                    [PrevYearTotalUnits] = @PrevYearTotalUnits,
                    [CurrYearForecastedTotalUnits] = @CurrYearForecastedTotalUnits,
                    [PrevYearTotalCoop] = @PrevYearTotalCoop,
                    [CurrYearTotalCoop] = @CurrYearTotalCoop
                    WHERE [FundingGuideID] = @FundingGuideID
                END
        END

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__EC_FundingGuide_Save Succeeded'
Else PRINT 'Procedure Creation: spGen__EC_FundingGuide_Save Error on Creation'
GO





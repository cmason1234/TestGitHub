/*
'===============================================================================
' Generated by GenerateDataAndObjectLayer Version 1.0.0.0
'
' <auto-generated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated. 
' </auto-generated>
'===============================================================================

*/
USE [RheemDB]

/* ------------------------------------------------------------
   Get rid of obsolete InsertEC_ClaimSectionCategory
   Get rid of obsolete UpdateEC_ClaimSectionCategory
   Get rid of obsolete DeleteEC_ClaimSectionCategory
   Get rid of obsolete SearchEC_ClaimSectionCategoryByString
   Get rid of obsolete GetEC_ClaimSectionCategoryByID
   ------------------------------------------------------------ */
If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('InsertEC_ClaimSectionCategory') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE InsertEC_ClaimSectionCategory;
        PRINT 'Dropped InsertEC_ClaimSectionCategory'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('UpdateEC_ClaimSectionCategory') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE UpdateEC_ClaimSectionCategory;
        PRINT 'Dropped UpdateEC_ClaimSectionCategory'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DeleteEC_ClaimSectionCategory') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE DeleteEC_ClaimSectionCategory;
        PRINT 'Dropped DeleteEC_ClaimSectionCategory'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('SearchEC_ClaimSectionCategoryByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE SearchEC_ClaimSectionCategoryByString;
        PRINT 'Dropped SearchEC_ClaimSectionCategoryByString'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('GetEC_ClaimSectionCategoryByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE GetEC_ClaimSectionCategoryByID;
        PRINT 'Dropped GetEC_ClaimSectionCategoryByID'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__EC_ClaimSectionCategory_GetByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__EC_ClaimSectionCategory_GetByID;
        PRINT 'Dropped spGen__EC_ClaimSectionCategory_GetByID'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__EC_ClaimSectionCategory_GetByID

   Description:  Selects record(s) from table 'EC_ClaimSectionCategory'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__EC_ClaimSectionCategory_GetByID
(
    @ClaimSectionCategoryID uniqueidentifier

)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int

    Select [ClaimSectionCategoryID],[ClaimSectionID],[CategoryName],[RheemAccountCode],[RuudAccountCode],[FundingSplit],[FundingSplitSingleLine],[ApprovalRequired],[OtherRequired],[NonBilling],[FixedCost],[FixedCostPercent],[OracleRheemAccountCode],[OracleRuudAccountCode],[Description],[Examples]
    FROM [EC_ClaimSectionCategory]
    WHERE [ClaimSectionCategoryID] = @ClaimSectionCategoryID

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__EC_ClaimSectionCategory_GetByID Succeeded'
Else PRINT 'Procedure Creation: spGen__EC_ClaimSectionCategory_GetByID Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__EC_ClaimSectionCategory_SearchByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__EC_ClaimSectionCategory_SearchByString;
        PRINT 'Dropped spGen__EC_ClaimSectionCategory_SearchByString'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__EC_ClaimSectionCategory_SearchByString

   Description:  Selects a record from table 'EC_ClaimSectionCategory'
                 And puts values into parameters

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__EC_ClaimSectionCategory_SearchByString
(
    @searchParam varchar(4000)
)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int
    DECLARE @strSql varchar(4000)

    SET @strSql = ' Select [ClaimSectionCategoryID],[ClaimSectionID],[CategoryName],[RheemAccountCode],[RuudAccountCode],[FundingSplit],[FundingSplitSingleLine],[ApprovalRequired],[OtherRequired],[NonBilling],[FixedCost],[FixedCostPercent],[OracleRheemAccountCode],[OracleRuudAccountCode],[Description],[Examples]
    FROM [EC_ClaimSectionCategory]
    WHERE ' +  @searchParam

    EXEC(@strSql)

    --//We should NOT be using exec above.
    --//If params are NOT known, then be sure to clean sql
    --//If params are known, format like example below

    --IF @prodname IS NOT NULL
    --SELECT @sql = @sql + ' ProductName LIKE @prodname'
    --EXEC sp_executesql @sql, N'@prodname varchar(400)',@prodname

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__EC_ClaimSectionCategory_SearchByString Succeeded'
Else PRINT 'Procedure Creation: spGen__EC_ClaimSectionCategory_SearchByString Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__EC_ClaimSectionCategory_Delete') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__EC_ClaimSectionCategory_Delete;
        PRINT 'Dropped spGen__EC_ClaimSectionCategory_Delete'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__EC_ClaimSectionCategory_Delete

   Description:  Deletes a record from table 'EC_ClaimSectionCategory'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__EC_ClaimSectionCategory_Delete
(
    @ClaimSectionCategoryID uniqueidentifier

)
AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN
    DECLARE @Err Int


    DELETE FROM [EC_ClaimSectionCategory]
    WHERE [ClaimSectionCategoryID] = @ClaimSectionCategoryID


End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__EC_ClaimSectionCategory_Delete Succeeded'
Else PRINT 'Procedure Creation: spGen__EC_ClaimSectionCategory_Delete Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__EC_ClaimSectionCategory_Save') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__EC_ClaimSectionCategory_Save;
        PRINT 'Dropped spGen__EC_ClaimSectionCategory_Save'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__EC_ClaimSectionCategory_Save

   Description:  Updates or Deletes a record In table 'EC_ClaimSectionCategory'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__EC_ClaimSectionCategory_Save
(
    @ErrText varchar(4000) output,
    @ClaimSectionCategoryID uniqueidentifier output,
    @ClaimSectionID uniqueidentifier,
    @CategoryName varchar(100),
    @RheemAccountCode varchar(50),
    @RuudAccountCode varchar(50),
    @FundingSplit int,
    @FundingSplitSingleLine int,
    @ApprovalRequired bit,
    @OtherRequired bit,
    @NonBilling bit,
    @FixedCost bit,
    @FixedCostPercent float,
    @OracleRheemAccountCode varchar(50),
    @OracleRuudAccountCode varchar(50),
    @Description text,
    @Examples text
)

AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN

    DECLARE @UniqueRowCount Int
    IF @ClaimSectionCategoryID = '00000000-0000-0000-0000-000000000000' SET @ClaimSectionCategoryID = NULL
    IF @ClaimSectionCategoryID IS NULL
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    SET @ClaimSectionCategoryID = NewID()

                    INSERT
                    INTO [EC_ClaimSectionCategory]
                    (
                        [ClaimSectionCategoryID],
                        [ClaimSectionID],
                        [CategoryName],
                        [RheemAccountCode],
                        [RuudAccountCode],
                        [FundingSplit],
                        [FundingSplitSingleLine],
                        [ApprovalRequired],
                        [OtherRequired],
                        [NonBilling],
                        [FixedCost],
                        [FixedCostPercent],
                        [OracleRheemAccountCode],
                        [OracleRuudAccountCode],
                        [Description],
                        [Examples]
                    )
                    VALUES
                    (
                        @ClaimSectionCategoryID,
                        @ClaimSectionID,
                        @CategoryName,
                        @RheemAccountCode,
                        @RuudAccountCode,
                        @FundingSplit,
                        @FundingSplitSingleLine,
                        @ApprovalRequired,
                        @OtherRequired,
                        @NonBilling,
                        @FixedCost,
                        @FixedCostPercent,
                        @OracleRheemAccountCode,
                        @OracleRuudAccountCode,
                        @Description,
                        @Examples
                    )
                END
        END
    ELSE
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    UPDATE [EC_ClaimSectionCategory]
                    SET
                    [ClaimSectionID] = @ClaimSectionID,
                    [CategoryName] = @CategoryName,
                    [RheemAccountCode] = @RheemAccountCode,
                    [RuudAccountCode] = @RuudAccountCode,
                    [FundingSplit] = @FundingSplit,
                    [FundingSplitSingleLine] = @FundingSplitSingleLine,
                    [ApprovalRequired] = @ApprovalRequired,
                    [OtherRequired] = @OtherRequired,
                    [NonBilling] = @NonBilling,
                    [FixedCost] = @FixedCost,
                    [FixedCostPercent] = @FixedCostPercent,
                    [OracleRheemAccountCode] = @OracleRheemAccountCode,
                    [OracleRuudAccountCode] = @OracleRuudAccountCode,
                    [Description] = @Description,
                    [Examples] = @Examples
                    WHERE [ClaimSectionCategoryID] = @ClaimSectionCategoryID
                END
        END

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__EC_ClaimSectionCategory_Save Succeeded'
Else PRINT 'Procedure Creation: spGen__EC_ClaimSectionCategory_Save Error on Creation'
GO





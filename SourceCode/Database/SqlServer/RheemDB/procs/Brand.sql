/*
'===============================================================================
' Generated by GenerateDataAndObjectLayer Version 1.0.0.0
'
' <auto-generated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated. 
' </auto-generated>
'===============================================================================

*/
USE [RheemDB]

/* ------------------------------------------------------------
   Get rid of obsolete InsertBrand
   Get rid of obsolete UpdateBrand
   Get rid of obsolete DeleteBrand
   Get rid of obsolete SearchBrandByString
   Get rid of obsolete GetBrandByID
   ------------------------------------------------------------ */
If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('InsertBrand') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE InsertBrand;
        PRINT 'Dropped InsertBrand'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('UpdateBrand') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE UpdateBrand;
        PRINT 'Dropped UpdateBrand'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DeleteBrand') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE DeleteBrand;
        PRINT 'Dropped DeleteBrand'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('SearchBrandByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE SearchBrandByString;
        PRINT 'Dropped SearchBrandByString'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('GetBrandByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE GetBrandByID;
        PRINT 'Dropped GetBrandByID'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__Brand_GetByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__Brand_GetByID;
        PRINT 'Dropped spGen__Brand_GetByID'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__Brand_GetByID

   Description:  Selects record(s) from table 'Brand'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__Brand_GetByID
(
    @BrandID uniqueidentifier

)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int

    Select [BrandID],[BrandName],[LegacyBrandCode],[DestixTrans],[DestixRecover]
    FROM [Brand]
    WHERE [BrandID] = @BrandID

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__Brand_GetByID Succeeded'
Else PRINT 'Procedure Creation: spGen__Brand_GetByID Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__Brand_SearchByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__Brand_SearchByString;
        PRINT 'Dropped spGen__Brand_SearchByString'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__Brand_SearchByString

   Description:  Selects a record from table 'Brand'
                 And puts values into parameters

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__Brand_SearchByString
(
    @searchParam varchar(4000)
)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int
    DECLARE @strSql varchar(4000)

    SET @strSql = ' Select [BrandID],[BrandName],[LegacyBrandCode],[DestixTrans],[DestixRecover]
    FROM [Brand]
    WHERE ' +  @searchParam

    EXEC(@strSql)

    --//We should NOT be using exec above.
    --//If params are NOT known, then be sure to clean sql
    --//If params are known, format like example below

    --IF @prodname IS NOT NULL
    --SELECT @sql = @sql + ' ProductName LIKE @prodname'
    --EXEC sp_executesql @sql, N'@prodname varchar(400)',@prodname

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__Brand_SearchByString Succeeded'
Else PRINT 'Procedure Creation: spGen__Brand_SearchByString Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__Brand_Delete') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__Brand_Delete;
        PRINT 'Dropped spGen__Brand_Delete'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__Brand_Delete

   Description:  Deletes a record from table 'Brand'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__Brand_Delete
(
    @BrandID uniqueidentifier

)
AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN
    DECLARE @Err Int


    DELETE FROM [Brand]
    WHERE [BrandID] = @BrandID


End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__Brand_Delete Succeeded'
Else PRINT 'Procedure Creation: spGen__Brand_Delete Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__Brand_Save') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__Brand_Save;
        PRINT 'Dropped spGen__Brand_Save'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__Brand_Save

   Description:  Updates or Deletes a record In table 'Brand'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__Brand_Save
(
    @ErrText varchar(4000) output,
    @BrandID uniqueidentifier output,
    @BrandName varchar(256),
    @LegacyBrandCode char(1),
    @DestixTrans uniqueidentifier,
    @DestixRecover bit
)

AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN

    DECLARE @UniqueRowCount Int
    IF @BrandID = '00000000-0000-0000-0000-000000000000' SET @BrandID = NULL
    IF @BrandID IS NULL
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    SET @BrandID = NewID()

                    INSERT
                    INTO [Brand]
                    (
                        [BrandID],
                        [BrandName],
                        [LegacyBrandCode],
                        [DestixTrans],
                        [DestixRecover]
                    )
                    VALUES
                    (
                        @BrandID,
                        @BrandName,
                        @LegacyBrandCode,
                        @DestixTrans,
                        @DestixRecover
                    )
                END
        END
    ELSE
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    UPDATE [Brand]
                    SET
                    [BrandName] = @BrandName,
                    [LegacyBrandCode] = @LegacyBrandCode,
                    [DestixTrans] = @DestixTrans,
                    [DestixRecover] = @DestixRecover
                    WHERE [BrandID] = @BrandID
                END
        END

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__Brand_Save Succeeded'
Else PRINT 'Procedure Creation: spGen__Brand_Save Error on Creation'
GO





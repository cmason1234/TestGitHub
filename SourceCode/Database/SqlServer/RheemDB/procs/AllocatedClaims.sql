/*
'===============================================================================
' Generated by GenerateDataAndObjectLayer Version 1.0.0.0
'
' <auto-generated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated. 
' </auto-generated>
'===============================================================================

*/
USE [RheemDB]

/* ------------------------------------------------------------
   Get rid of obsolete InsertAllocatedClaims
   Get rid of obsolete UpdateAllocatedClaims
   Get rid of obsolete DeleteAllocatedClaims
   Get rid of obsolete SearchAllocatedClaimsByString
   Get rid of obsolete GetAllocatedClaimsByID
   ------------------------------------------------------------ */
If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('InsertAllocatedClaims') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE InsertAllocatedClaims;
        PRINT 'Dropped InsertAllocatedClaims'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('UpdateAllocatedClaims') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE UpdateAllocatedClaims;
        PRINT 'Dropped UpdateAllocatedClaims'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DeleteAllocatedClaims') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE DeleteAllocatedClaims;
        PRINT 'Dropped DeleteAllocatedClaims'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('SearchAllocatedClaimsByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE SearchAllocatedClaimsByString;
        PRINT 'Dropped SearchAllocatedClaimsByString'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('GetAllocatedClaimsByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE GetAllocatedClaimsByID;
        PRINT 'Dropped GetAllocatedClaimsByID'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__AllocatedClaims_GetByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__AllocatedClaims_GetByID;
        PRINT 'Dropped spGen__AllocatedClaims_GetByID'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__AllocatedClaims_GetByID

   Description:  Selects record(s) from table 'AllocatedClaims'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__AllocatedClaims_GetByID
(
    @AllocatedClaimsID uniqueidentifier

)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int

    Select [AllocatedClaimsID],[ClaimYear],[OrganizationID],[Month],[ClaimID]
    FROM [AllocatedClaims]
    WHERE [AllocatedClaimsID] = @AllocatedClaimsID

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__AllocatedClaims_GetByID Succeeded'
Else PRINT 'Procedure Creation: spGen__AllocatedClaims_GetByID Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__AllocatedClaims_SearchByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__AllocatedClaims_SearchByString;
        PRINT 'Dropped spGen__AllocatedClaims_SearchByString'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__AllocatedClaims_SearchByString

   Description:  Selects a record from table 'AllocatedClaims'
                 And puts values into parameters

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__AllocatedClaims_SearchByString
(
    @searchParam varchar(4000)
)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int
    DECLARE @strSql varchar(4000)

    SET @strSql = ' Select [AllocatedClaimsID],[ClaimYear],[OrganizationID],[Month],[ClaimID]
    FROM [AllocatedClaims]
    WHERE ' +  @searchParam

    EXEC(@strSql)

    --//We should NOT be using exec above.
    --//If params are NOT known, then be sure to clean sql
    --//If params are known, format like example below

    --IF @prodname IS NOT NULL
    --SELECT @sql = @sql + ' ProductName LIKE @prodname'
    --EXEC sp_executesql @sql, N'@prodname varchar(400)',@prodname

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__AllocatedClaims_SearchByString Succeeded'
Else PRINT 'Procedure Creation: spGen__AllocatedClaims_SearchByString Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__AllocatedClaims_Delete') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__AllocatedClaims_Delete;
        PRINT 'Dropped spGen__AllocatedClaims_Delete'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__AllocatedClaims_Delete

   Description:  Deletes a record from table 'AllocatedClaims'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__AllocatedClaims_Delete
(
    @AllocatedClaimsID uniqueidentifier

)
AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN
    DECLARE @Err Int


    DELETE FROM [AllocatedClaims]
    WHERE [AllocatedClaimsID] = @AllocatedClaimsID


End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__AllocatedClaims_Delete Succeeded'
Else PRINT 'Procedure Creation: spGen__AllocatedClaims_Delete Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__AllocatedClaims_Save') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__AllocatedClaims_Save;
        PRINT 'Dropped spGen__AllocatedClaims_Save'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__AllocatedClaims_Save

   Description:  Updates or Deletes a record In table 'AllocatedClaims'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__AllocatedClaims_Save
(
    @ErrText varchar(4000) output,
    @AllocatedClaimsID uniqueidentifier output,
    @ClaimYear int,
    @OrganizationID uniqueidentifier,
    @Month varchar(3),
    @ClaimID uniqueidentifier
)

AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN

    DECLARE @UniqueRowCount Int
    IF @AllocatedClaimsID = '00000000-0000-0000-0000-000000000000' SET @AllocatedClaimsID = NULL
    IF @AllocatedClaimsID IS NULL
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    SET @AllocatedClaimsID = NewID()

                    INSERT
                    INTO [AllocatedClaims]
                    (
                        [AllocatedClaimsID],
                        [ClaimYear],
                        [OrganizationID],
                        [Month],
                        [ClaimID]
                    )
                    VALUES
                    (
                        @AllocatedClaimsID,
                        @ClaimYear,
                        @OrganizationID,
                        @Month,
                        @ClaimID
                    )
                END
        END
    ELSE
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    UPDATE [AllocatedClaims]
                    SET
                    [ClaimYear] = @ClaimYear,
                    [OrganizationID] = @OrganizationID,
                    [Month] = @Month,
                    [ClaimID] = @ClaimID
                    WHERE [AllocatedClaimsID] = @AllocatedClaimsID
                END
        END

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__AllocatedClaims_Save Succeeded'
Else PRINT 'Procedure Creation: spGen__AllocatedClaims_Save Error on Creation'
GO





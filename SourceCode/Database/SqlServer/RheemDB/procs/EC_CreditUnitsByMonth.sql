/*
'===============================================================================
' Generated by GenerateDataAndObjectLayer Version 1.0.0.0
'
' <auto-generated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated. 
' </auto-generated>
'===============================================================================

*/
USE [RheemDB]

/* ------------------------------------------------------------
   Get rid of obsolete InsertEC_CreditUnitsByMonth
   Get rid of obsolete UpdateEC_CreditUnitsByMonth
   Get rid of obsolete DeleteEC_CreditUnitsByMonth
   Get rid of obsolete SearchEC_CreditUnitsByMonthByString
   Get rid of obsolete GetEC_CreditUnitsByMonthByID
   ------------------------------------------------------------ */
If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('InsertEC_CreditUnitsByMonth') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE InsertEC_CreditUnitsByMonth;
        PRINT 'Dropped InsertEC_CreditUnitsByMonth'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('UpdateEC_CreditUnitsByMonth') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE UpdateEC_CreditUnitsByMonth;
        PRINT 'Dropped UpdateEC_CreditUnitsByMonth'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DeleteEC_CreditUnitsByMonth') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE DeleteEC_CreditUnitsByMonth;
        PRINT 'Dropped DeleteEC_CreditUnitsByMonth'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('SearchEC_CreditUnitsByMonthByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE SearchEC_CreditUnitsByMonthByString;
        PRINT 'Dropped SearchEC_CreditUnitsByMonthByString'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('GetEC_CreditUnitsByMonthByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE GetEC_CreditUnitsByMonthByID;
        PRINT 'Dropped GetEC_CreditUnitsByMonthByID'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__EC_CreditUnitsByMonth_GetByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__EC_CreditUnitsByMonth_GetByID;
        PRINT 'Dropped spGen__EC_CreditUnitsByMonth_GetByID'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__EC_CreditUnitsByMonth_GetByID

   Description:  Selects record(s) from table 'EC_CreditUnitsByMonth'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__EC_CreditUnitsByMonth_GetByID
(
    @CreditUnitsByMonthID uniqueidentifier

)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int

    Select [CreditUnitsByMonthID],[GDPYear],[GDPMonth],[OrganizationID],[CreditRebateAmountsID],[Units],[RebateTotal],[RebatePerUnit]
    FROM [EC_CreditUnitsByMonth]
    WHERE [CreditUnitsByMonthID] = @CreditUnitsByMonthID

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__EC_CreditUnitsByMonth_GetByID Succeeded'
Else PRINT 'Procedure Creation: spGen__EC_CreditUnitsByMonth_GetByID Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__EC_CreditUnitsByMonth_SearchByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__EC_CreditUnitsByMonth_SearchByString;
        PRINT 'Dropped spGen__EC_CreditUnitsByMonth_SearchByString'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__EC_CreditUnitsByMonth_SearchByString

   Description:  Selects a record from table 'EC_CreditUnitsByMonth'
                 And puts values into parameters

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__EC_CreditUnitsByMonth_SearchByString
(
    @searchParam varchar(4000)
)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int
    DECLARE @strSql varchar(4000)

    SET @strSql = ' Select [CreditUnitsByMonthID],[GDPYear],[GDPMonth],[OrganizationID],[CreditRebateAmountsID],[Units],[RebateTotal],[RebatePerUnit]
    FROM [EC_CreditUnitsByMonth]
    WHERE ' +  @searchParam

    EXEC(@strSql)

    --//We should NOT be using exec above.
    --//If params are NOT known, then be sure to clean sql
    --//If params are known, format like example below

    --IF @prodname IS NOT NULL
    --SELECT @sql = @sql + ' ProductName LIKE @prodname'
    --EXEC sp_executesql @sql, N'@prodname varchar(400)',@prodname

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__EC_CreditUnitsByMonth_SearchByString Succeeded'
Else PRINT 'Procedure Creation: spGen__EC_CreditUnitsByMonth_SearchByString Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__EC_CreditUnitsByMonth_Delete') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__EC_CreditUnitsByMonth_Delete;
        PRINT 'Dropped spGen__EC_CreditUnitsByMonth_Delete'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__EC_CreditUnitsByMonth_Delete

   Description:  Deletes a record from table 'EC_CreditUnitsByMonth'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__EC_CreditUnitsByMonth_Delete
(
    @CreditUnitsByMonthID uniqueidentifier

)
AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN
    DECLARE @Err Int


    DELETE FROM [EC_CreditUnitsByMonth]
    WHERE [CreditUnitsByMonthID] = @CreditUnitsByMonthID


End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__EC_CreditUnitsByMonth_Delete Succeeded'
Else PRINT 'Procedure Creation: spGen__EC_CreditUnitsByMonth_Delete Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__EC_CreditUnitsByMonth_Save') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__EC_CreditUnitsByMonth_Save;
        PRINT 'Dropped spGen__EC_CreditUnitsByMonth_Save'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__EC_CreditUnitsByMonth_Save

   Description:  Updates or Deletes a record In table 'EC_CreditUnitsByMonth'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__EC_CreditUnitsByMonth_Save
(
    @ErrText varchar(4000) output,
    @CreditUnitsByMonthID uniqueidentifier output,
    @GDPYear int,
    @GDPMonth varchar(50),
    @OrganizationID uniqueidentifier,
    @CreditRebateAmountsID uniqueidentifier,
    @Units int,
    @RebateTotal decimal(18,2),
    @RebatePerUnit decimal(18,2)
)

AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN

    DECLARE @UniqueRowCount Int
    IF @CreditUnitsByMonthID = '00000000-0000-0000-0000-000000000000' SET @CreditUnitsByMonthID = NULL
    IF @CreditUnitsByMonthID IS NULL
        BEGIN
            SELECT @UniqueRowCount = COUNT(1) FROM [EC_CreditUnitsByMonth] where [GDPYear] = @GDPYear and [GDPMonth] = @GDPMonth and [OrganizationID] = @OrganizationID and [CreditRebateAmountsID] = @CreditRebateAmountsID 
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = 'A row matching these unique index columns was found: GDPYear, GDPMonth, OrganizationID, CreditRebateAmountsID'
                END
            ELSE
                BEGIN
                    SET @CreditUnitsByMonthID = NewID()

                    INSERT
                    INTO [EC_CreditUnitsByMonth]
                    (
                        [CreditUnitsByMonthID],
                        [GDPYear],
                        [GDPMonth],
                        [OrganizationID],
                        [CreditRebateAmountsID],
                        [Units],
                        [RebateTotal],
                        [RebatePerUnit]
                    )
                    VALUES
                    (
                        @CreditUnitsByMonthID,
                        @GDPYear,
                        @GDPMonth,
                        @OrganizationID,
                        @CreditRebateAmountsID,
                        @Units,
                        @RebateTotal,
                        @RebatePerUnit
                    )
                END
        END
    ELSE
        BEGIN
            -- check to see that there isn't another row like this one (assuming the unique index column(s) might have changed)
            SELECT @UniqueRowCount = COUNT(1) FROM [EC_CreditUnitsByMonth] where [GDPYear] = @GDPYear and [GDPMonth] = @GDPMonth and [OrganizationID] = @OrganizationID and [CreditRebateAmountsID] = @CreditRebateAmountsID  and [CreditUnitsByMonthID] <> @CreditUnitsByMonthID
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = 'A row matching these unique index columns was found: GDPYear, GDPMonth, OrganizationID, CreditRebateAmountsID'
                END
            ELSE
                BEGIN
                    UPDATE [EC_CreditUnitsByMonth]
                    SET
                    [GDPYear] = @GDPYear,
                    [GDPMonth] = @GDPMonth,
                    [OrganizationID] = @OrganizationID,
                    [CreditRebateAmountsID] = @CreditRebateAmountsID,
                    [Units] = @Units,
                    [RebateTotal] = @RebateTotal,
                    [RebatePerUnit] = @RebatePerUnit
                    WHERE [CreditUnitsByMonthID] = @CreditUnitsByMonthID
                END
        END

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__EC_CreditUnitsByMonth_Save Succeeded'
Else PRINT 'Procedure Creation: spGen__EC_CreditUnitsByMonth_Save Error on Creation'
GO





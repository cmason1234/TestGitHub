/*
'===============================================================================
' Generated by GenerateDataAndObjectLayer Version 1.0.0.0
'
' <auto-generated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated. 
' </auto-generated>
'===============================================================================

*/
USE [RheemDB]

/* ------------------------------------------------------------
   Get rid of obsolete InsertEC_Claims
   Get rid of obsolete UpdateEC_Claims
   Get rid of obsolete DeleteEC_Claims
   Get rid of obsolete SearchEC_ClaimsByString
   Get rid of obsolete GetEC_ClaimsByID
   ------------------------------------------------------------ */
If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('InsertEC_Claims') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE InsertEC_Claims;
        PRINT 'Dropped InsertEC_Claims'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('UpdateEC_Claims') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE UpdateEC_Claims;
        PRINT 'Dropped UpdateEC_Claims'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DeleteEC_Claims') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE DeleteEC_Claims;
        PRINT 'Dropped DeleteEC_Claims'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('SearchEC_ClaimsByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE SearchEC_ClaimsByString;
        PRINT 'Dropped SearchEC_ClaimsByString'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('GetEC_ClaimsByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE GetEC_ClaimsByID;
        PRINT 'Dropped GetEC_ClaimsByID'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__EC_Claims_GetByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__EC_Claims_GetByID;
        PRINT 'Dropped spGen__EC_Claims_GetByID'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__EC_Claims_GetByID

   Description:  Selects record(s) from table 'EC_Claims'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__EC_Claims_GetByID
(
    @ClaimID uniqueidentifier

)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int

    Select [ClaimID],[ClaimYear],[Program],[OrganizationID],[AllocatedToOrganizationID],[ClaimSectionCategoryID],[ClaimDate],[MFGInvoice],[Vendor],[VendorInvoiceNumber],[DistributorClaimNumber],[Description],[ClaimStatus],[FundingSplit],[TotalClaim],[BatchNumber],[BatchRecordNumber],[BulkClaim],[AttachmentID],[OracleBatchNumber],[OracleInvoiceNumber],[EC_DistributorTagID]
    FROM [EC_Claims]
    WHERE [ClaimID] = @ClaimID

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__EC_Claims_GetByID Succeeded'
Else PRINT 'Procedure Creation: spGen__EC_Claims_GetByID Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__EC_Claims_SearchByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__EC_Claims_SearchByString;
        PRINT 'Dropped spGen__EC_Claims_SearchByString'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__EC_Claims_SearchByString

   Description:  Selects a record from table 'EC_Claims'
                 And puts values into parameters

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__EC_Claims_SearchByString
(
    @searchParam varchar(4000)
)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int
    DECLARE @strSql varchar(4000)

    SET @strSql = ' Select [ClaimID],[ClaimYear],[Program],[OrganizationID],[AllocatedToOrganizationID],[ClaimSectionCategoryID],[ClaimDate],[MFGInvoice],[Vendor],[VendorInvoiceNumber],[DistributorClaimNumber],[Description],[ClaimStatus],[FundingSplit],[TotalClaim],[BatchNumber],[BatchRecordNumber],[BulkClaim],[AttachmentID],[OracleBatchNumber],[OracleInvoiceNumber],[EC_DistributorTagID]
    FROM [EC_Claims]
    WHERE ' +  @searchParam

    EXEC(@strSql)

    --//We should NOT be using exec above.
    --//If params are NOT known, then be sure to clean sql
    --//If params are known, format like example below

    --IF @prodname IS NOT NULL
    --SELECT @sql = @sql + ' ProductName LIKE @prodname'
    --EXEC sp_executesql @sql, N'@prodname varchar(400)',@prodname

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__EC_Claims_SearchByString Succeeded'
Else PRINT 'Procedure Creation: spGen__EC_Claims_SearchByString Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__EC_Claims_Delete') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__EC_Claims_Delete;
        PRINT 'Dropped spGen__EC_Claims_Delete'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__EC_Claims_Delete

   Description:  Deletes a record from table 'EC_Claims'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__EC_Claims_Delete
(
    @ClaimID uniqueidentifier

)
AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN
    DECLARE @Err Int


    DELETE FROM [EC_Claims]
    WHERE [ClaimID] = @ClaimID


End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__EC_Claims_Delete Succeeded'
Else PRINT 'Procedure Creation: spGen__EC_Claims_Delete Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__EC_Claims_Save') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__EC_Claims_Save;
        PRINT 'Dropped spGen__EC_Claims_Save'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__EC_Claims_Save

   Description:  Updates or Deletes a record In table 'EC_Claims'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__EC_Claims_Save
(
    @ErrText varchar(4000) output,
    @ClaimID uniqueidentifier output,
    @ClaimYear int,
    @Program varchar(50),
    @OrganizationID uniqueidentifier,
    @AllocatedToOrganizationID uniqueidentifier,
    @ClaimSectionCategoryID uniqueidentifier,
    @ClaimDate datetime,
    @MFGInvoice varchar(50),
    @Vendor varchar(50),
    @VendorInvoiceNumber varchar(50),
    @DistributorClaimNumber varchar(50),
    @Description varchar(256),
    @ClaimStatus varchar(50),
    @FundingSplit float,
    @TotalClaim float,
    @BatchNumber int,
    @BatchRecordNumber int,
    @BulkClaim bit,
    @AttachmentID uniqueidentifier,
    @OracleBatchNumber int,
    @OracleInvoiceNumber int,
    @EC_DistributorTagID uniqueidentifier
)

AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN

    DECLARE @UniqueRowCount Int
    IF @ClaimID = '00000000-0000-0000-0000-000000000000' SET @ClaimID = NULL
    IF @ClaimID IS NULL
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    SET @ClaimID = NewID()

                    INSERT
                    INTO [EC_Claims]
                    (
                        [ClaimID],
                        [ClaimYear],
                        [Program],
                        [OrganizationID],
                        [AllocatedToOrganizationID],
                        [ClaimSectionCategoryID],
                        [ClaimDate],
                        [MFGInvoice],
                        [Vendor],
                        [VendorInvoiceNumber],
                        [DistributorClaimNumber],
                        [Description],
                        [ClaimStatus],
                        [FundingSplit],
                        [TotalClaim],
                        [BatchNumber],
                        [BatchRecordNumber],
                        [BulkClaim],
                        [AttachmentID],
                        [OracleBatchNumber],
                        [OracleInvoiceNumber],
                        [EC_DistributorTagID]
                    )
                    VALUES
                    (
                        @ClaimID,
                        @ClaimYear,
                        @Program,
                        @OrganizationID,
                        @AllocatedToOrganizationID,
                        @ClaimSectionCategoryID,
                        @ClaimDate,
                        @MFGInvoice,
                        @Vendor,
                        @VendorInvoiceNumber,
                        @DistributorClaimNumber,
                        @Description,
                        @ClaimStatus,
                        @FundingSplit,
                        @TotalClaim,
                        @BatchNumber,
                        @BatchRecordNumber,
                        @BulkClaim,
                        @AttachmentID,
                        @OracleBatchNumber,
                        @OracleInvoiceNumber,
                        @EC_DistributorTagID
                    )
                END
        END
    ELSE
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    UPDATE [EC_Claims]
                    SET
                    [ClaimYear] = @ClaimYear,
                    [Program] = @Program,
                    [OrganizationID] = @OrganizationID,
                    [AllocatedToOrganizationID] = @AllocatedToOrganizationID,
                    [ClaimSectionCategoryID] = @ClaimSectionCategoryID,
                    [ClaimDate] = @ClaimDate,
                    [MFGInvoice] = @MFGInvoice,
                    [Vendor] = @Vendor,
                    [VendorInvoiceNumber] = @VendorInvoiceNumber,
                    [DistributorClaimNumber] = @DistributorClaimNumber,
                    [Description] = @Description,
                    [ClaimStatus] = @ClaimStatus,
                    [FundingSplit] = @FundingSplit,
                    [TotalClaim] = @TotalClaim,
                    [BatchNumber] = @BatchNumber,
                    [BatchRecordNumber] = @BatchRecordNumber,
                    [BulkClaim] = @BulkClaim,
                    [AttachmentID] = @AttachmentID,
                    [OracleBatchNumber] = @OracleBatchNumber,
                    [OracleInvoiceNumber] = @OracleInvoiceNumber,
                    [EC_DistributorTagID] = @EC_DistributorTagID
                    WHERE [ClaimID] = @ClaimID
                END
        END

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__EC_Claims_Save Succeeded'
Else PRINT 'Procedure Creation: spGen__EC_Claims_Save Error on Creation'
GO





/*
'===============================================================================
' Generated by GenerateDataAndObjectLayer Version 1.0.0.0
'
' <auto-generated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated. 
' </auto-generated>
'===============================================================================

*/
USE [RheemDB]

/* ------------------------------------------------------------
   Get rid of obsolete InsertCNCategory
   Get rid of obsolete UpdateCNCategory
   Get rid of obsolete DeleteCNCategory
   Get rid of obsolete SearchCNCategoryByString
   Get rid of obsolete GetCNCategoryByID
   ------------------------------------------------------------ */
If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('InsertCNCategory') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE InsertCNCategory;
        PRINT 'Dropped InsertCNCategory'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('UpdateCNCategory') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE UpdateCNCategory;
        PRINT 'Dropped UpdateCNCategory'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DeleteCNCategory') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE DeleteCNCategory;
        PRINT 'Dropped DeleteCNCategory'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('SearchCNCategoryByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE SearchCNCategoryByString;
        PRINT 'Dropped SearchCNCategoryByString'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('GetCNCategoryByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE GetCNCategoryByID;
        PRINT 'Dropped GetCNCategoryByID'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__CNCategory_GetByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__CNCategory_GetByID;
        PRINT 'Dropped spGen__CNCategory_GetByID'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__CNCategory_GetByID

   Description:  Selects record(s) from table 'CNCategory'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__CNCategory_GetByID
(
    @CNCategoryID uniqueidentifier

)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int

    Select [CNCategoryID],[Name],[Description],[Disabled]
    FROM [CNCategory]
    WHERE [CNCategoryID] = @CNCategoryID

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__CNCategory_GetByID Succeeded'
Else PRINT 'Procedure Creation: spGen__CNCategory_GetByID Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__CNCategory_SearchByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__CNCategory_SearchByString;
        PRINT 'Dropped spGen__CNCategory_SearchByString'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__CNCategory_SearchByString

   Description:  Selects a record from table 'CNCategory'
                 And puts values into parameters

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__CNCategory_SearchByString
(
    @searchParam varchar(4000)
)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int
    DECLARE @strSql varchar(4000)

    SET @strSql = ' Select [CNCategoryID],[Name],[Description],[Disabled]
    FROM [CNCategory]
    WHERE ' +  @searchParam

    EXEC(@strSql)

    --//We should NOT be using exec above.
    --//If params are NOT known, then be sure to clean sql
    --//If params are known, format like example below

    --IF @prodname IS NOT NULL
    --SELECT @sql = @sql + ' ProductName LIKE @prodname'
    --EXEC sp_executesql @sql, N'@prodname varchar(400)',@prodname

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__CNCategory_SearchByString Succeeded'
Else PRINT 'Procedure Creation: spGen__CNCategory_SearchByString Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__CNCategory_Delete') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__CNCategory_Delete;
        PRINT 'Dropped spGen__CNCategory_Delete'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__CNCategory_Delete

   Description:  Deletes a record from table 'CNCategory'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__CNCategory_Delete
(
    @CNCategoryID uniqueidentifier

)
AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN
    DECLARE @Err Int


    DELETE FROM [CNCategory]
    WHERE [CNCategoryID] = @CNCategoryID


End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__CNCategory_Delete Succeeded'
Else PRINT 'Procedure Creation: spGen__CNCategory_Delete Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__CNCategory_Save') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__CNCategory_Save;
        PRINT 'Dropped spGen__CNCategory_Save'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__CNCategory_Save

   Description:  Updates or Deletes a record In table 'CNCategory'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__CNCategory_Save
(
    @ErrText varchar(4000) output,
    @CNCategoryID uniqueidentifier output,
    @Name varchar(32),
    @Description varchar(50),
    @Disabled bit
)

AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN

    DECLARE @UniqueRowCount Int
    IF @CNCategoryID = '00000000-0000-0000-0000-000000000000' SET @CNCategoryID = NULL
    IF @CNCategoryID IS NULL
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    SET @CNCategoryID = NewID()

                    INSERT
                    INTO [CNCategory]
                    (
                        [CNCategoryID],
                        [Name],
                        [Description],
                        [Disabled]
                    )
                    VALUES
                    (
                        @CNCategoryID,
                        @Name,
                        @Description,
                        @Disabled
                    )
                END
        END
    ELSE
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    UPDATE [CNCategory]
                    SET
                    [Name] = @Name,
                    [Description] = @Description,
                    [Disabled] = @Disabled
                    WHERE [CNCategoryID] = @CNCategoryID
                END
        END

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__CNCategory_Save Succeeded'
Else PRINT 'Procedure Creation: spGen__CNCategory_Save Error on Creation'
GO





/*
'===============================================================================
' Generated by GenerateDataAndObjectLayer Version 1.0.0.0
'
' <auto-generated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated. 
' </auto-generated>
'===============================================================================

*/
USE [RheemDB]

/* ------------------------------------------------------------
   Get rid of obsolete InsertCNRequest
   Get rid of obsolete UpdateCNRequest
   Get rid of obsolete DeleteCNRequest
   Get rid of obsolete SearchCNRequestByString
   Get rid of obsolete GetCNRequestByID
   ------------------------------------------------------------ */
If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('InsertCNRequest') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE InsertCNRequest;
        PRINT 'Dropped InsertCNRequest'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('UpdateCNRequest') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE UpdateCNRequest;
        PRINT 'Dropped UpdateCNRequest'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DeleteCNRequest') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE DeleteCNRequest;
        PRINT 'Dropped DeleteCNRequest'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('SearchCNRequestByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE SearchCNRequestByString;
        PRINT 'Dropped SearchCNRequestByString'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('GetCNRequestByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE GetCNRequestByID;
        PRINT 'Dropped GetCNRequestByID'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__CNRequest_GetByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__CNRequest_GetByID;
        PRINT 'Dropped spGen__CNRequest_GetByID'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__CNRequest_GetByID

   Description:  Selects record(s) from table 'CNRequest'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__CNRequest_GetByID
(
    @CNRequestID uniqueidentifier

)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int

    Select [CNRequestID],[ControlNumber],[RequestDate],[EmailDate],[RCNSubject],[EmailInstructions],[PrintMailing],[PrintMailingDate],[BudgetAvailable],[CNAccountCodeID],[OrganizationID],[CNCategoryID],[PostToRheemote],[OrganizedBy],[RCNStatus],[SubmitDate],[Approver],[FinalApprovalDate],[CompleteDate],[CompletedBy],[Private],[RequestType],[PostToRheemBlog]
    FROM [CNRequest]
    WHERE [CNRequestID] = @CNRequestID

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__CNRequest_GetByID Succeeded'
Else PRINT 'Procedure Creation: spGen__CNRequest_GetByID Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__CNRequest_SearchByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__CNRequest_SearchByString;
        PRINT 'Dropped spGen__CNRequest_SearchByString'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__CNRequest_SearchByString

   Description:  Selects a record from table 'CNRequest'
                 And puts values into parameters

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__CNRequest_SearchByString
(
    @searchParam varchar(4000)
)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int
    DECLARE @strSql varchar(4000)

    SET @strSql = ' Select [CNRequestID],[ControlNumber],[RequestDate],[EmailDate],[RCNSubject],[EmailInstructions],[PrintMailing],[PrintMailingDate],[BudgetAvailable],[CNAccountCodeID],[OrganizationID],[CNCategoryID],[PostToRheemote],[OrganizedBy],[RCNStatus],[SubmitDate],[Approver],[FinalApprovalDate],[CompleteDate],[CompletedBy],[Private],[RequestType],[PostToRheemBlog]
    FROM [CNRequest]
    WHERE ' +  @searchParam

    EXEC(@strSql)

    --//We should NOT be using exec above.
    --//If params are NOT known, then be sure to clean sql
    --//If params are known, format like example below

    --IF @prodname IS NOT NULL
    --SELECT @sql = @sql + ' ProductName LIKE @prodname'
    --EXEC sp_executesql @sql, N'@prodname varchar(400)',@prodname

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__CNRequest_SearchByString Succeeded'
Else PRINT 'Procedure Creation: spGen__CNRequest_SearchByString Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__CNRequest_Delete') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__CNRequest_Delete;
        PRINT 'Dropped spGen__CNRequest_Delete'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__CNRequest_Delete

   Description:  Deletes a record from table 'CNRequest'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__CNRequest_Delete
(
    @CNRequestID uniqueidentifier

)
AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN
    DECLARE @Err Int


    DELETE FROM [CNRequest]
    WHERE [CNRequestID] = @CNRequestID


End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__CNRequest_Delete Succeeded'
Else PRINT 'Procedure Creation: spGen__CNRequest_Delete Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__CNRequest_Save') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__CNRequest_Save;
        PRINT 'Dropped spGen__CNRequest_Save'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__CNRequest_Save

   Description:  Updates or Deletes a record In table 'CNRequest'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__CNRequest_Save
(
    @ErrText varchar(4000) output,
    @CNRequestID uniqueidentifier output,
    @ControlNumber int,
    @RequestDate datetime,
    @EmailDate datetime,
    @RCNSubject varchar(128),
    @EmailInstructions varchar(512),
    @PrintMailing varchar(3),
    @PrintMailingDate varchar(8),
    @BudgetAvailable varchar(3),
    @CNAccountCodeID uniqueidentifier,
    @OrganizationID uniqueidentifier,
    @CNCategoryID uniqueidentifier,
    @PostToRheemote varchar(3),
    @OrganizedBy uniqueidentifier,
    @RCNStatus varchar(50),
    @SubmitDate datetime,
    @Approver uniqueidentifier,
    @FinalApprovalDate datetime,
    @CompleteDate datetime,
    @CompletedBy uniqueidentifier,
    @Private bit,
    @RequestType int,
    @PostToRheemBlog varchar(3)
)

AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN

    DECLARE @UniqueRowCount Int
    IF @CNRequestID = '00000000-0000-0000-0000-000000000000' SET @CNRequestID = NULL
    IF @CNRequestID IS NULL
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    SET @CNRequestID = NewID()

                    INSERT
                    INTO [CNRequest]
                    (
                        [CNRequestID],
                        [ControlNumber],
                        [RequestDate],
                        [EmailDate],
                        [RCNSubject],
                        [EmailInstructions],
                        [PrintMailing],
                        [PrintMailingDate],
                        [BudgetAvailable],
                        [CNAccountCodeID],
                        [OrganizationID],
                        [CNCategoryID],
                        [PostToRheemote],
                        [OrganizedBy],
                        [RCNStatus],
                        [SubmitDate],
                        [Approver],
                        [FinalApprovalDate],
                        [CompleteDate],
                        [CompletedBy],
                        [Private],
                        [RequestType],
                        [PostToRheemBlog]
                    )
                    VALUES
                    (
                        @CNRequestID,
                        @ControlNumber,
                        @RequestDate,
                        @EmailDate,
                        @RCNSubject,
                        @EmailInstructions,
                        @PrintMailing,
                        @PrintMailingDate,
                        @BudgetAvailable,
                        @CNAccountCodeID,
                        @OrganizationID,
                        @CNCategoryID,
                        @PostToRheemote,
                        @OrganizedBy,
                        @RCNStatus,
                        @SubmitDate,
                        @Approver,
                        @FinalApprovalDate,
                        @CompleteDate,
                        @CompletedBy,
                        @Private,
                        @RequestType,
                        @PostToRheemBlog
                    )
                END
        END
    ELSE
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    UPDATE [CNRequest]
                    SET
                    [ControlNumber] = @ControlNumber,
                    [RequestDate] = @RequestDate,
                    [EmailDate] = @EmailDate,
                    [RCNSubject] = @RCNSubject,
                    [EmailInstructions] = @EmailInstructions,
                    [PrintMailing] = @PrintMailing,
                    [PrintMailingDate] = @PrintMailingDate,
                    [BudgetAvailable] = @BudgetAvailable,
                    [CNAccountCodeID] = @CNAccountCodeID,
                    [OrganizationID] = @OrganizationID,
                    [CNCategoryID] = @CNCategoryID,
                    [PostToRheemote] = @PostToRheemote,
                    [OrganizedBy] = @OrganizedBy,
                    [RCNStatus] = @RCNStatus,
                    [SubmitDate] = @SubmitDate,
                    [Approver] = @Approver,
                    [FinalApprovalDate] = @FinalApprovalDate,
                    [CompleteDate] = @CompleteDate,
                    [CompletedBy] = @CompletedBy,
                    [Private] = @Private,
                    [RequestType] = @RequestType,
                    [PostToRheemBlog] = @PostToRheemBlog
                    WHERE [CNRequestID] = @CNRequestID
                END
        END

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__CNRequest_Save Succeeded'
Else PRINT 'Procedure Creation: spGen__CNRequest_Save Error on Creation'
GO





/*
'===============================================================================
' Generated by GenerateDataAndObjectLayer Version 1.0.0.0
'
' <auto-generated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated. 
' </auto-generated>
'===============================================================================

*/
USE [RheemDB]

/* ------------------------------------------------------------
   Get rid of obsolete InsertEC_CreditRebateNames
   Get rid of obsolete UpdateEC_CreditRebateNames
   Get rid of obsolete DeleteEC_CreditRebateNames
   Get rid of obsolete SearchEC_CreditRebateNamesByString
   Get rid of obsolete GetEC_CreditRebateNamesByID
   ------------------------------------------------------------ */
If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('InsertEC_CreditRebateNames') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE InsertEC_CreditRebateNames;
        PRINT 'Dropped InsertEC_CreditRebateNames'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('UpdateEC_CreditRebateNames') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE UpdateEC_CreditRebateNames;
        PRINT 'Dropped UpdateEC_CreditRebateNames'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DeleteEC_CreditRebateNames') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE DeleteEC_CreditRebateNames;
        PRINT 'Dropped DeleteEC_CreditRebateNames'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('SearchEC_CreditRebateNamesByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE SearchEC_CreditRebateNamesByString;
        PRINT 'Dropped SearchEC_CreditRebateNamesByString'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('GetEC_CreditRebateNamesByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE GetEC_CreditRebateNamesByID;
        PRINT 'Dropped GetEC_CreditRebateNamesByID'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__EC_CreditRebateNames_GetByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__EC_CreditRebateNames_GetByID;
        PRINT 'Dropped spGen__EC_CreditRebateNames_GetByID'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__EC_CreditRebateNames_GetByID

   Description:  Selects record(s) from table 'EC_CreditRebateNames'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__EC_CreditRebateNames_GetByID
(
    @CreditRebateNamesID uniqueidentifier

)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int

    Select [CreditRebateNamesID],[RebateName],[GDPYear],[StartDate],[EndDate],[IsActive]
    FROM [EC_CreditRebateNames]
    WHERE [CreditRebateNamesID] = @CreditRebateNamesID

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__EC_CreditRebateNames_GetByID Succeeded'
Else PRINT 'Procedure Creation: spGen__EC_CreditRebateNames_GetByID Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__EC_CreditRebateNames_SearchByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__EC_CreditRebateNames_SearchByString;
        PRINT 'Dropped spGen__EC_CreditRebateNames_SearchByString'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__EC_CreditRebateNames_SearchByString

   Description:  Selects a record from table 'EC_CreditRebateNames'
                 And puts values into parameters

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__EC_CreditRebateNames_SearchByString
(
    @searchParam varchar(4000)
)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int
    DECLARE @strSql varchar(4000)

    SET @strSql = ' Select [CreditRebateNamesID],[RebateName],[GDPYear],[StartDate],[EndDate],[IsActive]
    FROM [EC_CreditRebateNames]
    WHERE ' +  @searchParam

    EXEC(@strSql)

    --//We should NOT be using exec above.
    --//If params are NOT known, then be sure to clean sql
    --//If params are known, format like example below

    --IF @prodname IS NOT NULL
    --SELECT @sql = @sql + ' ProductName LIKE @prodname'
    --EXEC sp_executesql @sql, N'@prodname varchar(400)',@prodname

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__EC_CreditRebateNames_SearchByString Succeeded'
Else PRINT 'Procedure Creation: spGen__EC_CreditRebateNames_SearchByString Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__EC_CreditRebateNames_Delete') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__EC_CreditRebateNames_Delete;
        PRINT 'Dropped spGen__EC_CreditRebateNames_Delete'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__EC_CreditRebateNames_Delete

   Description:  Deletes a record from table 'EC_CreditRebateNames'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__EC_CreditRebateNames_Delete
(
    @CreditRebateNamesID uniqueidentifier

)
AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN
    DECLARE @Err Int


    DELETE FROM [EC_CreditRebateNames]
    WHERE [CreditRebateNamesID] = @CreditRebateNamesID


End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__EC_CreditRebateNames_Delete Succeeded'
Else PRINT 'Procedure Creation: spGen__EC_CreditRebateNames_Delete Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__EC_CreditRebateNames_Save') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__EC_CreditRebateNames_Save;
        PRINT 'Dropped spGen__EC_CreditRebateNames_Save'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__EC_CreditRebateNames_Save

   Description:  Updates or Deletes a record In table 'EC_CreditRebateNames'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__EC_CreditRebateNames_Save
(
    @ErrText varchar(4000) output,
    @CreditRebateNamesID uniqueidentifier output,
    @RebateName varchar(50),
    @GDPYear int,
    @StartDate datetime,
    @EndDate datetime,
    @IsActive bit
)

AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN

    DECLARE @UniqueRowCount Int
    IF @CreditRebateNamesID = '00000000-0000-0000-0000-000000000000' SET @CreditRebateNamesID = NULL
    IF @CreditRebateNamesID IS NULL
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    SET @CreditRebateNamesID = NewID()

                    INSERT
                    INTO [EC_CreditRebateNames]
                    (
                        [CreditRebateNamesID],
                        [RebateName],
                        [GDPYear],
                        [StartDate],
                        [EndDate],
                        [IsActive]
                    )
                    VALUES
                    (
                        @CreditRebateNamesID,
                        @RebateName,
                        @GDPYear,
                        @StartDate,
                        @EndDate,
                        @IsActive
                    )
                END
        END
    ELSE
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    UPDATE [EC_CreditRebateNames]
                    SET
                    [RebateName] = @RebateName,
                    [GDPYear] = @GDPYear,
                    [StartDate] = @StartDate,
                    [EndDate] = @EndDate,
                    [IsActive] = @IsActive
                    WHERE [CreditRebateNamesID] = @CreditRebateNamesID
                END
        END

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__EC_CreditRebateNames_Save Succeeded'
Else PRINT 'Procedure Creation: spGen__EC_CreditRebateNames_Save Error on Creation'
GO





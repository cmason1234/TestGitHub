/*
'===============================================================================
' Generated by GenerateDataAndObjectLayer Version 1.0.0.0
'
' <auto-generated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated. 
' </auto-generated>
'===============================================================================

*/
USE [rheemusers]

/* ------------------------------------------------------------
   Get rid of obsolete InsertAPIRoute
   Get rid of obsolete UpdateAPIRoute
   Get rid of obsolete DeleteAPIRoute
   Get rid of obsolete SearchAPIRouteByString
   Get rid of obsolete GetAPIRouteByID
   ------------------------------------------------------------ */
If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('InsertAPIRoute') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE InsertAPIRoute;
        PRINT 'Dropped InsertAPIRoute'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('UpdateAPIRoute') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE UpdateAPIRoute;
        PRINT 'Dropped UpdateAPIRoute'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DeleteAPIRoute') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE DeleteAPIRoute;
        PRINT 'Dropped DeleteAPIRoute'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('SearchAPIRouteByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE SearchAPIRouteByString;
        PRINT 'Dropped SearchAPIRouteByString'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('GetAPIRouteByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE GetAPIRouteByID;
        PRINT 'Dropped GetAPIRouteByID'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__APIRoute_GetByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__APIRoute_GetByID;
        PRINT 'Dropped spGen__APIRoute_GetByID'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__APIRoute_GetByID

   Description:  Selects record(s) from table 'APIRoute'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__APIRoute_GetByID
(
    @APIRouteID uniqueidentifier

)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int

    Select [APIRouteID],[APIMasterID],[RoutePath],[HttpMethod],[DefaultAccess],[ActionName],[CreateDateTime__Gen],[UpdateDateTime__Gen]
    FROM [APIRoute]
    WHERE [APIRouteID] = @APIRouteID

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__APIRoute_GetByID Succeeded'
Else PRINT 'Procedure Creation: spGen__APIRoute_GetByID Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__APIRoute_SearchByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__APIRoute_SearchByString;
        PRINT 'Dropped spGen__APIRoute_SearchByString'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__APIRoute_SearchByString

   Description:  Selects a record from table 'APIRoute'
                 And puts values into parameters

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__APIRoute_SearchByString
(
    @searchParam varchar(4000)
)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int
    DECLARE @strSql varchar(4000)

    SET @strSql = ' Select [APIRouteID],[APIMasterID],[RoutePath],[HttpMethod],[DefaultAccess],[ActionName],[CreateDateTime__Gen],[UpdateDateTime__Gen]
    FROM [APIRoute]
    WHERE ' +  @searchParam

    EXEC(@strSql)

    --//We should NOT be using exec above.
    --//If params are NOT known, then be sure to clean sql
    --//If params are known, format like example below

    --IF @prodname IS NOT NULL
    --SELECT @sql = @sql + ' ProductName LIKE @prodname'
    --EXEC sp_executesql @sql, N'@prodname varchar(400)',@prodname

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__APIRoute_SearchByString Succeeded'
Else PRINT 'Procedure Creation: spGen__APIRoute_SearchByString Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__APIRoute_Delete') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__APIRoute_Delete;
        PRINT 'Dropped spGen__APIRoute_Delete'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__APIRoute_Delete

   Description:  Deletes a record from table 'APIRoute'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__APIRoute_Delete
(
    @APIRouteID uniqueidentifier

)
AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN
    DECLARE @Err Int


    DELETE FROM [APIRoute]
    WHERE [APIRouteID] = @APIRouteID


End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__APIRoute_Delete Succeeded'
Else PRINT 'Procedure Creation: spGen__APIRoute_Delete Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__APIRoute_Save') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__APIRoute_Save;
        PRINT 'Dropped spGen__APIRoute_Save'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__APIRoute_Save

   Description:  Updates or Deletes a record In table 'APIRoute'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__APIRoute_Save
(
    @ErrText varchar(4000) output,
    @APIRouteID uniqueidentifier output,
    @APIMasterID uniqueidentifier,
    @RoutePath varchar(1500),
    @HttpMethod varchar(50),
    @DefaultAccess bit,
    @ActionName varchar(200)
)

AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN

    DECLARE @UniqueRowCount Int
    IF @APIRouteID = '00000000-0000-0000-0000-000000000000' SET @APIRouteID = NULL
    IF @APIRouteID IS NULL
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    SET @APIRouteID = NewID()

                    INSERT
                    INTO [APIRoute]
                    (
                        [APIRouteID],
                        [APIMasterID],
                        [RoutePath],
                        [HttpMethod],
                        [DefaultAccess],
                        [ActionName],
                        [CreateDateTime__Gen],
                        [UpdateDateTime__Gen]
                    )
                    VALUES
                    (
                        @APIRouteID,
                        @APIMasterID,
                        @RoutePath,
                        @HttpMethod,
                        @DefaultAccess,
                        @ActionName,
                        SYSDATETIME(),
                        SYSDATETIME()
                    )
                END
        END
    ELSE
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    UPDATE [APIRoute]
                    SET
                    [APIMasterID] = @APIMasterID,
                    [RoutePath] = @RoutePath,
                    [HttpMethod] = @HttpMethod,
                    [DefaultAccess] = @DefaultAccess,
                    [ActionName] = @ActionName,
                    [UpdateDateTime__Gen] = SYSDATETIME()
                    WHERE [APIRouteID] = @APIRouteID
                END
        END

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__APIRoute_Save Succeeded'
Else PRINT 'Procedure Creation: spGen__APIRoute_Save Error on Creation'
GO





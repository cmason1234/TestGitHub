/*
'===============================================================================
' Generated by GenerateDataAndObjectLayer Version 1.0.0.0
'
' <auto-generated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated. 
' </auto-generated>
'===============================================================================

*/
USE [RheemUsers]

/* ------------------------------------------------------------
   Get rid of obsolete InsertContractorWSCity
   Get rid of obsolete UpdateContractorWSCity
   Get rid of obsolete DeleteContractorWSCity
   Get rid of obsolete SearchContractorWSCityByString
   Get rid of obsolete GetContractorWSCityByID
   ------------------------------------------------------------ */
If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('InsertContractorWSCity') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE InsertContractorWSCity;
        PRINT 'Dropped InsertContractorWSCity'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('UpdateContractorWSCity') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE UpdateContractorWSCity;
        PRINT 'Dropped UpdateContractorWSCity'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DeleteContractorWSCity') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE DeleteContractorWSCity;
        PRINT 'Dropped DeleteContractorWSCity'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('SearchContractorWSCityByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE SearchContractorWSCityByString;
        PRINT 'Dropped SearchContractorWSCityByString'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('GetContractorWSCityByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE GetContractorWSCityByID;
        PRINT 'Dropped GetContractorWSCityByID'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__ContractorWSCity_GetByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__ContractorWSCity_GetByID;
        PRINT 'Dropped spGen__ContractorWSCity_GetByID'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__ContractorWSCity_GetByID

   Description:  Selects record(s) from table 'ContractorWSCity'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__ContractorWSCity_GetByID
(
    @ContractorWSCityID uniqueidentifier

)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int

    Select [ContractorWSCityID],[OrganizationID],[City],[CreateDateTime__Gen],[UpdateDateTime__Gen]
    FROM [ContractorWSCity]
    WHERE [ContractorWSCityID] = @ContractorWSCityID

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__ContractorWSCity_GetByID Succeeded'
Else PRINT 'Procedure Creation: spGen__ContractorWSCity_GetByID Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__ContractorWSCity_SearchByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__ContractorWSCity_SearchByString;
        PRINT 'Dropped spGen__ContractorWSCity_SearchByString'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__ContractorWSCity_SearchByString

   Description:  Selects a record from table 'ContractorWSCity'
                 And puts values into parameters

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__ContractorWSCity_SearchByString
(
    @searchParam varchar(4000)
)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int
    DECLARE @strSql varchar(4000)

    SET @strSql = ' Select [ContractorWSCityID],[OrganizationID],[City],[CreateDateTime__Gen],[UpdateDateTime__Gen]
    FROM [ContractorWSCity]
    WHERE ' +  @searchParam

    EXEC(@strSql)

    --//We should NOT be using exec above.
    --//If params are NOT known, then be sure to clean sql
    --//If params are known, format like example below

    --IF @prodname IS NOT NULL
    --SELECT @sql = @sql + ' ProductName LIKE @prodname'
    --EXEC sp_executesql @sql, N'@prodname varchar(400)',@prodname

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__ContractorWSCity_SearchByString Succeeded'
Else PRINT 'Procedure Creation: spGen__ContractorWSCity_SearchByString Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__ContractorWSCity_Delete') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__ContractorWSCity_Delete;
        PRINT 'Dropped spGen__ContractorWSCity_Delete'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__ContractorWSCity_Delete

   Description:  Deletes a record from table 'ContractorWSCity'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__ContractorWSCity_Delete
(
    @ContractorWSCityID uniqueidentifier

)
AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN
    DECLARE @Err Int


    DELETE FROM [ContractorWSCity]
    WHERE [ContractorWSCityID] = @ContractorWSCityID


End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__ContractorWSCity_Delete Succeeded'
Else PRINT 'Procedure Creation: spGen__ContractorWSCity_Delete Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__ContractorWSCity_Save') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__ContractorWSCity_Save;
        PRINT 'Dropped spGen__ContractorWSCity_Save'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__ContractorWSCity_Save

   Description:  Updates or Deletes a record In table 'ContractorWSCity'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__ContractorWSCity_Save
(
    @ErrText varchar(4000) output,
    @ContractorWSCityID uniqueidentifier output,
    @OrganizationID uniqueidentifier,
    @City varchar(256)
)

AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN

    DECLARE @UniqueRowCount Int
    IF @ContractorWSCityID = '00000000-0000-0000-0000-000000000000' SET @ContractorWSCityID = NULL
    IF @ContractorWSCityID IS NULL
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    SET @ContractorWSCityID = NewID()

                    INSERT
                    INTO [ContractorWSCity]
                    (
                        [ContractorWSCityID],
                        [OrganizationID],
                        [City],
                        [CreateDateTime__Gen],
                        [UpdateDateTime__Gen]
                    )
                    VALUES
                    (
                        @ContractorWSCityID,
                        @OrganizationID,
                        @City,
                        SYSDATETIME(),
                        SYSDATETIME()
                    )
                END
        END
    ELSE
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    UPDATE [ContractorWSCity]
                    SET
                    [OrganizationID] = @OrganizationID,
                    [City] = @City,
                    [UpdateDateTime__Gen] = SYSDATETIME()
                    WHERE [ContractorWSCityID] = @ContractorWSCityID
                END
        END

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__ContractorWSCity_Save Succeeded'
Else PRINT 'Procedure Creation: spGen__ContractorWSCity_Save Error on Creation'
GO





/*
'===============================================================================
' Generated by GenerateDataAndObjectLayer Version 1.0.0.0
'
' <auto-generated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated. 
' </auto-generated>
'===============================================================================

*/
USE [RheemUsers]

/* ------------------------------------------------------------
   Get rid of obsolete InsertRole
   Get rid of obsolete UpdateRole
   Get rid of obsolete DeleteRole
   Get rid of obsolete SearchRoleByString
   Get rid of obsolete GetRoleByID
   ------------------------------------------------------------ */
If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('InsertRole') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE InsertRole;
        PRINT 'Dropped InsertRole'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('UpdateRole') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE UpdateRole;
        PRINT 'Dropped UpdateRole'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DeleteRole') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE DeleteRole;
        PRINT 'Dropped DeleteRole'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('SearchRoleByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE SearchRoleByString;
        PRINT 'Dropped SearchRoleByString'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('GetRoleByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE GetRoleByID;
        PRINT 'Dropped GetRoleByID'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__Role_GetByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__Role_GetByID;
        PRINT 'Dropped spGen__Role_GetByID'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__Role_GetByID

   Description:  Selects record(s) from table 'Role'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__Role_GetByID
(
    @RoleID uniqueidentifier

)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int

    Select [RoleID],[RoleName],[SortOrder],[Description],[DisplayName],[VaultCode],[CreateDateTime__Gen],[UpdateDateTime__Gen]
    FROM [Role]
    WHERE [RoleID] = @RoleID

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__Role_GetByID Succeeded'
Else PRINT 'Procedure Creation: spGen__Role_GetByID Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__Role_SearchByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__Role_SearchByString;
        PRINT 'Dropped spGen__Role_SearchByString'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__Role_SearchByString

   Description:  Selects a record from table 'Role'
                 And puts values into parameters

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__Role_SearchByString
(
    @searchParam varchar(4000)
)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int
    DECLARE @strSql varchar(4000)

    SET @strSql = ' Select [RoleID],[RoleName],[SortOrder],[Description],[DisplayName],[VaultCode],[CreateDateTime__Gen],[UpdateDateTime__Gen]
    FROM [Role]
    WHERE ' +  @searchParam

    EXEC(@strSql)

    --//We should NOT be using exec above.
    --//If params are NOT known, then be sure to clean sql
    --//If params are known, format like example below

    --IF @prodname IS NOT NULL
    --SELECT @sql = @sql + ' ProductName LIKE @prodname'
    --EXEC sp_executesql @sql, N'@prodname varchar(400)',@prodname

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__Role_SearchByString Succeeded'
Else PRINT 'Procedure Creation: spGen__Role_SearchByString Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__Role_Delete') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__Role_Delete;
        PRINT 'Dropped spGen__Role_Delete'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__Role_Delete

   Description:  Deletes a record from table 'Role'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__Role_Delete
(
    @RoleID uniqueidentifier

)
AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN
    DECLARE @Err Int


    DELETE FROM [Role]
    WHERE [RoleID] = @RoleID


End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__Role_Delete Succeeded'
Else PRINT 'Procedure Creation: spGen__Role_Delete Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__Role_Save') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__Role_Save;
        PRINT 'Dropped spGen__Role_Save'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__Role_Save

   Description:  Updates or Deletes a record In table 'Role'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__Role_Save
(
    @ErrText varchar(4000) output,
    @RoleID uniqueidentifier output,
    @RoleName varchar(50),
    @SortOrder int,
    @Description varchar(50),
    @DisplayName varchar(50),
    @VaultCode int
)

AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN

    DECLARE @UniqueRowCount Int
    IF @RoleID = '00000000-0000-0000-0000-000000000000' SET @RoleID = NULL
    IF @RoleID IS NULL
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    SET @RoleID = NewID()

                    INSERT
                    INTO [Role]
                    (
                        [RoleID],
                        [RoleName],
                        [SortOrder],
                        [Description],
                        [DisplayName],
                        [VaultCode],
                        [CreateDateTime__Gen],
                        [UpdateDateTime__Gen]
                    )
                    VALUES
                    (
                        @RoleID,
                        @RoleName,
                        @SortOrder,
                        @Description,
                        @DisplayName,
                        @VaultCode,
                        SYSDATETIME(),
                        SYSDATETIME()
                    )
                END
        END
    ELSE
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    UPDATE [Role]
                    SET
                    [RoleName] = @RoleName,
                    [SortOrder] = @SortOrder,
                    [Description] = @Description,
                    [DisplayName] = @DisplayName,
                    [VaultCode] = @VaultCode,
                    [UpdateDateTime__Gen] = SYSDATETIME()
                    WHERE [RoleID] = @RoleID
                END
        END

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__Role_Save Succeeded'
Else PRINT 'Procedure Creation: spGen__Role_Save Error on Creation'
GO





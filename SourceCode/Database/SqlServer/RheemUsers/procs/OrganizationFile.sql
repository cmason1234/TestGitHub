/*
'===============================================================================
' Generated by GenerateDataAndObjectLayer Version 1.0.0.0
'
' <auto-generated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated. 
' </auto-generated>
'===============================================================================

*/
USE [RheemUsers]

/* ------------------------------------------------------------
   Get rid of obsolete InsertOrganizationFile
   Get rid of obsolete UpdateOrganizationFile
   Get rid of obsolete DeleteOrganizationFile
   Get rid of obsolete SearchOrganizationFileByString
   Get rid of obsolete GetOrganizationFileByID
   ------------------------------------------------------------ */
If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('InsertOrganizationFile') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE InsertOrganizationFile;
        PRINT 'Dropped InsertOrganizationFile'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('UpdateOrganizationFile') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE UpdateOrganizationFile;
        PRINT 'Dropped UpdateOrganizationFile'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DeleteOrganizationFile') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE DeleteOrganizationFile;
        PRINT 'Dropped DeleteOrganizationFile'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('SearchOrganizationFileByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE SearchOrganizationFileByString;
        PRINT 'Dropped SearchOrganizationFileByString'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('GetOrganizationFileByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE GetOrganizationFileByID;
        PRINT 'Dropped GetOrganizationFileByID'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__OrganizationFile_GetByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__OrganizationFile_GetByID;
        PRINT 'Dropped spGen__OrganizationFile_GetByID'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__OrganizationFile_GetByID

   Description:  Selects record(s) from table 'OrganizationFile'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__OrganizationFile_GetByID
(
    @OrganizationFileID uniqueidentifier

)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int

    Select [OrganizationFileID],[OrganizationID],[ObjectID],[Filename],[Mimetype],[ByteCount],[CreationDate],[DocumentSrc],[Description],[FileGroupID],[ObjectIDTableName],[CreateDateTime__Gen],[UpdateDateTime__Gen]
    FROM [OrganizationFile]
    WHERE [OrganizationFileID] = @OrganizationFileID

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__OrganizationFile_GetByID Succeeded'
Else PRINT 'Procedure Creation: spGen__OrganizationFile_GetByID Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__OrganizationFile_SearchByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__OrganizationFile_SearchByString;
        PRINT 'Dropped spGen__OrganizationFile_SearchByString'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__OrganizationFile_SearchByString

   Description:  Selects a record from table 'OrganizationFile'
                 And puts values into parameters

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__OrganizationFile_SearchByString
(
    @searchParam varchar(4000)
)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int
    DECLARE @strSql varchar(4000)

    SET @strSql = ' Select [OrganizationFileID],[OrganizationID],[ObjectID],[Filename],[Mimetype],[ByteCount],[CreationDate],[DocumentSrc],[Description],[FileGroupID],[ObjectIDTableName],[CreateDateTime__Gen],[UpdateDateTime__Gen]
    FROM [OrganizationFile]
    WHERE ' +  @searchParam

    EXEC(@strSql)

    --//We should NOT be using exec above.
    --//If params are NOT known, then be sure to clean sql
    --//If params are known, format like example below

    --IF @prodname IS NOT NULL
    --SELECT @sql = @sql + ' ProductName LIKE @prodname'
    --EXEC sp_executesql @sql, N'@prodname varchar(400)',@prodname

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__OrganizationFile_SearchByString Succeeded'
Else PRINT 'Procedure Creation: spGen__OrganizationFile_SearchByString Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__OrganizationFile_Delete') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__OrganizationFile_Delete;
        PRINT 'Dropped spGen__OrganizationFile_Delete'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__OrganizationFile_Delete

   Description:  Deletes a record from table 'OrganizationFile'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__OrganizationFile_Delete
(
    @OrganizationFileID uniqueidentifier

)
AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN
    DECLARE @Err Int


    DELETE FROM [OrganizationFile]
    WHERE [OrganizationFileID] = @OrganizationFileID


End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__OrganizationFile_Delete Succeeded'
Else PRINT 'Procedure Creation: spGen__OrganizationFile_Delete Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__OrganizationFile_Save') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__OrganizationFile_Save;
        PRINT 'Dropped spGen__OrganizationFile_Save'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__OrganizationFile_Save

   Description:  Updates or Deletes a record In table 'OrganizationFile'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__OrganizationFile_Save
(
    @ErrText varchar(4000) output,
    @OrganizationFileID uniqueidentifier output,
    @OrganizationID uniqueidentifier,
    @ObjectID uniqueidentifier,
    @Filename varchar(256),
    @Mimetype varchar(256),
    @ByteCount int,
    @CreationDate datetime,
    @DocumentSrc image,
    @Description varchar(256),
    @FileGroupID uniqueidentifier,
    @ObjectIDTableName varchar(50)
)

AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN

    DECLARE @UniqueRowCount Int
    IF @OrganizationFileID = '00000000-0000-0000-0000-000000000000' SET @OrganizationFileID = NULL
    IF @OrganizationFileID IS NULL
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    SET @OrganizationFileID = NewID()

                    INSERT
                    INTO [OrganizationFile]
                    (
                        [OrganizationFileID],
                        [OrganizationID],
                        [ObjectID],
                        [Filename],
                        [Mimetype],
                        [ByteCount],
                        [CreationDate],
                        [DocumentSrc],
                        [Description],
                        [FileGroupID],
                        [ObjectIDTableName],
                        [CreateDateTime__Gen],
                        [UpdateDateTime__Gen]
                    )
                    VALUES
                    (
                        @OrganizationFileID,
                        @OrganizationID,
                        @ObjectID,
                        @Filename,
                        @Mimetype,
                        @ByteCount,
                        @CreationDate,
                        @DocumentSrc,
                        @Description,
                        @FileGroupID,
                        @ObjectIDTableName,
                        SYSDATETIME(),
                        SYSDATETIME()
                    )
                END
        END
    ELSE
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    UPDATE [OrganizationFile]
                    SET
                    [OrganizationID] = @OrganizationID,
                    [ObjectID] = @ObjectID,
                    [Filename] = @Filename,
                    [Mimetype] = @Mimetype,
                    [ByteCount] = @ByteCount,
                    [CreationDate] = @CreationDate,
                    [DocumentSrc] = @DocumentSrc,
                    [Description] = @Description,
                    [FileGroupID] = @FileGroupID,
                    [ObjectIDTableName] = @ObjectIDTableName,
                    [UpdateDateTime__Gen] = SYSDATETIME()
                    WHERE [OrganizationFileID] = @OrganizationFileID
                END
        END

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__OrganizationFile_Save Succeeded'
Else PRINT 'Procedure Creation: spGen__OrganizationFile_Save Error on Creation'
GO





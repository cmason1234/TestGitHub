/*
'===============================================================================
' Generated by GenerateDataAndObjectLayer Version 1.0.0.0
'
' <auto-generated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated. 
' </auto-generated>
'===============================================================================

*/
USE [RheemUsers]

/* ------------------------------------------------------------
   Get rid of obsolete InsertReplicationLog
   Get rid of obsolete UpdateReplicationLog
   Get rid of obsolete DeleteReplicationLog
   Get rid of obsolete SearchReplicationLogByString
   Get rid of obsolete GetReplicationLogByID
   ------------------------------------------------------------ */
If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('InsertReplicationLog') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE InsertReplicationLog;
        PRINT 'Dropped InsertReplicationLog'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('UpdateReplicationLog') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE UpdateReplicationLog;
        PRINT 'Dropped UpdateReplicationLog'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DeleteReplicationLog') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE DeleteReplicationLog;
        PRINT 'Dropped DeleteReplicationLog'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('SearchReplicationLogByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE SearchReplicationLogByString;
        PRINT 'Dropped SearchReplicationLogByString'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('GetReplicationLogByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE GetReplicationLogByID;
        PRINT 'Dropped GetReplicationLogByID'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__ReplicationLog_GetByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__ReplicationLog_GetByID;
        PRINT 'Dropped spGen__ReplicationLog_GetByID'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__ReplicationLog_GetByID

   Description:  Selects record(s) from table 'ReplicationLog'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__ReplicationLog_GetByID
(
    @ReplicationLogID uniqueidentifier

)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int

    Select [ReplicationLogID],[ReplicationLogNumber],[TypeName],[TableName],[DbName],[PKID]
    FROM [ReplicationLog]
    WHERE [ReplicationLogID] = @ReplicationLogID

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__ReplicationLog_GetByID Succeeded'
Else PRINT 'Procedure Creation: spGen__ReplicationLog_GetByID Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__ReplicationLog_SearchByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__ReplicationLog_SearchByString;
        PRINT 'Dropped spGen__ReplicationLog_SearchByString'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__ReplicationLog_SearchByString

   Description:  Selects a record from table 'ReplicationLog'
                 And puts values into parameters

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__ReplicationLog_SearchByString
(
    @searchParam varchar(4000)
)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int
    DECLARE @strSql varchar(4000)

    SET @strSql = ' Select [ReplicationLogID],[ReplicationLogNumber],[TypeName],[TableName],[DbName],[PKID]
    FROM [ReplicationLog]
    WHERE ' +  @searchParam

    EXEC(@strSql)

    --//We should NOT be using exec above.
    --//If params are NOT known, then be sure to clean sql
    --//If params are known, format like example below

    --IF @prodname IS NOT NULL
    --SELECT @sql = @sql + ' ProductName LIKE @prodname'
    --EXEC sp_executesql @sql, N'@prodname varchar(400)',@prodname

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__ReplicationLog_SearchByString Succeeded'
Else PRINT 'Procedure Creation: spGen__ReplicationLog_SearchByString Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__ReplicationLog_Delete') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__ReplicationLog_Delete;
        PRINT 'Dropped spGen__ReplicationLog_Delete'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__ReplicationLog_Delete

   Description:  Deletes a record from table 'ReplicationLog'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__ReplicationLog_Delete
(
    @ReplicationLogID uniqueidentifier

)
AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN
    DECLARE @Err Int


    DELETE FROM [ReplicationLog]
    WHERE [ReplicationLogID] = @ReplicationLogID


End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__ReplicationLog_Delete Succeeded'
Else PRINT 'Procedure Creation: spGen__ReplicationLog_Delete Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__ReplicationLog_Save') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__ReplicationLog_Save;
        PRINT 'Dropped spGen__ReplicationLog_Save'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__ReplicationLog_Save

   Description:  Updates or Deletes a record In table 'ReplicationLog'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__ReplicationLog_Save
(
    @ErrText varchar(4000) output,
    @ReplicationLogID uniqueidentifier output,
    @TypeName varchar(50),
    @TableName varchar(255),
    @DbName varchar(255),
    @PKID uniqueidentifier
)

AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN

    DECLARE @UniqueRowCount Int
    IF @ReplicationLogID = '00000000-0000-0000-0000-000000000000' SET @ReplicationLogID = NULL
    IF @ReplicationLogID IS NULL
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    SET @ReplicationLogID = NewID()

                    INSERT
                    INTO [ReplicationLog]
                    (
                        [ReplicationLogID],
                        [TypeName],
                        [TableName],
                        [DbName],
                        [PKID]
                    )
                    VALUES
                    (
                        @ReplicationLogID,
                        @TypeName,
                        @TableName,
                        @DbName,
                        @PKID
                    )
                END
        END
    ELSE
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    UPDATE [ReplicationLog]
                    SET
                    [TypeName] = @TypeName,
                    [TableName] = @TableName,
                    [DbName] = @DbName,
                    [PKID] = @PKID
                    WHERE [ReplicationLogID] = @ReplicationLogID
                END
        END

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__ReplicationLog_Save Succeeded'
Else PRINT 'Procedure Creation: spGen__ReplicationLog_Save Error on Creation'
GO





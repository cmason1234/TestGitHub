/*
'===============================================================================
' Generated by GenerateDataAndObjectLayer Version 1.0.0.0
'
' <auto-generated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated. 
' </auto-generated>
'===============================================================================

*/
USE [RheemUsers]

/* ------------------------------------------------------------
   Get rid of obsolete InsertProductModelWHTank
   Get rid of obsolete UpdateProductModelWHTank
   Get rid of obsolete DeleteProductModelWHTank
   Get rid of obsolete SearchProductModelWHTankByString
   Get rid of obsolete GetProductModelWHTankByID
   ------------------------------------------------------------ */
If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('InsertProductModelWHTank') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE InsertProductModelWHTank;
        PRINT 'Dropped InsertProductModelWHTank'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('UpdateProductModelWHTank') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE UpdateProductModelWHTank;
        PRINT 'Dropped UpdateProductModelWHTank'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DeleteProductModelWHTank') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE DeleteProductModelWHTank;
        PRINT 'Dropped DeleteProductModelWHTank'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('SearchProductModelWHTankByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE SearchProductModelWHTankByString;
        PRINT 'Dropped SearchProductModelWHTankByString'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('GetProductModelWHTankByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE GetProductModelWHTankByID;
        PRINT 'Dropped GetProductModelWHTankByID'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__ProductModelWHTank_GetByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__ProductModelWHTank_GetByID;
        PRINT 'Dropped spGen__ProductModelWHTank_GetByID'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__ProductModelWHTank_GetByID

   Description:  Selects record(s) from table 'ProductModelWHTank'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__ProductModelWHTank_GetByID
(
    @ProductModelWHTankID uniqueidentifier

)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int

    Select [ProductModelWHTankID],[ProductModelWHID],[TankType],[GallonCapacity],[GasInputNatural],[GasInputLP],[RecoveryNatural],[RecoveryLP],[RecoveryGPMNinetyRiseat3500],[RecoveryGPMNinetyRiseat4500],[FirstHourNatural],[FirstHourLP],[FirstHourElectric],[FirstHourGPMat3500],[FirstHourGPMat4500],[HeightToVent],[TankHeight],[TankWidth],[Diameter],[HeightToGasConnector],[VentSize],[WaterConnectorCenter],[HeightToSideTap],[WaterConnector],[ShipWeight],[EnergyFactorNatural],[EnergyFactorLP],[EnergyFactorElectric],[AnnualOperatingCostNatural],[AnnualOperatingCostLP],[AnnualOperatingCostElectric],[HeightToAirInlet],[FrontToBack],[HeighttoTopOfAssembly],[AltitudeRatingNatural],[AltitudeRatingLP],[Venting],[SideVentingWithKitMin],[SideVentingWithKitMax],[SideVentingWithOptionalKitMin],[SideVentingWithOptionalKitMax],[OptionalHeightWithVentKitMin],[OptionalHeightWithVentKitMax],[FirstHourGPM],[RecoveryGPMNinetyRise],[HeightToWaterConnector],[EnergySaver],[Wattage],[Voltage],[HeightToWaterOutlet],[HeightToWaterInlet],[RoofJackVent],[CreateDateTime__Gen],[UpdateDateTime__Gen]
    FROM [ProductModelWHTank]
    WHERE [ProductModelWHTankID] = @ProductModelWHTankID

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__ProductModelWHTank_GetByID Succeeded'
Else PRINT 'Procedure Creation: spGen__ProductModelWHTank_GetByID Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__ProductModelWHTank_SearchByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__ProductModelWHTank_SearchByString;
        PRINT 'Dropped spGen__ProductModelWHTank_SearchByString'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__ProductModelWHTank_SearchByString

   Description:  Selects a record from table 'ProductModelWHTank'
                 And puts values into parameters

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__ProductModelWHTank_SearchByString
(
    @searchParam varchar(4000)
)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int
    DECLARE @strSql varchar(4000)

    SET @strSql = ' Select [ProductModelWHTankID],[ProductModelWHID],[TankType],[GallonCapacity],[GasInputNatural],[GasInputLP],[RecoveryNatural],[RecoveryLP],[RecoveryGPMNinetyRiseat3500],[RecoveryGPMNinetyRiseat4500],[FirstHourNatural],[FirstHourLP],[FirstHourElectric],[FirstHourGPMat3500],[FirstHourGPMat4500],[HeightToVent],[TankHeight],[TankWidth],[Diameter],[HeightToGasConnector],[VentSize],[WaterConnectorCenter],[HeightToSideTap],[WaterConnector],[ShipWeight],[EnergyFactorNatural],[EnergyFactorLP],[EnergyFactorElectric],[AnnualOperatingCostNatural],[AnnualOperatingCostLP],[AnnualOperatingCostElectric],[HeightToAirInlet],[FrontToBack],[HeighttoTopOfAssembly],[AltitudeRatingNatural],[AltitudeRatingLP],[Venting],[SideVentingWithKitMin],[SideVentingWithKitMax],[SideVentingWithOptionalKitMin],[SideVentingWithOptionalKitMax],[OptionalHeightWithVentKitMin],[OptionalHeightWithVentKitMax],[FirstHourGPM],[RecoveryGPMNinetyRise],[HeightToWaterConnector],[EnergySaver],[Wattage],[Voltage],[HeightToWaterOutlet],[HeightToWaterInlet],[RoofJackVent],[CreateDateTime__Gen],[UpdateDateTime__Gen]
    FROM [ProductModelWHTank]
    WHERE ' +  @searchParam

    EXEC(@strSql)

    --//We should NOT be using exec above.
    --//If params are NOT known, then be sure to clean sql
    --//If params are known, format like example below

    --IF @prodname IS NOT NULL
    --SELECT @sql = @sql + ' ProductName LIKE @prodname'
    --EXEC sp_executesql @sql, N'@prodname varchar(400)',@prodname

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__ProductModelWHTank_SearchByString Succeeded'
Else PRINT 'Procedure Creation: spGen__ProductModelWHTank_SearchByString Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__ProductModelWHTank_Delete') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__ProductModelWHTank_Delete;
        PRINT 'Dropped spGen__ProductModelWHTank_Delete'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__ProductModelWHTank_Delete

   Description:  Deletes a record from table 'ProductModelWHTank'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__ProductModelWHTank_Delete
(
    @ProductModelWHTankID uniqueidentifier

)
AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN
    DECLARE @Err Int


    DELETE FROM [ProductModelWHTank]
    WHERE [ProductModelWHTankID] = @ProductModelWHTankID


End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__ProductModelWHTank_Delete Succeeded'
Else PRINT 'Procedure Creation: spGen__ProductModelWHTank_Delete Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__ProductModelWHTank_Save') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__ProductModelWHTank_Save;
        PRINT 'Dropped spGen__ProductModelWHTank_Save'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__ProductModelWHTank_Save

   Description:  Updates or Deletes a record In table 'ProductModelWHTank'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__ProductModelWHTank_Save
(
    @ErrText varchar(4000) output,
    @ProductModelWHTankID uniqueidentifier output,
    @ProductModelWHID uniqueidentifier,
    @TankType varchar(50),
    @GallonCapacity decimal(3,1),
    @GasInputNatural decimal(3,1),
    @GasInputLP decimal(3,1),
    @RecoveryNatural decimal(3,1),
    @RecoveryLP decimal(3,1),
    @RecoveryGPMNinetyRiseat3500 int,
    @RecoveryGPMNinetyRiseat4500 int,
    @FirstHourNatural int,
    @FirstHourLP int,
    @FirstHourElectric int,
    @FirstHourGPMat3500 int,
    @FirstHourGPMat4500 int,
    @HeightToVent int,
    @TankHeight int,
    @TankWidth int,
    @Diameter int,
    @HeightToGasConnector int,
    @VentSize varchar(50),
    @WaterConnectorCenter int,
    @HeightToSideTap int,
    @WaterConnector int,
    @ShipWeight int,
    @EnergyFactorNatural decimal(3,2),
    @EnergyFactorLP decimal(3,2),
    @EnergyFactorElectric decimal(3,2),
    @AnnualOperatingCostNatural int,
    @AnnualOperatingCostLP int,
    @AnnualOperatingCostElectric int,
    @HeightToAirInlet int,
    @FrontToBack int,
    @HeighttoTopOfAssembly int,
    @AltitudeRatingNatural int,
    @AltitudeRatingLP int,
    @Venting varchar(50),
    @SideVentingWithKitMin int,
    @SideVentingWithKitMax int,
    @SideVentingWithOptionalKitMin int,
    @SideVentingWithOptionalKitMax int,
    @OptionalHeightWithVentKitMin int,
    @OptionalHeightWithVentKitMax int,
    @FirstHourGPM int,
    @RecoveryGPMNinetyRise int,
    @HeightToWaterConnector int,
    @EnergySaver varchar(50),
    @Wattage int,
    @Voltage int,
    @HeightToWaterOutlet int,
    @HeightToWaterInlet int,
    @RoofJackVent int
)

AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN

    DECLARE @UniqueRowCount Int
    IF @ProductModelWHTankID = '00000000-0000-0000-0000-000000000000' SET @ProductModelWHTankID = NULL
    IF @ProductModelWHTankID IS NULL
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    SET @ProductModelWHTankID = NewID()

                    INSERT
                    INTO [ProductModelWHTank]
                    (
                        [ProductModelWHTankID],
                        [ProductModelWHID],
                        [TankType],
                        [GallonCapacity],
                        [GasInputNatural],
                        [GasInputLP],
                        [RecoveryNatural],
                        [RecoveryLP],
                        [RecoveryGPMNinetyRiseat3500],
                        [RecoveryGPMNinetyRiseat4500],
                        [FirstHourNatural],
                        [FirstHourLP],
                        [FirstHourElectric],
                        [FirstHourGPMat3500],
                        [FirstHourGPMat4500],
                        [HeightToVent],
                        [TankHeight],
                        [TankWidth],
                        [Diameter],
                        [HeightToGasConnector],
                        [VentSize],
                        [WaterConnectorCenter],
                        [HeightToSideTap],
                        [WaterConnector],
                        [ShipWeight],
                        [EnergyFactorNatural],
                        [EnergyFactorLP],
                        [EnergyFactorElectric],
                        [AnnualOperatingCostNatural],
                        [AnnualOperatingCostLP],
                        [AnnualOperatingCostElectric],
                        [HeightToAirInlet],
                        [FrontToBack],
                        [HeighttoTopOfAssembly],
                        [AltitudeRatingNatural],
                        [AltitudeRatingLP],
                        [Venting],
                        [SideVentingWithKitMin],
                        [SideVentingWithKitMax],
                        [SideVentingWithOptionalKitMin],
                        [SideVentingWithOptionalKitMax],
                        [OptionalHeightWithVentKitMin],
                        [OptionalHeightWithVentKitMax],
                        [FirstHourGPM],
                        [RecoveryGPMNinetyRise],
                        [HeightToWaterConnector],
                        [EnergySaver],
                        [Wattage],
                        [Voltage],
                        [HeightToWaterOutlet],
                        [HeightToWaterInlet],
                        [RoofJackVent],
                        [CreateDateTime__Gen],
                        [UpdateDateTime__Gen]
                    )
                    VALUES
                    (
                        @ProductModelWHTankID,
                        @ProductModelWHID,
                        @TankType,
                        @GallonCapacity,
                        @GasInputNatural,
                        @GasInputLP,
                        @RecoveryNatural,
                        @RecoveryLP,
                        @RecoveryGPMNinetyRiseat3500,
                        @RecoveryGPMNinetyRiseat4500,
                        @FirstHourNatural,
                        @FirstHourLP,
                        @FirstHourElectric,
                        @FirstHourGPMat3500,
                        @FirstHourGPMat4500,
                        @HeightToVent,
                        @TankHeight,
                        @TankWidth,
                        @Diameter,
                        @HeightToGasConnector,
                        @VentSize,
                        @WaterConnectorCenter,
                        @HeightToSideTap,
                        @WaterConnector,
                        @ShipWeight,
                        @EnergyFactorNatural,
                        @EnergyFactorLP,
                        @EnergyFactorElectric,
                        @AnnualOperatingCostNatural,
                        @AnnualOperatingCostLP,
                        @AnnualOperatingCostElectric,
                        @HeightToAirInlet,
                        @FrontToBack,
                        @HeighttoTopOfAssembly,
                        @AltitudeRatingNatural,
                        @AltitudeRatingLP,
                        @Venting,
                        @SideVentingWithKitMin,
                        @SideVentingWithKitMax,
                        @SideVentingWithOptionalKitMin,
                        @SideVentingWithOptionalKitMax,
                        @OptionalHeightWithVentKitMin,
                        @OptionalHeightWithVentKitMax,
                        @FirstHourGPM,
                        @RecoveryGPMNinetyRise,
                        @HeightToWaterConnector,
                        @EnergySaver,
                        @Wattage,
                        @Voltage,
                        @HeightToWaterOutlet,
                        @HeightToWaterInlet,
                        @RoofJackVent,
                        SYSDATETIME(),
                        SYSDATETIME()
                    )
                END
        END
    ELSE
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    UPDATE [ProductModelWHTank]
                    SET
                    [ProductModelWHID] = @ProductModelWHID,
                    [TankType] = @TankType,
                    [GallonCapacity] = @GallonCapacity,
                    [GasInputNatural] = @GasInputNatural,
                    [GasInputLP] = @GasInputLP,
                    [RecoveryNatural] = @RecoveryNatural,
                    [RecoveryLP] = @RecoveryLP,
                    [RecoveryGPMNinetyRiseat3500] = @RecoveryGPMNinetyRiseat3500,
                    [RecoveryGPMNinetyRiseat4500] = @RecoveryGPMNinetyRiseat4500,
                    [FirstHourNatural] = @FirstHourNatural,
                    [FirstHourLP] = @FirstHourLP,
                    [FirstHourElectric] = @FirstHourElectric,
                    [FirstHourGPMat3500] = @FirstHourGPMat3500,
                    [FirstHourGPMat4500] = @FirstHourGPMat4500,
                    [HeightToVent] = @HeightToVent,
                    [TankHeight] = @TankHeight,
                    [TankWidth] = @TankWidth,
                    [Diameter] = @Diameter,
                    [HeightToGasConnector] = @HeightToGasConnector,
                    [VentSize] = @VentSize,
                    [WaterConnectorCenter] = @WaterConnectorCenter,
                    [HeightToSideTap] = @HeightToSideTap,
                    [WaterConnector] = @WaterConnector,
                    [ShipWeight] = @ShipWeight,
                    [EnergyFactorNatural] = @EnergyFactorNatural,
                    [EnergyFactorLP] = @EnergyFactorLP,
                    [EnergyFactorElectric] = @EnergyFactorElectric,
                    [AnnualOperatingCostNatural] = @AnnualOperatingCostNatural,
                    [AnnualOperatingCostLP] = @AnnualOperatingCostLP,
                    [AnnualOperatingCostElectric] = @AnnualOperatingCostElectric,
                    [HeightToAirInlet] = @HeightToAirInlet,
                    [FrontToBack] = @FrontToBack,
                    [HeighttoTopOfAssembly] = @HeighttoTopOfAssembly,
                    [AltitudeRatingNatural] = @AltitudeRatingNatural,
                    [AltitudeRatingLP] = @AltitudeRatingLP,
                    [Venting] = @Venting,
                    [SideVentingWithKitMin] = @SideVentingWithKitMin,
                    [SideVentingWithKitMax] = @SideVentingWithKitMax,
                    [SideVentingWithOptionalKitMin] = @SideVentingWithOptionalKitMin,
                    [SideVentingWithOptionalKitMax] = @SideVentingWithOptionalKitMax,
                    [OptionalHeightWithVentKitMin] = @OptionalHeightWithVentKitMin,
                    [OptionalHeightWithVentKitMax] = @OptionalHeightWithVentKitMax,
                    [FirstHourGPM] = @FirstHourGPM,
                    [RecoveryGPMNinetyRise] = @RecoveryGPMNinetyRise,
                    [HeightToWaterConnector] = @HeightToWaterConnector,
                    [EnergySaver] = @EnergySaver,
                    [Wattage] = @Wattage,
                    [Voltage] = @Voltage,
                    [HeightToWaterOutlet] = @HeightToWaterOutlet,
                    [HeightToWaterInlet] = @HeightToWaterInlet,
                    [RoofJackVent] = @RoofJackVent,
                    [UpdateDateTime__Gen] = SYSDATETIME()
                    WHERE [ProductModelWHTankID] = @ProductModelWHTankID
                END
        END

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__ProductModelWHTank_Save Succeeded'
Else PRINT 'Procedure Creation: spGen__ProductModelWHTank_Save Error on Creation'
GO





/*
'===============================================================================
' Generated by GenerateDataAndObjectLayer Version 1.0.0.0
'
' <auto-generated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated. 
' </auto-generated>
'===============================================================================

*/
USE [RheemUsers]

/* ------------------------------------------------------------
   Get rid of obsolete InsertRestrictedWord
   Get rid of obsolete UpdateRestrictedWord
   Get rid of obsolete DeleteRestrictedWord
   Get rid of obsolete SearchRestrictedWordByString
   Get rid of obsolete GetRestrictedWordByID
   ------------------------------------------------------------ */
If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('InsertRestrictedWord') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE InsertRestrictedWord;
        PRINT 'Dropped InsertRestrictedWord'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('UpdateRestrictedWord') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE UpdateRestrictedWord;
        PRINT 'Dropped UpdateRestrictedWord'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DeleteRestrictedWord') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE DeleteRestrictedWord;
        PRINT 'Dropped DeleteRestrictedWord'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('SearchRestrictedWordByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE SearchRestrictedWordByString;
        PRINT 'Dropped SearchRestrictedWordByString'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('GetRestrictedWordByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE GetRestrictedWordByID;
        PRINT 'Dropped GetRestrictedWordByID'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__RestrictedWord_GetByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__RestrictedWord_GetByID;
        PRINT 'Dropped spGen__RestrictedWord_GetByID'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__RestrictedWord_GetByID

   Description:  Selects record(s) from table 'RestrictedWord'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__RestrictedWord_GetByID
(
    @RestrictedWordID uniqueidentifier

)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int

    Select [RestrictedWordID],[RestrictedWord],[RestrictedWordCategory],[CreateDateTime__Gen],[UpdateDateTime__Gen]
    FROM [RestrictedWord]
    WHERE [RestrictedWordID] = @RestrictedWordID

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__RestrictedWord_GetByID Succeeded'
Else PRINT 'Procedure Creation: spGen__RestrictedWord_GetByID Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__RestrictedWord_SearchByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__RestrictedWord_SearchByString;
        PRINT 'Dropped spGen__RestrictedWord_SearchByString'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__RestrictedWord_SearchByString

   Description:  Selects a record from table 'RestrictedWord'
                 And puts values into parameters

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__RestrictedWord_SearchByString
(
    @searchParam varchar(4000)
)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int
    DECLARE @strSql varchar(4000)

    SET @strSql = ' Select [RestrictedWordID],[RestrictedWord],[RestrictedWordCategory],[CreateDateTime__Gen],[UpdateDateTime__Gen]
    FROM [RestrictedWord]
    WHERE ' +  @searchParam

    EXEC(@strSql)

    --//We should NOT be using exec above.
    --//If params are NOT known, then be sure to clean sql
    --//If params are known, format like example below

    --IF @prodname IS NOT NULL
    --SELECT @sql = @sql + ' ProductName LIKE @prodname'
    --EXEC sp_executesql @sql, N'@prodname varchar(400)',@prodname

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__RestrictedWord_SearchByString Succeeded'
Else PRINT 'Procedure Creation: spGen__RestrictedWord_SearchByString Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__RestrictedWord_Delete') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__RestrictedWord_Delete;
        PRINT 'Dropped spGen__RestrictedWord_Delete'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__RestrictedWord_Delete

   Description:  Deletes a record from table 'RestrictedWord'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__RestrictedWord_Delete
(
    @RestrictedWordID uniqueidentifier

)
AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN
    DECLARE @Err Int


    DELETE FROM [RestrictedWord]
    WHERE [RestrictedWordID] = @RestrictedWordID


End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__RestrictedWord_Delete Succeeded'
Else PRINT 'Procedure Creation: spGen__RestrictedWord_Delete Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__RestrictedWord_Save') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__RestrictedWord_Save;
        PRINT 'Dropped spGen__RestrictedWord_Save'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__RestrictedWord_Save

   Description:  Updates or Deletes a record In table 'RestrictedWord'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__RestrictedWord_Save
(
    @ErrText varchar(4000) output,
    @RestrictedWordID uniqueidentifier output,
    @RestrictedWord varchar(50),
    @RestrictedWordCategory varchar(50)
)

AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN

    DECLARE @UniqueRowCount Int
    IF @RestrictedWordID = '00000000-0000-0000-0000-000000000000' SET @RestrictedWordID = NULL
    IF @RestrictedWordID IS NULL
        BEGIN
            SELECT @UniqueRowCount = COUNT(1) FROM [RestrictedWord] where [RestrictedWord] = @RestrictedWord 
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = 'RestrictedWord ' + Convert(varchar(36), @RestrictedWord) + ' already exists'
                END
            ELSE
                BEGIN
                    SET @RestrictedWordID = NewID()

                    INSERT
                    INTO [RestrictedWord]
                    (
                        [RestrictedWordID],
                        [RestrictedWord],
                        [RestrictedWordCategory],
                        [CreateDateTime__Gen],
                        [UpdateDateTime__Gen]
                    )
                    VALUES
                    (
                        @RestrictedWordID,
                        @RestrictedWord,
                        @RestrictedWordCategory,
                        SYSDATETIME(),
                        SYSDATETIME()
                    )
                END
        END
    ELSE
        BEGIN
            -- check to see that there isn't another row like this one (assuming the unique index column(s) might have changed)
            SELECT @UniqueRowCount = COUNT(1) FROM [RestrictedWord] where [RestrictedWord] = @RestrictedWord  and [RestrictedWordID] <> @RestrictedWordID
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = 'RestrictedWord ' + Convert(varchar(36), @RestrictedWord) + ' already exists'
                END
            ELSE
                BEGIN
                    UPDATE [RestrictedWord]
                    SET
                    [RestrictedWord] = @RestrictedWord,
                    [RestrictedWordCategory] = @RestrictedWordCategory,
                    [UpdateDateTime__Gen] = SYSDATETIME()
                    WHERE [RestrictedWordID] = @RestrictedWordID
                END
        END

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__RestrictedWord_Save Succeeded'
Else PRINT 'Procedure Creation: spGen__RestrictedWord_Save Error on Creation'
GO





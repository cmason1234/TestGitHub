/*
'===============================================================================
' Generated by GenerateDataAndObjectLayer Version 1.0.0.0
'
' <auto-generated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated. 
' </auto-generated>
'===============================================================================

*/
USE [RheemUsers]

/* ------------------------------------------------------------
   Get rid of obsolete InsertContractorWSTestimonial
   Get rid of obsolete UpdateContractorWSTestimonial
   Get rid of obsolete DeleteContractorWSTestimonial
   Get rid of obsolete SearchContractorWSTestimonialByString
   Get rid of obsolete GetContractorWSTestimonialByID
   ------------------------------------------------------------ */
If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('InsertContractorWSTestimonial') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE InsertContractorWSTestimonial;
        PRINT 'Dropped InsertContractorWSTestimonial'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('UpdateContractorWSTestimonial') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE UpdateContractorWSTestimonial;
        PRINT 'Dropped UpdateContractorWSTestimonial'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DeleteContractorWSTestimonial') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE DeleteContractorWSTestimonial;
        PRINT 'Dropped DeleteContractorWSTestimonial'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('SearchContractorWSTestimonialByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE SearchContractorWSTestimonialByString;
        PRINT 'Dropped SearchContractorWSTestimonialByString'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('GetContractorWSTestimonialByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE GetContractorWSTestimonialByID;
        PRINT 'Dropped GetContractorWSTestimonialByID'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__ContractorWSTestimonial_GetByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__ContractorWSTestimonial_GetByID;
        PRINT 'Dropped spGen__ContractorWSTestimonial_GetByID'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__ContractorWSTestimonial_GetByID

   Description:  Selects record(s) from table 'ContractorWSTestimonial'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__ContractorWSTestimonial_GetByID
(
    @ContractorWSTestimonialID uniqueidentifier

)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int

    Select [ContractorWSTestimonialID],[OrganizationID],[Testimonial],[TestimonialDate],[CreateDateTime__Gen],[UpdateDateTime__Gen]
    FROM [ContractorWSTestimonial]
    WHERE [ContractorWSTestimonialID] = @ContractorWSTestimonialID

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__ContractorWSTestimonial_GetByID Succeeded'
Else PRINT 'Procedure Creation: spGen__ContractorWSTestimonial_GetByID Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__ContractorWSTestimonial_SearchByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__ContractorWSTestimonial_SearchByString;
        PRINT 'Dropped spGen__ContractorWSTestimonial_SearchByString'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__ContractorWSTestimonial_SearchByString

   Description:  Selects a record from table 'ContractorWSTestimonial'
                 And puts values into parameters

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__ContractorWSTestimonial_SearchByString
(
    @searchParam varchar(4000)
)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int
    DECLARE @strSql varchar(4000)

    SET @strSql = ' Select [ContractorWSTestimonialID],[OrganizationID],[Testimonial],[TestimonialDate],[CreateDateTime__Gen],[UpdateDateTime__Gen]
    FROM [ContractorWSTestimonial]
    WHERE ' +  @searchParam

    EXEC(@strSql)

    --//We should NOT be using exec above.
    --//If params are NOT known, then be sure to clean sql
    --//If params are known, format like example below

    --IF @prodname IS NOT NULL
    --SELECT @sql = @sql + ' ProductName LIKE @prodname'
    --EXEC sp_executesql @sql, N'@prodname varchar(400)',@prodname

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__ContractorWSTestimonial_SearchByString Succeeded'
Else PRINT 'Procedure Creation: spGen__ContractorWSTestimonial_SearchByString Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__ContractorWSTestimonial_Delete') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__ContractorWSTestimonial_Delete;
        PRINT 'Dropped spGen__ContractorWSTestimonial_Delete'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__ContractorWSTestimonial_Delete

   Description:  Deletes a record from table 'ContractorWSTestimonial'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__ContractorWSTestimonial_Delete
(
    @ContractorWSTestimonialID uniqueidentifier

)
AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN
    DECLARE @Err Int


    DELETE FROM [ContractorWSTestimonial]
    WHERE [ContractorWSTestimonialID] = @ContractorWSTestimonialID


End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__ContractorWSTestimonial_Delete Succeeded'
Else PRINT 'Procedure Creation: spGen__ContractorWSTestimonial_Delete Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__ContractorWSTestimonial_Save') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__ContractorWSTestimonial_Save;
        PRINT 'Dropped spGen__ContractorWSTestimonial_Save'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__ContractorWSTestimonial_Save

   Description:  Updates or Deletes a record In table 'ContractorWSTestimonial'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__ContractorWSTestimonial_Save
(
    @ErrText varchar(4000) output,
    @ContractorWSTestimonialID uniqueidentifier output,
    @OrganizationID uniqueidentifier,
    @Testimonial varchar(512),
    @TestimonialDate datetime
)

AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN

    DECLARE @UniqueRowCount Int
    IF @ContractorWSTestimonialID = '00000000-0000-0000-0000-000000000000' SET @ContractorWSTestimonialID = NULL
    IF @ContractorWSTestimonialID IS NULL
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    SET @ContractorWSTestimonialID = NewID()

                    INSERT
                    INTO [ContractorWSTestimonial]
                    (
                        [ContractorWSTestimonialID],
                        [OrganizationID],
                        [Testimonial],
                        [TestimonialDate],
                        [CreateDateTime__Gen],
                        [UpdateDateTime__Gen]
                    )
                    VALUES
                    (
                        @ContractorWSTestimonialID,
                        @OrganizationID,
                        @Testimonial,
                        @TestimonialDate,
                        SYSDATETIME(),
                        SYSDATETIME()
                    )
                END
        END
    ELSE
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    UPDATE [ContractorWSTestimonial]
                    SET
                    [OrganizationID] = @OrganizationID,
                    [Testimonial] = @Testimonial,
                    [TestimonialDate] = @TestimonialDate,
                    [UpdateDateTime__Gen] = SYSDATETIME()
                    WHERE [ContractorWSTestimonialID] = @ContractorWSTestimonialID
                END
        END

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__ContractorWSTestimonial_Save Succeeded'
Else PRINT 'Procedure Creation: spGen__ContractorWSTestimonial_Save Error on Creation'
GO





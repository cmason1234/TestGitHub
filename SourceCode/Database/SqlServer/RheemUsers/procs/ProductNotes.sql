/*
'===============================================================================
' Generated by GenerateDataAndObjectLayer Version 1.0.0.0
'
' <auto-generated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated. 
' </auto-generated>
'===============================================================================

*/
USE [RheemUsers]

/* ------------------------------------------------------------
   Get rid of obsolete InsertProductNotes
   Get rid of obsolete UpdateProductNotes
   Get rid of obsolete DeleteProductNotes
   Get rid of obsolete SearchProductNotesByString
   Get rid of obsolete GetProductNotesByID
   ------------------------------------------------------------ */
If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('InsertProductNotes') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE InsertProductNotes;
        PRINT 'Dropped InsertProductNotes'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('UpdateProductNotes') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE UpdateProductNotes;
        PRINT 'Dropped UpdateProductNotes'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DeleteProductNotes') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE DeleteProductNotes;
        PRINT 'Dropped DeleteProductNotes'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('SearchProductNotesByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE SearchProductNotesByString;
        PRINT 'Dropped SearchProductNotesByString'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('GetProductNotesByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE GetProductNotesByID;
        PRINT 'Dropped GetProductNotesByID'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__ProductNotes_GetByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__ProductNotes_GetByID;
        PRINT 'Dropped spGen__ProductNotes_GetByID'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__ProductNotes_GetByID

   Description:  Selects record(s) from table 'ProductNotes'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__ProductNotes_GetByID
(
    @ProductNoteID uniqueidentifier

)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int

    Select [ProductNoteID],[ProductID],[NoteType],[Note],[DateAdded],[CreateDateTime__Gen],[UpdateDateTime__Gen]
    FROM [ProductNotes]
    WHERE [ProductNoteID] = @ProductNoteID

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__ProductNotes_GetByID Succeeded'
Else PRINT 'Procedure Creation: spGen__ProductNotes_GetByID Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__ProductNotes_SearchByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__ProductNotes_SearchByString;
        PRINT 'Dropped spGen__ProductNotes_SearchByString'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__ProductNotes_SearchByString

   Description:  Selects a record from table 'ProductNotes'
                 And puts values into parameters

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__ProductNotes_SearchByString
(
    @searchParam varchar(4000)
)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int
    DECLARE @strSql varchar(4000)

    SET @strSql = ' Select [ProductNoteID],[ProductID],[NoteType],[Note],[DateAdded],[CreateDateTime__Gen],[UpdateDateTime__Gen]
    FROM [ProductNotes]
    WHERE ' +  @searchParam

    EXEC(@strSql)

    --//We should NOT be using exec above.
    --//If params are NOT known, then be sure to clean sql
    --//If params are known, format like example below

    --IF @prodname IS NOT NULL
    --SELECT @sql = @sql + ' ProductName LIKE @prodname'
    --EXEC sp_executesql @sql, N'@prodname varchar(400)',@prodname

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__ProductNotes_SearchByString Succeeded'
Else PRINT 'Procedure Creation: spGen__ProductNotes_SearchByString Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__ProductNotes_Delete') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__ProductNotes_Delete;
        PRINT 'Dropped spGen__ProductNotes_Delete'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__ProductNotes_Delete

   Description:  Deletes a record from table 'ProductNotes'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__ProductNotes_Delete
(
    @ProductNoteID uniqueidentifier

)
AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN
    DECLARE @Err Int


    DELETE FROM [ProductNotes]
    WHERE [ProductNoteID] = @ProductNoteID


End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__ProductNotes_Delete Succeeded'
Else PRINT 'Procedure Creation: spGen__ProductNotes_Delete Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__ProductNotes_Save') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__ProductNotes_Save;
        PRINT 'Dropped spGen__ProductNotes_Save'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__ProductNotes_Save

   Description:  Updates or Deletes a record In table 'ProductNotes'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__ProductNotes_Save
(
    @ErrText varchar(4000) output,
    @ProductNoteID uniqueidentifier output,
    @ProductID uniqueidentifier,
    @NoteType varchar(50),
    @Note text,
    @DateAdded datetime
)

AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN

    DECLARE @UniqueRowCount Int
    IF @ProductNoteID = '00000000-0000-0000-0000-000000000000' SET @ProductNoteID = NULL
    IF @ProductNoteID IS NULL
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    SET @ProductNoteID = NewID()

                    INSERT
                    INTO [ProductNotes]
                    (
                        [ProductNoteID],
                        [ProductID],
                        [NoteType],
                        [Note],
                        [DateAdded],
                        [CreateDateTime__Gen],
                        [UpdateDateTime__Gen]
                    )
                    VALUES
                    (
                        @ProductNoteID,
                        @ProductID,
                        @NoteType,
                        @Note,
                        @DateAdded,
                        SYSDATETIME(),
                        SYSDATETIME()
                    )
                END
        END
    ELSE
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    UPDATE [ProductNotes]
                    SET
                    [ProductID] = @ProductID,
                    [NoteType] = @NoteType,
                    [Note] = @Note,
                    [DateAdded] = @DateAdded,
                    [UpdateDateTime__Gen] = SYSDATETIME()
                    WHERE [ProductNoteID] = @ProductNoteID
                END
        END

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__ProductNotes_Save Succeeded'
Else PRINT 'Procedure Creation: spGen__ProductNotes_Save Error on Creation'
GO





/*
'===============================================================================
' Generated by GenerateDataAndObjectLayer Version 1.0.0.0
'
' <auto-generated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated. 
' </auto-generated>
'===============================================================================

*/
USE [RheemUsers]

/* ------------------------------------------------------------
   Get rid of obsolete InsertBlog
   Get rid of obsolete UpdateBlog
   Get rid of obsolete DeleteBlog
   Get rid of obsolete SearchBlogByString
   Get rid of obsolete GetBlogByID
   ------------------------------------------------------------ */
If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('InsertBlog') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE InsertBlog;
        PRINT 'Dropped InsertBlog'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('UpdateBlog') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE UpdateBlog;
        PRINT 'Dropped UpdateBlog'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DeleteBlog') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE DeleteBlog;
        PRINT 'Dropped DeleteBlog'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('SearchBlogByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE SearchBlogByString;
        PRINT 'Dropped SearchBlogByString'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('GetBlogByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE GetBlogByID;
        PRINT 'Dropped GetBlogByID'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__Blog_GetByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__Blog_GetByID;
        PRINT 'Dropped spGen__Blog_GetByID'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__Blog_GetByID

   Description:  Selects record(s) from table 'Blog'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__Blog_GetByID
(
    @BlogID uniqueidentifier

)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int

    Select [BlogID],[CreatePersonID],[CreateDate],[GoLiveDate],[ExpireDate],[BlogTitle],[FrontPage],[Live],[BlogType],[Icon],[FullPage],[FullPageText],[BrandID],[CreateDateTime__Gen],[UpdateDateTime__Gen]
    FROM [Blog]
    WHERE [BlogID] = @BlogID

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__Blog_GetByID Succeeded'
Else PRINT 'Procedure Creation: spGen__Blog_GetByID Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__Blog_SearchByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__Blog_SearchByString;
        PRINT 'Dropped spGen__Blog_SearchByString'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__Blog_SearchByString

   Description:  Selects a record from table 'Blog'
                 And puts values into parameters

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__Blog_SearchByString
(
    @searchParam varchar(4000)
)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int
    DECLARE @strSql varchar(4000)

    SET @strSql = ' Select [BlogID],[CreatePersonID],[CreateDate],[GoLiveDate],[ExpireDate],[BlogTitle],[FrontPage],[Live],[BlogType],[Icon],[FullPage],[FullPageText],[BrandID],[CreateDateTime__Gen],[UpdateDateTime__Gen]
    FROM [Blog]
    WHERE ' +  @searchParam

    EXEC(@strSql)

    --//We should NOT be using exec above.
    --//If params are NOT known, then be sure to clean sql
    --//If params are known, format like example below

    --IF @prodname IS NOT NULL
    --SELECT @sql = @sql + ' ProductName LIKE @prodname'
    --EXEC sp_executesql @sql, N'@prodname varchar(400)',@prodname

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__Blog_SearchByString Succeeded'
Else PRINT 'Procedure Creation: spGen__Blog_SearchByString Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__Blog_Delete') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__Blog_Delete;
        PRINT 'Dropped spGen__Blog_Delete'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__Blog_Delete

   Description:  Deletes a record from table 'Blog'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__Blog_Delete
(
    @BlogID uniqueidentifier

)
AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN
    DECLARE @Err Int


    DELETE FROM [Blog]
    WHERE [BlogID] = @BlogID


End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__Blog_Delete Succeeded'
Else PRINT 'Procedure Creation: spGen__Blog_Delete Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__Blog_Save') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__Blog_Save;
        PRINT 'Dropped spGen__Blog_Save'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__Blog_Save

   Description:  Updates or Deletes a record In table 'Blog'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__Blog_Save
(
    @ErrText varchar(4000) output,
    @BlogID uniqueidentifier output,
    @CreatePersonID uniqueidentifier,
    @CreateDate datetime,
    @GoLiveDate datetime,
    @ExpireDate datetime,
    @BlogTitle varchar(250),
    @FrontPage text,
    @Live bit,
    @BlogType varchar(50),
    @Icon bit,
    @FullPage bit,
    @FullPageText text,
    @BrandID uniqueidentifier
)

AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN

    DECLARE @UniqueRowCount Int
    IF @BlogID = '00000000-0000-0000-0000-000000000000' SET @BlogID = NULL
    IF @BlogID IS NULL
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    SET @BlogID = NewID()

                    INSERT
                    INTO [Blog]
                    (
                        [BlogID],
                        [CreatePersonID],
                        [CreateDate],
                        [GoLiveDate],
                        [ExpireDate],
                        [BlogTitle],
                        [FrontPage],
                        [Live],
                        [BlogType],
                        [Icon],
                        [FullPage],
                        [FullPageText],
                        [BrandID],
                        [CreateDateTime__Gen],
                        [UpdateDateTime__Gen]
                    )
                    VALUES
                    (
                        @BlogID,
                        @CreatePersonID,
                        @CreateDate,
                        @GoLiveDate,
                        @ExpireDate,
                        @BlogTitle,
                        @FrontPage,
                        @Live,
                        @BlogType,
                        @Icon,
                        @FullPage,
                        @FullPageText,
                        @BrandID,
                        SYSDATETIME(),
                        SYSDATETIME()
                    )
                END
        END
    ELSE
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    UPDATE [Blog]
                    SET
                    [CreatePersonID] = @CreatePersonID,
                    [CreateDate] = @CreateDate,
                    [GoLiveDate] = @GoLiveDate,
                    [ExpireDate] = @ExpireDate,
                    [BlogTitle] = @BlogTitle,
                    [FrontPage] = @FrontPage,
                    [Live] = @Live,
                    [BlogType] = @BlogType,
                    [Icon] = @Icon,
                    [FullPage] = @FullPage,
                    [FullPageText] = @FullPageText,
                    [BrandID] = @BrandID,
                    [UpdateDateTime__Gen] = SYSDATETIME()
                    WHERE [BlogID] = @BlogID
                END
        END

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__Blog_Save Succeeded'
Else PRINT 'Procedure Creation: spGen__Blog_Save Error on Creation'
GO





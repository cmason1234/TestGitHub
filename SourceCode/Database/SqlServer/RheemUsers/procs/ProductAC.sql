/*
'===============================================================================
' Generated by GenerateDataAndObjectLayer Version 1.0.0.0
'
' <auto-generated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated. 
' </auto-generated>
'===============================================================================

*/
USE [RheemUsers]

/* ------------------------------------------------------------
   Get rid of obsolete InsertProductAC
   Get rid of obsolete UpdateProductAC
   Get rid of obsolete DeleteProductAC
   Get rid of obsolete SearchProductACByString
   Get rid of obsolete GetProductACByID
   ------------------------------------------------------------ */
If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('InsertProductAC') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE InsertProductAC;
        PRINT 'Dropped InsertProductAC'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('UpdateProductAC') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE UpdateProductAC;
        PRINT 'Dropped UpdateProductAC'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DeleteProductAC') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE DeleteProductAC;
        PRINT 'Dropped DeleteProductAC'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('SearchProductACByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE SearchProductACByString;
        PRINT 'Dropped SearchProductACByString'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('GetProductACByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE GetProductACByID;
        PRINT 'Dropped GetProductACByID'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__ProductAC_GetByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__ProductAC_GetByID;
        PRINT 'Dropped spGen__ProductAC_GetByID'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__ProductAC_GetByID

   Description:  Selects record(s) from table 'ProductAC'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__ProductAC_GetByID
(
    @ProductACID uniqueidentifier

)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int

    Select [ProductACID],[ProductID],[OutdoorUnitOnly],[OutdoorUnitGas],[OutdoorUnitAir],[IndoorUnitOnly],[PackageUnit],[OutdoorUnitWithCoil],[CreateDateTime__Gen],[UpdateDateTime__Gen],[GasEfficiency]
    FROM [ProductAC]
    WHERE [ProductACID] = @ProductACID

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__ProductAC_GetByID Succeeded'
Else PRINT 'Procedure Creation: spGen__ProductAC_GetByID Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__ProductAC_SearchByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__ProductAC_SearchByString;
        PRINT 'Dropped spGen__ProductAC_SearchByString'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__ProductAC_SearchByString

   Description:  Selects a record from table 'ProductAC'
                 And puts values into parameters

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__ProductAC_SearchByString
(
    @searchParam varchar(4000)
)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int
    DECLARE @strSql varchar(4000)

    SET @strSql = ' Select [ProductACID],[ProductID],[OutdoorUnitOnly],[OutdoorUnitGas],[OutdoorUnitAir],[IndoorUnitOnly],[PackageUnit],[OutdoorUnitWithCoil],[CreateDateTime__Gen],[UpdateDateTime__Gen],[GasEfficiency]
    FROM [ProductAC]
    WHERE ' +  @searchParam

    EXEC(@strSql)

    --//We should NOT be using exec above.
    --//If params are NOT known, then be sure to clean sql
    --//If params are known, format like example below

    --IF @prodname IS NOT NULL
    --SELECT @sql = @sql + ' ProductName LIKE @prodname'
    --EXEC sp_executesql @sql, N'@prodname varchar(400)',@prodname

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__ProductAC_SearchByString Succeeded'
Else PRINT 'Procedure Creation: spGen__ProductAC_SearchByString Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__ProductAC_Delete') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__ProductAC_Delete;
        PRINT 'Dropped spGen__ProductAC_Delete'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__ProductAC_Delete

   Description:  Deletes a record from table 'ProductAC'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__ProductAC_Delete
(
    @ProductACID uniqueidentifier

)
AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN
    DECLARE @Err Int


    DELETE FROM [ProductAC]
    WHERE [ProductACID] = @ProductACID


End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__ProductAC_Delete Succeeded'
Else PRINT 'Procedure Creation: spGen__ProductAC_Delete Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__ProductAC_Save') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__ProductAC_Save;
        PRINT 'Dropped spGen__ProductAC_Save'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__ProductAC_Save

   Description:  Updates or Deletes a record In table 'ProductAC'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__ProductAC_Save
(
    @ErrText varchar(4000) output,
    @ProductACID uniqueidentifier output,
    @ProductID uniqueidentifier,
    @OutdoorUnitOnly bit,
    @OutdoorUnitGas bit,
    @OutdoorUnitAir bit,
    @IndoorUnitOnly bit,
    @PackageUnit bit,
    @OutdoorUnitWithCoil bit,
    @GasEfficiency float
)

AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN

    DECLARE @UniqueRowCount Int
    IF @ProductACID = '00000000-0000-0000-0000-000000000000' SET @ProductACID = NULL
    IF @ProductACID IS NULL
        BEGIN
            SELECT @UniqueRowCount = COUNT(1) FROM [ProductAC] where [ProductID] = @ProductID 
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = 'ProductID ' + Convert(varchar(36), @ProductID) + ' already exists'
                END
            ELSE
                BEGIN
                    SET @ProductACID = NewID()

                    INSERT
                    INTO [ProductAC]
                    (
                        [ProductACID],
                        [ProductID],
                        [OutdoorUnitOnly],
                        [OutdoorUnitGas],
                        [OutdoorUnitAir],
                        [IndoorUnitOnly],
                        [PackageUnit],
                        [OutdoorUnitWithCoil],
                        [CreateDateTime__Gen],
                        [UpdateDateTime__Gen],
                        [GasEfficiency]
                    )
                    VALUES
                    (
                        @ProductACID,
                        @ProductID,
                        @OutdoorUnitOnly,
                        @OutdoorUnitGas,
                        @OutdoorUnitAir,
                        @IndoorUnitOnly,
                        @PackageUnit,
                        @OutdoorUnitWithCoil,
                        SYSDATETIME(),
                        SYSDATETIME(),
                        @GasEfficiency
                    )
                END
        END
    ELSE
        BEGIN
            -- check to see that there isn't another row like this one (assuming the unique index column(s) might have changed)
            SELECT @UniqueRowCount = COUNT(1) FROM [ProductAC] where [ProductID] = @ProductID  and [ProductACID] <> @ProductACID
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = 'ProductID ' + Convert(varchar(36), @ProductID) + ' already exists'
                END
            ELSE
                BEGIN
                    UPDATE [ProductAC]
                    SET
                    [ProductID] = @ProductID,
                    [OutdoorUnitOnly] = @OutdoorUnitOnly,
                    [OutdoorUnitGas] = @OutdoorUnitGas,
                    [OutdoorUnitAir] = @OutdoorUnitAir,
                    [IndoorUnitOnly] = @IndoorUnitOnly,
                    [PackageUnit] = @PackageUnit,
                    [OutdoorUnitWithCoil] = @OutdoorUnitWithCoil,
                    [UpdateDateTime__Gen] = SYSDATETIME(),
                    [GasEfficiency] = @GasEfficiency
                    WHERE [ProductACID] = @ProductACID
                END
        END

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__ProductAC_Save Succeeded'
Else PRINT 'Procedure Creation: spGen__ProductAC_Save Error on Creation'
GO





/*
'===============================================================================
' Generated by GenerateDataAndObjectLayer Version 1.0.0.0
'
' <auto-generated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated. 
' </auto-generated>
'===============================================================================

*/
USE [RheemUsers]

/* ------------------------------------------------------------
   Get rid of obsolete InsertOrganizationNote
   Get rid of obsolete UpdateOrganizationNote
   Get rid of obsolete DeleteOrganizationNote
   Get rid of obsolete SearchOrganizationNoteByString
   Get rid of obsolete GetOrganizationNoteByID
   ------------------------------------------------------------ */
If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('InsertOrganizationNote') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE InsertOrganizationNote;
        PRINT 'Dropped InsertOrganizationNote'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('UpdateOrganizationNote') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE UpdateOrganizationNote;
        PRINT 'Dropped UpdateOrganizationNote'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DeleteOrganizationNote') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE DeleteOrganizationNote;
        PRINT 'Dropped DeleteOrganizationNote'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('SearchOrganizationNoteByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE SearchOrganizationNoteByString;
        PRINT 'Dropped SearchOrganizationNoteByString'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('GetOrganizationNoteByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE GetOrganizationNoteByID;
        PRINT 'Dropped GetOrganizationNoteByID'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__OrganizationNote_GetByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__OrganizationNote_GetByID;
        PRINT 'Dropped spGen__OrganizationNote_GetByID'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__OrganizationNote_GetByID

   Description:  Selects record(s) from table 'OrganizationNote'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__OrganizationNote_GetByID
(
    @OrganizationNoteID uniqueidentifier

)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int

    Select [OrganizationNoteID],[OrganizationID],[NoteType],[Note],[DateAdded],[CreateDateTime__Gen],[UpdateDateTime__Gen]
    FROM [OrganizationNote]
    WHERE [OrganizationNoteID] = @OrganizationNoteID

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__OrganizationNote_GetByID Succeeded'
Else PRINT 'Procedure Creation: spGen__OrganizationNote_GetByID Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__OrganizationNote_SearchByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__OrganizationNote_SearchByString;
        PRINT 'Dropped spGen__OrganizationNote_SearchByString'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__OrganizationNote_SearchByString

   Description:  Selects a record from table 'OrganizationNote'
                 And puts values into parameters

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__OrganizationNote_SearchByString
(
    @searchParam varchar(4000)
)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int
    DECLARE @strSql varchar(4000)

    SET @strSql = ' Select [OrganizationNoteID],[OrganizationID],[NoteType],[Note],[DateAdded],[CreateDateTime__Gen],[UpdateDateTime__Gen]
    FROM [OrganizationNote]
    WHERE ' +  @searchParam

    EXEC(@strSql)

    --//We should NOT be using exec above.
    --//If params are NOT known, then be sure to clean sql
    --//If params are known, format like example below

    --IF @prodname IS NOT NULL
    --SELECT @sql = @sql + ' ProductName LIKE @prodname'
    --EXEC sp_executesql @sql, N'@prodname varchar(400)',@prodname

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__OrganizationNote_SearchByString Succeeded'
Else PRINT 'Procedure Creation: spGen__OrganizationNote_SearchByString Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__OrganizationNote_Delete') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__OrganizationNote_Delete;
        PRINT 'Dropped spGen__OrganizationNote_Delete'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__OrganizationNote_Delete

   Description:  Deletes a record from table 'OrganizationNote'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__OrganizationNote_Delete
(
    @OrganizationNoteID uniqueidentifier

)
AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN
    DECLARE @Err Int


    DELETE FROM [OrganizationNote]
    WHERE [OrganizationNoteID] = @OrganizationNoteID


End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__OrganizationNote_Delete Succeeded'
Else PRINT 'Procedure Creation: spGen__OrganizationNote_Delete Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__OrganizationNote_Save') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__OrganizationNote_Save;
        PRINT 'Dropped spGen__OrganizationNote_Save'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__OrganizationNote_Save

   Description:  Updates or Deletes a record In table 'OrganizationNote'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__OrganizationNote_Save
(
    @ErrText varchar(4000) output,
    @OrganizationNoteID uniqueidentifier output,
    @OrganizationID uniqueidentifier,
    @NoteType varchar(50),
    @Note text,
    @DateAdded datetime
)

AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN

    DECLARE @UniqueRowCount Int
    IF @OrganizationNoteID = '00000000-0000-0000-0000-000000000000' SET @OrganizationNoteID = NULL
    IF @OrganizationNoteID IS NULL
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    SET @OrganizationNoteID = NewID()

                    INSERT
                    INTO [OrganizationNote]
                    (
                        [OrganizationNoteID],
                        [OrganizationID],
                        [NoteType],
                        [Note],
                        [DateAdded],
                        [CreateDateTime__Gen],
                        [UpdateDateTime__Gen]
                    )
                    VALUES
                    (
                        @OrganizationNoteID,
                        @OrganizationID,
                        @NoteType,
                        @Note,
                        @DateAdded,
                        SYSDATETIME(),
                        SYSDATETIME()
                    )
                END
        END
    ELSE
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    UPDATE [OrganizationNote]
                    SET
                    [OrganizationID] = @OrganizationID,
                    [NoteType] = @NoteType,
                    [Note] = @Note,
                    [DateAdded] = @DateAdded,
                    [UpdateDateTime__Gen] = SYSDATETIME()
                    WHERE [OrganizationNoteID] = @OrganizationNoteID
                END
        END

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__OrganizationNote_Save Succeeded'
Else PRINT 'Procedure Creation: spGen__OrganizationNote_Save Error on Creation'
GO





/*
'===============================================================================
' Generated by GenerateDataAndObjectLayer Version 1.0.0.0
'
' <auto-generated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated. 
' </auto-generated>
'===============================================================================

*/
USE [RheemUsers]

/* ------------------------------------------------------------
   Get rid of obsolete InsertCertification
   Get rid of obsolete UpdateCertification
   Get rid of obsolete DeleteCertification
   Get rid of obsolete SearchCertificationByString
   Get rid of obsolete GetCertificationByID
   ------------------------------------------------------------ */
If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('InsertCertification') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE InsertCertification;
        PRINT 'Dropped InsertCertification'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('UpdateCertification') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE UpdateCertification;
        PRINT 'Dropped UpdateCertification'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DeleteCertification') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE DeleteCertification;
        PRINT 'Dropped DeleteCertification'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('SearchCertificationByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE SearchCertificationByString;
        PRINT 'Dropped SearchCertificationByString'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('GetCertificationByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE GetCertificationByID;
        PRINT 'Dropped GetCertificationByID'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__Certification_GetByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__Certification_GetByID;
        PRINT 'Dropped spGen__Certification_GetByID'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__Certification_GetByID

   Description:  Selects record(s) from table 'Certification'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__Certification_GetByID
(
    @CertificationID uniqueidentifier

)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int

    Select [CertificationID],[DisplayName],[ExternalURL],[CreateDateTime__Gen],[UpdateDateTime__Gen],[Description],[CertificationGroupID],[SortOrder]
    FROM [Certification]
    WHERE [CertificationID] = @CertificationID

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__Certification_GetByID Succeeded'
Else PRINT 'Procedure Creation: spGen__Certification_GetByID Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__Certification_SearchByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__Certification_SearchByString;
        PRINT 'Dropped spGen__Certification_SearchByString'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__Certification_SearchByString

   Description:  Selects a record from table 'Certification'
                 And puts values into parameters

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__Certification_SearchByString
(
    @searchParam varchar(8000)
)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int
    DECLARE @strSql varchar(8000)

    SET @strSql = ' Select [CertificationID],[DisplayName],[ExternalURL],[CreateDateTime__Gen],[UpdateDateTime__Gen],[Description],[CertificationGroupID],[SortOrder]
    FROM [Certification]
    WHERE ' +  @searchParam

    EXEC(@strSql)

    --//We should NOT be using exec above.
    --//If params are NOT known, then be sure to clean sql
    --//If params are known, format like example below

    --IF @prodname IS NOT NULL
    --SELECT @sql = @sql + ' ProductName LIKE @prodname'
    --EXEC sp_executesql @sql, N'@prodname varchar(400)',@prodname

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__Certification_SearchByString Succeeded'
Else PRINT 'Procedure Creation: spGen__Certification_SearchByString Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__Certification_Delete') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__Certification_Delete;
        PRINT 'Dropped spGen__Certification_Delete'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__Certification_Delete

   Description:  Deletes a record from table 'Certification'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__Certification_Delete
(
    @CertificationID uniqueidentifier

)
AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN
    DECLARE @Err Int


    DELETE FROM [Certification]
    WHERE [CertificationID] = @CertificationID


End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__Certification_Delete Succeeded'
Else PRINT 'Procedure Creation: spGen__Certification_Delete Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__Certification_Save') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__Certification_Save;
        PRINT 'Dropped spGen__Certification_Save'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__Certification_Save

   Description:  Updates or Deletes a record In table 'Certification'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__Certification_Save
(
    @ErrText varchar(4000) output,
    @CertificationID uniqueidentifier output,
    @DisplayName varchar(50),
    @ExternalURL varchar(256),
    @Description text,
    @CertificationGroupID uniqueidentifier,
    @SortOrder int
)

AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN

    DECLARE @UniqueRowCount Int
    IF @CertificationID = '00000000-0000-0000-0000-000000000000' SET @CertificationID = NULL
    IF @CertificationID IS NULL
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    SET @CertificationID = NewID()

                    INSERT
                    INTO [Certification]
                    (
                        [CertificationID],
                        [DisplayName],
                        [ExternalURL],
                        [CreateDateTime__Gen],
                        [UpdateDateTime__Gen],
                        [Description],
                        [CertificationGroupID],
                        [SortOrder]
                    )
                    VALUES
                    (
                        @CertificationID,
                        @DisplayName,
                        @ExternalURL,
                        SYSDATETIME(),
                        SYSDATETIME(),
                        @Description,
                        @CertificationGroupID,
                        @SortOrder
                    )
                END
        END
    ELSE
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    UPDATE [Certification]
                    SET
                    [DisplayName] = @DisplayName,
                    [ExternalURL] = @ExternalURL,
                    [UpdateDateTime__Gen] = SYSDATETIME(),
                    [Description] = @Description,
                    [CertificationGroupID] = @CertificationGroupID,
                    [SortOrder] = @SortOrder
                    WHERE [CertificationID] = @CertificationID
                END
        END

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__Certification_Save Succeeded'
Else PRINT 'Procedure Creation: spGen__Certification_Save Error on Creation'
GO





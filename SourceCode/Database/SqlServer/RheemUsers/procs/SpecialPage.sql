/*
'===============================================================================
' Generated by GenerateDataAndObjectLayer Version 1.0.0.0
'
' <auto-generated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated. 
' </auto-generated>
'===============================================================================

*/
USE [RheemUsers]

/* ------------------------------------------------------------
   Get rid of obsolete InsertSpecialPage
   Get rid of obsolete UpdateSpecialPage
   Get rid of obsolete DeleteSpecialPage
   Get rid of obsolete SearchSpecialPageByString
   Get rid of obsolete GetSpecialPageByID
   ------------------------------------------------------------ */
If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('InsertSpecialPage') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE InsertSpecialPage;
        PRINT 'Dropped InsertSpecialPage'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('UpdateSpecialPage') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE UpdateSpecialPage;
        PRINT 'Dropped UpdateSpecialPage'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DeleteSpecialPage') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE DeleteSpecialPage;
        PRINT 'Dropped DeleteSpecialPage'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('SearchSpecialPageByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE SearchSpecialPageByString;
        PRINT 'Dropped SearchSpecialPageByString'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('GetSpecialPageByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE GetSpecialPageByID;
        PRINT 'Dropped GetSpecialPageByID'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__SpecialPage_GetByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__SpecialPage_GetByID;
        PRINT 'Dropped spGen__SpecialPage_GetByID'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__SpecialPage_GetByID

   Description:  Selects record(s) from table 'SpecialPage'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__SpecialPage_GetByID
(
    @SpecialPageID uniqueidentifier

)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int

    Select [SpecialPageID],[PageTitle],[CreationDate],[AuthorPersonID],[HTMLContent],[BrandID],[Disabled],[TopContractor],[Contractor],[PROSTOCK],[CoolZone],[SpecialPage],[CreateDateTime__Gen],[UpdateDateTime__Gen]
    FROM [SpecialPage]
    WHERE [SpecialPageID] = @SpecialPageID

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__SpecialPage_GetByID Succeeded'
Else PRINT 'Procedure Creation: spGen__SpecialPage_GetByID Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__SpecialPage_SearchByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__SpecialPage_SearchByString;
        PRINT 'Dropped spGen__SpecialPage_SearchByString'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__SpecialPage_SearchByString

   Description:  Selects a record from table 'SpecialPage'
                 And puts values into parameters

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__SpecialPage_SearchByString
(
    @searchParam varchar(4000)
)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int
    DECLARE @strSql varchar(4000)

    SET @strSql = ' Select [SpecialPageID],[PageTitle],[CreationDate],[AuthorPersonID],[HTMLContent],[BrandID],[Disabled],[TopContractor],[Contractor],[PROSTOCK],[CoolZone],[SpecialPage],[CreateDateTime__Gen],[UpdateDateTime__Gen]
    FROM [SpecialPage]
    WHERE ' +  @searchParam

    EXEC(@strSql)

    --//We should NOT be using exec above.
    --//If params are NOT known, then be sure to clean sql
    --//If params are known, format like example below

    --IF @prodname IS NOT NULL
    --SELECT @sql = @sql + ' ProductName LIKE @prodname'
    --EXEC sp_executesql @sql, N'@prodname varchar(400)',@prodname

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__SpecialPage_SearchByString Succeeded'
Else PRINT 'Procedure Creation: spGen__SpecialPage_SearchByString Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__SpecialPage_Delete') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__SpecialPage_Delete;
        PRINT 'Dropped spGen__SpecialPage_Delete'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__SpecialPage_Delete

   Description:  Deletes a record from table 'SpecialPage'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__SpecialPage_Delete
(
    @SpecialPageID uniqueidentifier

)
AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN
    DECLARE @Err Int


    DELETE FROM [SpecialPage]
    WHERE [SpecialPageID] = @SpecialPageID


End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__SpecialPage_Delete Succeeded'
Else PRINT 'Procedure Creation: spGen__SpecialPage_Delete Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__SpecialPage_Save') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__SpecialPage_Save;
        PRINT 'Dropped spGen__SpecialPage_Save'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__SpecialPage_Save

   Description:  Updates or Deletes a record In table 'SpecialPage'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__SpecialPage_Save
(
    @ErrText varchar(4000) output,
    @SpecialPageID uniqueidentifier output,
    @PageTitle varchar(250),
    @CreationDate datetime,
    @AuthorPersonID uniqueidentifier,
    @HTMLContent text,
    @BrandID uniqueidentifier,
    @Disabled bit,
    @TopContractor bit,
    @Contractor bit,
    @PROSTOCK bit,
    @CoolZone bit,
    @SpecialPage bit
)

AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN

    DECLARE @UniqueRowCount Int
    IF @SpecialPageID = '00000000-0000-0000-0000-000000000000' SET @SpecialPageID = NULL
    IF @SpecialPageID IS NULL
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    SET @SpecialPageID = NewID()

                    INSERT
                    INTO [SpecialPage]
                    (
                        [SpecialPageID],
                        [PageTitle],
                        [CreationDate],
                        [AuthorPersonID],
                        [HTMLContent],
                        [BrandID],
                        [Disabled],
                        [TopContractor],
                        [Contractor],
                        [PROSTOCK],
                        [CoolZone],
                        [SpecialPage],
                        [CreateDateTime__Gen],
                        [UpdateDateTime__Gen]
                    )
                    VALUES
                    (
                        @SpecialPageID,
                        @PageTitle,
                        @CreationDate,
                        @AuthorPersonID,
                        @HTMLContent,
                        @BrandID,
                        @Disabled,
                        @TopContractor,
                        @Contractor,
                        @PROSTOCK,
                        @CoolZone,
                        @SpecialPage,
                        SYSDATETIME(),
                        SYSDATETIME()
                    )
                END
        END
    ELSE
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    UPDATE [SpecialPage]
                    SET
                    [PageTitle] = @PageTitle,
                    [CreationDate] = @CreationDate,
                    [AuthorPersonID] = @AuthorPersonID,
                    [HTMLContent] = @HTMLContent,
                    [BrandID] = @BrandID,
                    [Disabled] = @Disabled,
                    [TopContractor] = @TopContractor,
                    [Contractor] = @Contractor,
                    [PROSTOCK] = @PROSTOCK,
                    [CoolZone] = @CoolZone,
                    [SpecialPage] = @SpecialPage,
                    [UpdateDateTime__Gen] = SYSDATETIME()
                    WHERE [SpecialPageID] = @SpecialPageID
                END
        END

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__SpecialPage_Save Succeeded'
Else PRINT 'Procedure Creation: spGen__SpecialPage_Save Error on Creation'
GO





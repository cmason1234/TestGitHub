/*
'===============================================================================
' Generated by GenerateDataAndObjectLayer Version 1.0.0.0
'
' <auto-generated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated. 
' </auto-generated>
'===============================================================================

*/
USE [RheemUsers]

/* ------------------------------------------------------------
   Get rid of obsolete InsertProduct
   Get rid of obsolete UpdateProduct
   Get rid of obsolete DeleteProduct
   Get rid of obsolete SearchProductByString
   Get rid of obsolete GetProductByID
   ------------------------------------------------------------ */
If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('InsertProduct') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE InsertProduct;
        PRINT 'Dropped InsertProduct'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('UpdateProduct') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE UpdateProduct;
        PRINT 'Dropped UpdateProduct'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DeleteProduct') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE DeleteProduct;
        PRINT 'Dropped DeleteProduct'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('SearchProductByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE SearchProductByString;
        PRINT 'Dropped SearchProductByString'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('GetProductByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE GetProductByID;
        PRINT 'Dropped GetProductByID'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__Product_GetByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__Product_GetByID;
        PRINT 'Dropped spGen__Product_GetByID'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__Product_GetByID

   Description:  Selects record(s) from table 'Product'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__Product_GetByID
(
    @ProductID uniqueidentifier

)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int

    Select [ProductID],[Model],[MetaTitle],[MetaDescription],[BrandID],[ProductCategoryID],[DivisionID],[Commercial],[Residential],[Disabled],[CountryID],[HeroTitle],[HeroSubTitle],[ProductInformation],[CreateDateTime__Gen],[UpdateDateTime__Gen],[AvailableForLiterature],[UseModelPage],[ProductLiteratureDirty],[InternationalBit],[WarrantyRegistrationBit],[WarrantyRegistrationInstallationTime],[ProClubPoints],[SeriesID],[ProductCopy],[WarrantyText],[ReplacementProductID],[Transitional],[Market],[EconetEnabled],[ProductLiteratureDirtyAPI],[PTSURL]
    FROM [Product]
    WHERE [ProductID] = @ProductID

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__Product_GetByID Succeeded'
Else PRINT 'Procedure Creation: spGen__Product_GetByID Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__Product_SearchByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__Product_SearchByString;
        PRINT 'Dropped spGen__Product_SearchByString'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__Product_SearchByString

   Description:  Selects a record from table 'Product'
                 And puts values into parameters

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__Product_SearchByString
(
    @searchParam varchar(8000)
)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int
    DECLARE @strSql varchar(8000)

    SET @strSql = ' Select [ProductID],[Model],[MetaTitle],[MetaDescription],[BrandID],[ProductCategoryID],[DivisionID],[Commercial],[Residential],[Disabled],[CountryID],[HeroTitle],[HeroSubTitle],[ProductInformation],[CreateDateTime__Gen],[UpdateDateTime__Gen],[AvailableForLiterature],[UseModelPage],[ProductLiteratureDirty],[InternationalBit],[WarrantyRegistrationBit],[WarrantyRegistrationInstallationTime],[ProClubPoints],[SeriesID],[ProductCopy],[WarrantyText],[ReplacementProductID],[Transitional],[Market],[EconetEnabled],[ProductLiteratureDirtyAPI],[PTSURL]
    FROM [Product]
    WHERE ' +  @searchParam

    EXEC(@strSql)

    --//We should NOT be using exec above.
    --//If params are NOT known, then be sure to clean sql
    --//If params are known, format like example below

    --IF @prodname IS NOT NULL
    --SELECT @sql = @sql + ' ProductName LIKE @prodname'
    --EXEC sp_executesql @sql, N'@prodname varchar(400)',@prodname

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__Product_SearchByString Succeeded'
Else PRINT 'Procedure Creation: spGen__Product_SearchByString Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__Product_Delete') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__Product_Delete;
        PRINT 'Dropped spGen__Product_Delete'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__Product_Delete

   Description:  Deletes a record from table 'Product'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__Product_Delete
(
    @ProductID uniqueidentifier

)
AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN
    DECLARE @Err Int


    DELETE FROM [Product]
    WHERE [ProductID] = @ProductID


End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__Product_Delete Succeeded'
Else PRINT 'Procedure Creation: spGen__Product_Delete Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__Product_Save') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__Product_Save;
        PRINT 'Dropped spGen__Product_Save'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__Product_Save

   Description:  Updates or Deletes a record In table 'Product'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__Product_Save
(
    @ErrText varchar(4000) output,
    @ProductID uniqueidentifier output,
    @Model varchar(256),
    @MetaTitle varchar(50),
    @MetaDescription varchar(512),
    @BrandID uniqueidentifier,
    @ProductCategoryID uniqueidentifier,
    @DivisionID uniqueidentifier,
    @Commercial bit,
    @Residential bit,
    @Disabled bit,
    @CountryID uniqueidentifier,
    @HeroTitle varchar(150),
    @HeroSubTitle varchar(150),
    @ProductInformation text,
    @AvailableForLiterature bit,
    @UseModelPage bit,
    @ProductLiteratureDirty bit,
    @InternationalBit bit,
    @WarrantyRegistrationBit bit,
    @WarrantyRegistrationInstallationTime int,
    @ProClubPoints int,
    @SeriesID uniqueidentifier,
    @ProductCopy text,
    @WarrantyText text,
    @ReplacementProductID uniqueidentifier,
    @Transitional bit,
    @Market varchar(1),
    @EconetEnabled bit,
    @ProductLiteratureDirtyAPI bit,
    @PTSURL varchar(550)
)

AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN

    DECLARE @UniqueRowCount Int
    IF @ProductID = '00000000-0000-0000-0000-000000000000' SET @ProductID = NULL
    IF @ProductID IS NULL
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    SET @ProductID = NewID()

                    INSERT
                    INTO [Product]
                    (
                        [ProductID],
                        [Model],
                        [MetaTitle],
                        [MetaDescription],
                        [BrandID],
                        [ProductCategoryID],
                        [DivisionID],
                        [Commercial],
                        [Residential],
                        [Disabled],
                        [CountryID],
                        [HeroTitle],
                        [HeroSubTitle],
                        [ProductInformation],
                        [CreateDateTime__Gen],
                        [UpdateDateTime__Gen],
                        [AvailableForLiterature],
                        [UseModelPage],
                        [ProductLiteratureDirty],
                        [InternationalBit],
                        [WarrantyRegistrationBit],
                        [WarrantyRegistrationInstallationTime],
                        [ProClubPoints],
                        [SeriesID],
                        [ProductCopy],
                        [WarrantyText],
                        [ReplacementProductID],
                        [Transitional],
                        [Market],
                        [EconetEnabled],
                        [ProductLiteratureDirtyAPI],
                        [PTSURL]
                    )
                    VALUES
                    (
                        @ProductID,
                        @Model,
                        @MetaTitle,
                        @MetaDescription,
                        @BrandID,
                        @ProductCategoryID,
                        @DivisionID,
                        @Commercial,
                        @Residential,
                        @Disabled,
                        @CountryID,
                        @HeroTitle,
                        @HeroSubTitle,
                        @ProductInformation,
                        SYSDATETIME(),
                        SYSDATETIME(),
                        @AvailableForLiterature,
                        @UseModelPage,
                        @ProductLiteratureDirty,
                        @InternationalBit,
                        @WarrantyRegistrationBit,
                        @WarrantyRegistrationInstallationTime,
                        @ProClubPoints,
                        @SeriesID,
                        @ProductCopy,
                        @WarrantyText,
                        @ReplacementProductID,
                        @Transitional,
                        @Market,
                        @EconetEnabled,
                        @ProductLiteratureDirtyAPI,
                        @PTSURL
                    )
                END
        END
    ELSE
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    UPDATE [Product]
                    SET
                    [Model] = @Model,
                    [MetaTitle] = @MetaTitle,
                    [MetaDescription] = @MetaDescription,
                    [BrandID] = @BrandID,
                    [ProductCategoryID] = @ProductCategoryID,
                    [DivisionID] = @DivisionID,
                    [Commercial] = @Commercial,
                    [Residential] = @Residential,
                    [Disabled] = @Disabled,
                    [CountryID] = @CountryID,
                    [HeroTitle] = @HeroTitle,
                    [HeroSubTitle] = @HeroSubTitle,
                    [ProductInformation] = @ProductInformation,
                    [UpdateDateTime__Gen] = SYSDATETIME(),
                    [AvailableForLiterature] = @AvailableForLiterature,
                    [UseModelPage] = @UseModelPage,
                    [ProductLiteratureDirty] = @ProductLiteratureDirty,
                    [InternationalBit] = @InternationalBit,
                    [WarrantyRegistrationBit] = @WarrantyRegistrationBit,
                    [WarrantyRegistrationInstallationTime] = @WarrantyRegistrationInstallationTime,
                    [ProClubPoints] = @ProClubPoints,
                    [SeriesID] = @SeriesID,
                    [ProductCopy] = @ProductCopy,
                    [WarrantyText] = @WarrantyText,
                    [ReplacementProductID] = @ReplacementProductID,
                    [Transitional] = @Transitional,
                    [Market] = @Market,
                    [EconetEnabled] = @EconetEnabled,
                    [ProductLiteratureDirtyAPI] = @ProductLiteratureDirtyAPI,
                    [PTSURL] = @PTSURL
                    WHERE [ProductID] = @ProductID
                END
        END

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__Product_Save Succeeded'
Else PRINT 'Procedure Creation: spGen__Product_Save Error on Creation'
GO





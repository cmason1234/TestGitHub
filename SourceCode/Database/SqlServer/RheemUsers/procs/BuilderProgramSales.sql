/*
'===============================================================================
' Generated by GenerateDataAndObjectLayer Version 1.0.0.0
'
' <auto-generated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated. 
' </auto-generated>
'===============================================================================

*/
USE [RheemUsers]

/* ------------------------------------------------------------
   Get rid of obsolete InsertBuilderProgramSales
   Get rid of obsolete UpdateBuilderProgramSales
   Get rid of obsolete DeleteBuilderProgramSales
   Get rid of obsolete SearchBuilderProgramSalesByString
   Get rid of obsolete GetBuilderProgramSalesByID
   ------------------------------------------------------------ */
If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('InsertBuilderProgramSales') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE InsertBuilderProgramSales;
        PRINT 'Dropped InsertBuilderProgramSales'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('UpdateBuilderProgramSales') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE UpdateBuilderProgramSales;
        PRINT 'Dropped UpdateBuilderProgramSales'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DeleteBuilderProgramSales') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE DeleteBuilderProgramSales;
        PRINT 'Dropped DeleteBuilderProgramSales'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('SearchBuilderProgramSalesByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE SearchBuilderProgramSalesByString;
        PRINT 'Dropped SearchBuilderProgramSalesByString'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('GetBuilderProgramSalesByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE GetBuilderProgramSalesByID;
        PRINT 'Dropped GetBuilderProgramSalesByID'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__BuilderProgramSales_GetByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__BuilderProgramSales_GetByID;
        PRINT 'Dropped spGen__BuilderProgramSales_GetByID'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__BuilderProgramSales_GetByID

   Description:  Selects record(s) from table 'BuilderProgramSales'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__BuilderProgramSales_GetByID
(
    @BuilderProgramSalesID uniqueidentifier

)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int

    Select [BuilderProgramSalesID],[BuilderProgramID],[ProgramYear],[Month],[MotorBearingUnits],[Incentive],[CreateDateTime__Gen],[UpdateDateTime__Gen]
    FROM [BuilderProgramSales]
    WHERE [BuilderProgramSalesID] = @BuilderProgramSalesID

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__BuilderProgramSales_GetByID Succeeded'
Else PRINT 'Procedure Creation: spGen__BuilderProgramSales_GetByID Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__BuilderProgramSales_SearchByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__BuilderProgramSales_SearchByString;
        PRINT 'Dropped spGen__BuilderProgramSales_SearchByString'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__BuilderProgramSales_SearchByString

   Description:  Selects a record from table 'BuilderProgramSales'
                 And puts values into parameters

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__BuilderProgramSales_SearchByString
(
    @searchParam varchar(4000)
)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int
    DECLARE @strSql varchar(4000)

    SET @strSql = ' Select [BuilderProgramSalesID],[BuilderProgramID],[ProgramYear],[Month],[MotorBearingUnits],[Incentive],[CreateDateTime__Gen],[UpdateDateTime__Gen]
    FROM [BuilderProgramSales]
    WHERE ' +  @searchParam

    EXEC(@strSql)

    --//We should NOT be using exec above.
    --//If params are NOT known, then be sure to clean sql
    --//If params are known, format like example below

    --IF @prodname IS NOT NULL
    --SELECT @sql = @sql + ' ProductName LIKE @prodname'
    --EXEC sp_executesql @sql, N'@prodname varchar(400)',@prodname

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__BuilderProgramSales_SearchByString Succeeded'
Else PRINT 'Procedure Creation: spGen__BuilderProgramSales_SearchByString Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__BuilderProgramSales_Delete') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__BuilderProgramSales_Delete;
        PRINT 'Dropped spGen__BuilderProgramSales_Delete'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__BuilderProgramSales_Delete

   Description:  Deletes a record from table 'BuilderProgramSales'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__BuilderProgramSales_Delete
(
    @BuilderProgramSalesID uniqueidentifier

)
AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN
    DECLARE @Err Int


    DELETE FROM [BuilderProgramSales]
    WHERE [BuilderProgramSalesID] = @BuilderProgramSalesID


End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__BuilderProgramSales_Delete Succeeded'
Else PRINT 'Procedure Creation: spGen__BuilderProgramSales_Delete Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__BuilderProgramSales_Save') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__BuilderProgramSales_Save;
        PRINT 'Dropped spGen__BuilderProgramSales_Save'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__BuilderProgramSales_Save

   Description:  Updates or Deletes a record In table 'BuilderProgramSales'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__BuilderProgramSales_Save
(
    @ErrText varchar(4000) output,
    @BuilderProgramSalesID uniqueidentifier output,
    @BuilderProgramID uniqueidentifier,
    @ProgramYear int,
    @Month int,
    @MotorBearingUnits int,
    @Incentive float
)

AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN

    DECLARE @UniqueRowCount Int
    IF @BuilderProgramSalesID = '00000000-0000-0000-0000-000000000000' SET @BuilderProgramSalesID = NULL
    IF @BuilderProgramSalesID IS NULL
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    SET @BuilderProgramSalesID = NewID()

                    INSERT
                    INTO [BuilderProgramSales]
                    (
                        [BuilderProgramSalesID],
                        [BuilderProgramID],
                        [ProgramYear],
                        [Month],
                        [MotorBearingUnits],
                        [Incentive],
                        [CreateDateTime__Gen],
                        [UpdateDateTime__Gen]
                    )
                    VALUES
                    (
                        @BuilderProgramSalesID,
                        @BuilderProgramID,
                        @ProgramYear,
                        @Month,
                        @MotorBearingUnits,
                        @Incentive,
                        SYSDATETIME(),
                        SYSDATETIME()
                    )
                END
        END
    ELSE
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    UPDATE [BuilderProgramSales]
                    SET
                    [BuilderProgramID] = @BuilderProgramID,
                    [ProgramYear] = @ProgramYear,
                    [Month] = @Month,
                    [MotorBearingUnits] = @MotorBearingUnits,
                    [Incentive] = @Incentive,
                    [UpdateDateTime__Gen] = SYSDATETIME()
                    WHERE [BuilderProgramSalesID] = @BuilderProgramSalesID
                END
        END

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__BuilderProgramSales_Save Succeeded'
Else PRINT 'Procedure Creation: spGen__BuilderProgramSales_Save Error on Creation'
GO





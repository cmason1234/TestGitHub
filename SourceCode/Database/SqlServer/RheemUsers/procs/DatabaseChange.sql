/*
'===============================================================================
' Generated by GenerateDataAndObjectLayer Version 1.0.0.0
'
' <auto-generated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated. 
' </auto-generated>
'===============================================================================

*/
USE [RheemUsers]

/* ------------------------------------------------------------
   Get rid of obsolete InsertDatabaseChange
   Get rid of obsolete UpdateDatabaseChange
   Get rid of obsolete DeleteDatabaseChange
   Get rid of obsolete SearchDatabaseChangeByString
   Get rid of obsolete GetDatabaseChangeByID
   ------------------------------------------------------------ */
If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('InsertDatabaseChange') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE InsertDatabaseChange;
        PRINT 'Dropped InsertDatabaseChange'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('UpdateDatabaseChange') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE UpdateDatabaseChange;
        PRINT 'Dropped UpdateDatabaseChange'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DeleteDatabaseChange') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE DeleteDatabaseChange;
        PRINT 'Dropped DeleteDatabaseChange'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('SearchDatabaseChangeByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE SearchDatabaseChangeByString;
        PRINT 'Dropped SearchDatabaseChangeByString'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('GetDatabaseChangeByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE GetDatabaseChangeByID;
        PRINT 'Dropped GetDatabaseChangeByID'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__DatabaseChange_GetByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__DatabaseChange_GetByID;
        PRINT 'Dropped spGen__DatabaseChange_GetByID'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__DatabaseChange_GetByID

   Description:  Selects record(s) from table 'DatabaseChange'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__DatabaseChange_GetByID
(
    @DatabaseChangeID uniqueidentifier

)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int

    Select [DatabaseChangeID],[EventDate],[PersonID],[TableName],[ColumnName],[OldValue],[NewValue],[Verb],[Subject],[SubjectID],[CreateDateTime__Gen],[UpdateDateTime__Gen]
    FROM [DatabaseChange]
    WHERE [DatabaseChangeID] = @DatabaseChangeID

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__DatabaseChange_GetByID Succeeded'
Else PRINT 'Procedure Creation: spGen__DatabaseChange_GetByID Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__DatabaseChange_SearchByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__DatabaseChange_SearchByString;
        PRINT 'Dropped spGen__DatabaseChange_SearchByString'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__DatabaseChange_SearchByString

   Description:  Selects a record from table 'DatabaseChange'
                 And puts values into parameters

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__DatabaseChange_SearchByString
(
    @searchParam varchar(4000)
)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int
    DECLARE @strSql varchar(4000)

    SET @strSql = ' Select [DatabaseChangeID],[EventDate],[PersonID],[TableName],[ColumnName],[OldValue],[NewValue],[Verb],[Subject],[SubjectID],[CreateDateTime__Gen],[UpdateDateTime__Gen]
    FROM [DatabaseChange]
    WHERE ' +  @searchParam

    EXEC(@strSql)

    --//We should NOT be using exec above.
    --//If params are NOT known, then be sure to clean sql
    --//If params are known, format like example below

    --IF @prodname IS NOT NULL
    --SELECT @sql = @sql + ' ProductName LIKE @prodname'
    --EXEC sp_executesql @sql, N'@prodname varchar(400)',@prodname

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__DatabaseChange_SearchByString Succeeded'
Else PRINT 'Procedure Creation: spGen__DatabaseChange_SearchByString Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__DatabaseChange_Delete') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__DatabaseChange_Delete;
        PRINT 'Dropped spGen__DatabaseChange_Delete'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__DatabaseChange_Delete

   Description:  Deletes a record from table 'DatabaseChange'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__DatabaseChange_Delete
(
    @DatabaseChangeID uniqueidentifier

)
AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN
    DECLARE @Err Int


    DELETE FROM [DatabaseChange]
    WHERE [DatabaseChangeID] = @DatabaseChangeID


End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__DatabaseChange_Delete Succeeded'
Else PRINT 'Procedure Creation: spGen__DatabaseChange_Delete Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__DatabaseChange_Save') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__DatabaseChange_Save;
        PRINT 'Dropped spGen__DatabaseChange_Save'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__DatabaseChange_Save

   Description:  Updates or Deletes a record In table 'DatabaseChange'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__DatabaseChange_Save
(
    @ErrText varchar(4000) output,
    @DatabaseChangeID uniqueidentifier output,
    @EventDate datetime,
    @PersonID uniqueidentifier,
    @TableName varchar(50),
    @ColumnName varchar(50),
    @OldValue varchar(50),
    @NewValue varchar(50),
    @Verb varchar(50),
    @Subject varchar(50),
    @SubjectID uniqueidentifier
)

AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN

    DECLARE @UniqueRowCount Int
    IF @DatabaseChangeID = '00000000-0000-0000-0000-000000000000' SET @DatabaseChangeID = NULL
    IF @DatabaseChangeID IS NULL
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    SET @DatabaseChangeID = NewID()

                    INSERT
                    INTO [DatabaseChange]
                    (
                        [DatabaseChangeID],
                        [EventDate],
                        [PersonID],
                        [TableName],
                        [ColumnName],
                        [OldValue],
                        [NewValue],
                        [Verb],
                        [Subject],
                        [SubjectID],
                        [CreateDateTime__Gen],
                        [UpdateDateTime__Gen]
                    )
                    VALUES
                    (
                        @DatabaseChangeID,
                        @EventDate,
                        @PersonID,
                        @TableName,
                        @ColumnName,
                        @OldValue,
                        @NewValue,
                        @Verb,
                        @Subject,
                        @SubjectID,
                        SYSDATETIME(),
                        SYSDATETIME()
                    )
                END
        END
    ELSE
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    UPDATE [DatabaseChange]
                    SET
                    [EventDate] = @EventDate,
                    [PersonID] = @PersonID,
                    [TableName] = @TableName,
                    [ColumnName] = @ColumnName,
                    [OldValue] = @OldValue,
                    [NewValue] = @NewValue,
                    [Verb] = @Verb,
                    [Subject] = @Subject,
                    [SubjectID] = @SubjectID,
                    [UpdateDateTime__Gen] = SYSDATETIME()
                    WHERE [DatabaseChangeID] = @DatabaseChangeID
                END
        END

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__DatabaseChange_Save Succeeded'
Else PRINT 'Procedure Creation: spGen__DatabaseChange_Save Error on Creation'
GO





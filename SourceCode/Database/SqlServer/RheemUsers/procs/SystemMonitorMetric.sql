/*
'===============================================================================
' Generated by GenerateDataAndObjectLayer Version 1.0.0.0
'
' <auto-generated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated. 
' </auto-generated>
'===============================================================================

*/
USE [rheemusers]

/* ------------------------------------------------------------
   Get rid of obsolete InsertSystemMonitorMetric
   Get rid of obsolete UpdateSystemMonitorMetric
   Get rid of obsolete DeleteSystemMonitorMetric
   Get rid of obsolete SearchSystemMonitorMetricByString
   Get rid of obsolete GetSystemMonitorMetricByID
   ------------------------------------------------------------ */
If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('InsertSystemMonitorMetric') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE InsertSystemMonitorMetric;
        PRINT 'Dropped InsertSystemMonitorMetric'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('UpdateSystemMonitorMetric') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE UpdateSystemMonitorMetric;
        PRINT 'Dropped UpdateSystemMonitorMetric'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DeleteSystemMonitorMetric') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE DeleteSystemMonitorMetric;
        PRINT 'Dropped DeleteSystemMonitorMetric'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('SearchSystemMonitorMetricByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE SearchSystemMonitorMetricByString;
        PRINT 'Dropped SearchSystemMonitorMetricByString'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('GetSystemMonitorMetricByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE GetSystemMonitorMetricByID;
        PRINT 'Dropped GetSystemMonitorMetricByID'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__SystemMonitorMetric_GetByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__SystemMonitorMetric_GetByID;
        PRINT 'Dropped spGen__SystemMonitorMetric_GetByID'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__SystemMonitorMetric_GetByID

   Description:  Selects record(s) from table 'SystemMonitorMetric'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__SystemMonitorMetric_GetByID
(
    @SystemMonitorMetricID uniqueidentifier

)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int

    Select [SystemMonitorMetricID],[MetricName],[MetricValue],[MetricUnitsOfMeasure],[CreateDateTime__Gen],[UpdateDateTime__Gen]
    FROM [SystemMonitorMetric]
    WHERE [SystemMonitorMetricID] = @SystemMonitorMetricID

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__SystemMonitorMetric_GetByID Succeeded'
Else PRINT 'Procedure Creation: spGen__SystemMonitorMetric_GetByID Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__SystemMonitorMetric_SearchByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__SystemMonitorMetric_SearchByString;
        PRINT 'Dropped spGen__SystemMonitorMetric_SearchByString'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__SystemMonitorMetric_SearchByString

   Description:  Selects a record from table 'SystemMonitorMetric'
                 And puts values into parameters

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__SystemMonitorMetric_SearchByString
(
    @searchParam varchar(4000)
)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int
    DECLARE @strSql varchar(4000)

    SET @strSql = ' Select [SystemMonitorMetricID],[MetricName],[MetricValue],[MetricUnitsOfMeasure],[CreateDateTime__Gen],[UpdateDateTime__Gen]
    FROM [SystemMonitorMetric]
    WHERE ' +  @searchParam

    EXEC(@strSql)

    --//We should NOT be using exec above.
    --//If params are NOT known, then be sure to clean sql
    --//If params are known, format like example below

    --IF @prodname IS NOT NULL
    --SELECT @sql = @sql + ' ProductName LIKE @prodname'
    --EXEC sp_executesql @sql, N'@prodname varchar(400)',@prodname

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__SystemMonitorMetric_SearchByString Succeeded'
Else PRINT 'Procedure Creation: spGen__SystemMonitorMetric_SearchByString Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__SystemMonitorMetric_Delete') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__SystemMonitorMetric_Delete;
        PRINT 'Dropped spGen__SystemMonitorMetric_Delete'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__SystemMonitorMetric_Delete

   Description:  Deletes a record from table 'SystemMonitorMetric'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__SystemMonitorMetric_Delete
(
    @SystemMonitorMetricID uniqueidentifier

)
AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN
    DECLARE @Err Int


    DELETE FROM [SystemMonitorMetric]
    WHERE [SystemMonitorMetricID] = @SystemMonitorMetricID


End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__SystemMonitorMetric_Delete Succeeded'
Else PRINT 'Procedure Creation: spGen__SystemMonitorMetric_Delete Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__SystemMonitorMetric_Save') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__SystemMonitorMetric_Save;
        PRINT 'Dropped spGen__SystemMonitorMetric_Save'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__SystemMonitorMetric_Save

   Description:  Updates or Deletes a record In table 'SystemMonitorMetric'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__SystemMonitorMetric_Save
(
    @ErrText varchar(4000) output,
    @SystemMonitorMetricID uniqueidentifier output,
    @MetricName varchar(200),
    @MetricValue varchar(4000),
    @MetricUnitsOfMeasure varchar(200)
)

AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN

    DECLARE @UniqueRowCount Int
    IF @SystemMonitorMetricID = '00000000-0000-0000-0000-000000000000' SET @SystemMonitorMetricID = NULL
    IF @SystemMonitorMetricID IS NULL
        BEGIN
            SELECT @UniqueRowCount = COUNT(1) FROM [SystemMonitorMetric] where [MetricName] = @MetricName 
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = 'MetricName ' + Convert(varchar(36), @MetricName) + ' already exists'
                END
            ELSE
                BEGIN
                    SET @SystemMonitorMetricID = NewID()

                    INSERT
                    INTO [SystemMonitorMetric]
                    (
                        [SystemMonitorMetricID],
                        [MetricName],
                        [MetricValue],
                        [MetricUnitsOfMeasure],
                        [CreateDateTime__Gen],
                        [UpdateDateTime__Gen]
                    )
                    VALUES
                    (
                        @SystemMonitorMetricID,
                        @MetricName,
                        @MetricValue,
                        @MetricUnitsOfMeasure,
                        SYSDATETIME(),
                        SYSDATETIME()
                    )
                END
        END
    ELSE
        BEGIN
            -- check to see that there isn't another row like this one (assuming the unique index column(s) might have changed)
            SELECT @UniqueRowCount = COUNT(1) FROM [SystemMonitorMetric] where [MetricName] = @MetricName  and [SystemMonitorMetricID] <> @SystemMonitorMetricID
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = 'MetricName ' + Convert(varchar(36), @MetricName) + ' already exists'
                END
            ELSE
                BEGIN
                    UPDATE [SystemMonitorMetric]
                    SET
                    [MetricName] = @MetricName,
                    [MetricValue] = @MetricValue,
                    [MetricUnitsOfMeasure] = @MetricUnitsOfMeasure,
                    [UpdateDateTime__Gen] = SYSDATETIME()
                    WHERE [SystemMonitorMetricID] = @SystemMonitorMetricID
                END
        END

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__SystemMonitorMetric_Save Succeeded'
Else PRINT 'Procedure Creation: spGen__SystemMonitorMetric_Save Error on Creation'
GO





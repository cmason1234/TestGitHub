/*
'===============================================================================
' Generated by GenerateDataAndObjectLayer Version 1.0.0.0
'
' <auto-generated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated. 
' </auto-generated>
'===============================================================================

*/
USE [RheemUsers]

/* ------------------------------------------------------------
   Get rid of obsolete InsertContractorRates
   Get rid of obsolete UpdateContractorRates
   Get rid of obsolete DeleteContractorRates
   Get rid of obsolete SearchContractorRatesByString
   Get rid of obsolete GetContractorRatesByID
   ------------------------------------------------------------ */
If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('InsertContractorRates') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE InsertContractorRates;
        PRINT 'Dropped InsertContractorRates'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('UpdateContractorRates') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE UpdateContractorRates;
        PRINT 'Dropped UpdateContractorRates'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DeleteContractorRates') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE DeleteContractorRates;
        PRINT 'Dropped DeleteContractorRates'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('SearchContractorRatesByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE SearchContractorRatesByString;
        PRINT 'Dropped SearchContractorRatesByString'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('GetContractorRatesByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE GetContractorRatesByID;
        PRINT 'Dropped GetContractorRatesByID'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__ContractorRates_GetByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__ContractorRates_GetByID;
        PRINT 'Dropped spGen__ContractorRates_GetByID'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__ContractorRates_GetByID

   Description:  Selects record(s) from table 'ContractorRates'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__ContractorRates_GetByID
(
    @ContractorRateID uniqueidentifier

)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int

    Select [ContractorRateID],[OrganizationID],[RateType],[ResidentialRepairPerHour],[ResidentialRepairMax],[ResidentialReplacementPerHour],[ResidentialReplacementMax],[CommercialRepairPerHour],[CommercialRepairMax],[CommercialReplacementPerHour],[CommercialReplacementMax],[TanklessRepairPerHour],[TanklessRepairMax],[TanklessReplacementPerHour],[TanklessReplacementMax],[TravelAllowanceRangeOneMiles],[TravelAllowanceRangeOneRate],[TravelAllowanceRangeTwoMiles],[TravelAllowanceRangeTwoRate],[TravelAllowanceRangeThreeRate],[ZipCodeZoneZero],[ZipCodeZoneOne],[ZipCodeZoneTwo],[ZipCodeZoneThree],[TimeZone],[TwentyFourHourRate],[Comment],[CreateDateTime__Gen],[UpdateDateTime__Gen],[GERepairMax],[GEReplaceMax]
    FROM [ContractorRates]
    WHERE [ContractorRateID] = @ContractorRateID

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__ContractorRates_GetByID Succeeded'
Else PRINT 'Procedure Creation: spGen__ContractorRates_GetByID Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__ContractorRates_SearchByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__ContractorRates_SearchByString;
        PRINT 'Dropped spGen__ContractorRates_SearchByString'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__ContractorRates_SearchByString

   Description:  Selects a record from table 'ContractorRates'
                 And puts values into parameters

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__ContractorRates_SearchByString
(
    @searchParam varchar(4000)
)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int
    DECLARE @strSql varchar(4000)

    SET @strSql = ' Select [ContractorRateID],[OrganizationID],[RateType],[ResidentialRepairPerHour],[ResidentialRepairMax],[ResidentialReplacementPerHour],[ResidentialReplacementMax],[CommercialRepairPerHour],[CommercialRepairMax],[CommercialReplacementPerHour],[CommercialReplacementMax],[TanklessRepairPerHour],[TanklessRepairMax],[TanklessReplacementPerHour],[TanklessReplacementMax],[TravelAllowanceRangeOneMiles],[TravelAllowanceRangeOneRate],[TravelAllowanceRangeTwoMiles],[TravelAllowanceRangeTwoRate],[TravelAllowanceRangeThreeRate],[ZipCodeZoneZero],[ZipCodeZoneOne],[ZipCodeZoneTwo],[ZipCodeZoneThree],[TimeZone],[TwentyFourHourRate],[Comment],[CreateDateTime__Gen],[UpdateDateTime__Gen],[GERepairMax],[GEReplaceMax]
    FROM [ContractorRates]
    WHERE ' +  @searchParam

    EXEC(@strSql)

    --//We should NOT be using exec above.
    --//If params are NOT known, then be sure to clean sql
    --//If params are known, format like example below

    --IF @prodname IS NOT NULL
    --SELECT @sql = @sql + ' ProductName LIKE @prodname'
    --EXEC sp_executesql @sql, N'@prodname varchar(400)',@prodname

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__ContractorRates_SearchByString Succeeded'
Else PRINT 'Procedure Creation: spGen__ContractorRates_SearchByString Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__ContractorRates_Delete') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__ContractorRates_Delete;
        PRINT 'Dropped spGen__ContractorRates_Delete'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__ContractorRates_Delete

   Description:  Deletes a record from table 'ContractorRates'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__ContractorRates_Delete
(
    @ContractorRateID uniqueidentifier

)
AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN
    DECLARE @Err Int


    DELETE FROM [ContractorRates]
    WHERE [ContractorRateID] = @ContractorRateID


End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__ContractorRates_Delete Succeeded'
Else PRINT 'Procedure Creation: spGen__ContractorRates_Delete Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__ContractorRates_Save') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__ContractorRates_Save;
        PRINT 'Dropped spGen__ContractorRates_Save'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__ContractorRates_Save

   Description:  Updates or Deletes a record In table 'ContractorRates'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__ContractorRates_Save
(
    @ErrText varchar(4000) output,
    @ContractorRateID uniqueidentifier output,
    @OrganizationID uniqueidentifier,
    @RateType varchar(50),
    @ResidentialRepairPerHour float,
    @ResidentialRepairMax float,
    @ResidentialReplacementPerHour float,
    @ResidentialReplacementMax float,
    @CommercialRepairPerHour float,
    @CommercialRepairMax float,
    @CommercialReplacementPerHour float,
    @CommercialReplacementMax float,
    @TanklessRepairPerHour float,
    @TanklessRepairMax float,
    @TanklessReplacementPerHour float,
    @TanklessReplacementMax float,
    @TravelAllowanceRangeOneMiles float,
    @TravelAllowanceRangeOneRate float,
    @TravelAllowanceRangeTwoMiles float,
    @TravelAllowanceRangeTwoRate float,
    @TravelAllowanceRangeThreeRate float,
    @ZipCodeZoneZero float,
    @ZipCodeZoneOne float,
    @ZipCodeZoneTwo float,
    @ZipCodeZoneThree float,
    @TimeZone char(1),
    @TwentyFourHourRate varchar(128),
    @Comment text,
    @GERepairMax float,
    @GEReplaceMax float
)

AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN

    DECLARE @UniqueRowCount Int
    IF @ContractorRateID = '00000000-0000-0000-0000-000000000000' SET @ContractorRateID = NULL
    IF @ContractorRateID IS NULL
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    SET @ContractorRateID = NewID()

                    INSERT
                    INTO [ContractorRates]
                    (
                        [ContractorRateID],
                        [OrganizationID],
                        [RateType],
                        [ResidentialRepairPerHour],
                        [ResidentialRepairMax],
                        [ResidentialReplacementPerHour],
                        [ResidentialReplacementMax],
                        [CommercialRepairPerHour],
                        [CommercialRepairMax],
                        [CommercialReplacementPerHour],
                        [CommercialReplacementMax],
                        [TanklessRepairPerHour],
                        [TanklessRepairMax],
                        [TanklessReplacementPerHour],
                        [TanklessReplacementMax],
                        [TravelAllowanceRangeOneMiles],
                        [TravelAllowanceRangeOneRate],
                        [TravelAllowanceRangeTwoMiles],
                        [TravelAllowanceRangeTwoRate],
                        [TravelAllowanceRangeThreeRate],
                        [ZipCodeZoneZero],
                        [ZipCodeZoneOne],
                        [ZipCodeZoneTwo],
                        [ZipCodeZoneThree],
                        [TimeZone],
                        [TwentyFourHourRate],
                        [Comment],
                        [CreateDateTime__Gen],
                        [UpdateDateTime__Gen],
                        [GERepairMax],
                        [GEReplaceMax]
                    )
                    VALUES
                    (
                        @ContractorRateID,
                        @OrganizationID,
                        @RateType,
                        @ResidentialRepairPerHour,
                        @ResidentialRepairMax,
                        @ResidentialReplacementPerHour,
                        @ResidentialReplacementMax,
                        @CommercialRepairPerHour,
                        @CommercialRepairMax,
                        @CommercialReplacementPerHour,
                        @CommercialReplacementMax,
                        @TanklessRepairPerHour,
                        @TanklessRepairMax,
                        @TanklessReplacementPerHour,
                        @TanklessReplacementMax,
                        @TravelAllowanceRangeOneMiles,
                        @TravelAllowanceRangeOneRate,
                        @TravelAllowanceRangeTwoMiles,
                        @TravelAllowanceRangeTwoRate,
                        @TravelAllowanceRangeThreeRate,
                        @ZipCodeZoneZero,
                        @ZipCodeZoneOne,
                        @ZipCodeZoneTwo,
                        @ZipCodeZoneThree,
                        @TimeZone,
                        @TwentyFourHourRate,
                        @Comment,
                        SYSDATETIME(),
                        SYSDATETIME(),
                        @GERepairMax,
                        @GEReplaceMax
                    )
                END
        END
    ELSE
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    UPDATE [ContractorRates]
                    SET
                    [OrganizationID] = @OrganizationID,
                    [RateType] = @RateType,
                    [ResidentialRepairPerHour] = @ResidentialRepairPerHour,
                    [ResidentialRepairMax] = @ResidentialRepairMax,
                    [ResidentialReplacementPerHour] = @ResidentialReplacementPerHour,
                    [ResidentialReplacementMax] = @ResidentialReplacementMax,
                    [CommercialRepairPerHour] = @CommercialRepairPerHour,
                    [CommercialRepairMax] = @CommercialRepairMax,
                    [CommercialReplacementPerHour] = @CommercialReplacementPerHour,
                    [CommercialReplacementMax] = @CommercialReplacementMax,
                    [TanklessRepairPerHour] = @TanklessRepairPerHour,
                    [TanklessRepairMax] = @TanklessRepairMax,
                    [TanklessReplacementPerHour] = @TanklessReplacementPerHour,
                    [TanklessReplacementMax] = @TanklessReplacementMax,
                    [TravelAllowanceRangeOneMiles] = @TravelAllowanceRangeOneMiles,
                    [TravelAllowanceRangeOneRate] = @TravelAllowanceRangeOneRate,
                    [TravelAllowanceRangeTwoMiles] = @TravelAllowanceRangeTwoMiles,
                    [TravelAllowanceRangeTwoRate] = @TravelAllowanceRangeTwoRate,
                    [TravelAllowanceRangeThreeRate] = @TravelAllowanceRangeThreeRate,
                    [ZipCodeZoneZero] = @ZipCodeZoneZero,
                    [ZipCodeZoneOne] = @ZipCodeZoneOne,
                    [ZipCodeZoneTwo] = @ZipCodeZoneTwo,
                    [ZipCodeZoneThree] = @ZipCodeZoneThree,
                    [TimeZone] = @TimeZone,
                    [TwentyFourHourRate] = @TwentyFourHourRate,
                    [Comment] = @Comment,
                    [UpdateDateTime__Gen] = SYSDATETIME(),
                    [GERepairMax] = @GERepairMax,
                    [GEReplaceMax] = @GEReplaceMax
                    WHERE [ContractorRateID] = @ContractorRateID
                END
        END

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__ContractorRates_Save Succeeded'
Else PRINT 'Procedure Creation: spGen__ContractorRates_Save Error on Creation'
GO





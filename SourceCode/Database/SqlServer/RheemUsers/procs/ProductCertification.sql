/*
'===============================================================================
' Generated by GenerateDataAndObjectLayer Version 1.0.0.0
'
' <auto-generated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated. 
' </auto-generated>
'===============================================================================

*/
USE [RheemUsers]

/* ------------------------------------------------------------
   Get rid of obsolete InsertProductCertification
   Get rid of obsolete UpdateProductCertification
   Get rid of obsolete DeleteProductCertification
   Get rid of obsolete SearchProductCertificationByString
   Get rid of obsolete GetProductCertificationByID
   ------------------------------------------------------------ */
If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('InsertProductCertification') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE InsertProductCertification;
        PRINT 'Dropped InsertProductCertification'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('UpdateProductCertification') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE UpdateProductCertification;
        PRINT 'Dropped UpdateProductCertification'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DeleteProductCertification') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE DeleteProductCertification;
        PRINT 'Dropped DeleteProductCertification'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('SearchProductCertificationByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE SearchProductCertificationByString;
        PRINT 'Dropped SearchProductCertificationByString'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('GetProductCertificationByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE GetProductCertificationByID;
        PRINT 'Dropped GetProductCertificationByID'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__ProductCertification_GetByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__ProductCertification_GetByID;
        PRINT 'Dropped spGen__ProductCertification_GetByID'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__ProductCertification_GetByID

   Description:  Selects record(s) from table 'ProductCertification'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__ProductCertification_GetByID
(
    @ProductCertificationID uniqueidentifier

)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int

    Select [ProductCertificationID],[ProductID],[CertificationID],[CreateDateTime__Gen],[UpdateDateTime__Gen]
    FROM [ProductCertification]
    WHERE [ProductCertificationID] = @ProductCertificationID

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__ProductCertification_GetByID Succeeded'
Else PRINT 'Procedure Creation: spGen__ProductCertification_GetByID Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__ProductCertification_SearchByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__ProductCertification_SearchByString;
        PRINT 'Dropped spGen__ProductCertification_SearchByString'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__ProductCertification_SearchByString

   Description:  Selects a record from table 'ProductCertification'
                 And puts values into parameters

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__ProductCertification_SearchByString
(
    @searchParam varchar(4000)
)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int
    DECLARE @strSql varchar(4000)

    SET @strSql = ' Select [ProductCertificationID],[ProductID],[CertificationID],[CreateDateTime__Gen],[UpdateDateTime__Gen]
    FROM [ProductCertification]
    WHERE ' +  @searchParam

    EXEC(@strSql)

    --//We should NOT be using exec above.
    --//If params are NOT known, then be sure to clean sql
    --//If params are known, format like example below

    --IF @prodname IS NOT NULL
    --SELECT @sql = @sql + ' ProductName LIKE @prodname'
    --EXEC sp_executesql @sql, N'@prodname varchar(400)',@prodname

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__ProductCertification_SearchByString Succeeded'
Else PRINT 'Procedure Creation: spGen__ProductCertification_SearchByString Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__ProductCertification_Delete') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__ProductCertification_Delete;
        PRINT 'Dropped spGen__ProductCertification_Delete'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__ProductCertification_Delete

   Description:  Deletes a record from table 'ProductCertification'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__ProductCertification_Delete
(
    @ProductCertificationID uniqueidentifier

)
AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN
    DECLARE @Err Int


    DELETE FROM [ProductCertification]
    WHERE [ProductCertificationID] = @ProductCertificationID


End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__ProductCertification_Delete Succeeded'
Else PRINT 'Procedure Creation: spGen__ProductCertification_Delete Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__ProductCertification_Save') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__ProductCertification_Save;
        PRINT 'Dropped spGen__ProductCertification_Save'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__ProductCertification_Save

   Description:  Updates or Deletes a record In table 'ProductCertification'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__ProductCertification_Save
(
    @ErrText varchar(4000) output,
    @ProductCertificationID uniqueidentifier output,
    @ProductID uniqueidentifier,
    @CertificationID uniqueidentifier
)

AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN

    DECLARE @UniqueRowCount Int
    IF @ProductCertificationID = '00000000-0000-0000-0000-000000000000' SET @ProductCertificationID = NULL
    IF @ProductCertificationID IS NULL
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    SET @ProductCertificationID = NewID()

                    INSERT
                    INTO [ProductCertification]
                    (
                        [ProductCertificationID],
                        [ProductID],
                        [CertificationID],
                        [CreateDateTime__Gen],
                        [UpdateDateTime__Gen]
                    )
                    VALUES
                    (
                        @ProductCertificationID,
                        @ProductID,
                        @CertificationID,
                        SYSDATETIME(),
                        SYSDATETIME()
                    )
                END
        END
    ELSE
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    UPDATE [ProductCertification]
                    SET
                    [ProductID] = @ProductID,
                    [CertificationID] = @CertificationID,
                    [UpdateDateTime__Gen] = SYSDATETIME()
                    WHERE [ProductCertificationID] = @ProductCertificationID
                END
        END

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__ProductCertification_Save Succeeded'
Else PRINT 'Procedure Creation: spGen__ProductCertification_Save Error on Creation'
GO





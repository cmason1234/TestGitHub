/*
'===============================================================================
' Generated by GenerateDataAndObjectLayer Version 1.0.0.0
'
' <auto-generated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated. 
' </auto-generated>
'===============================================================================

*/
USE [RheemUsers]

/* ------------------------------------------------------------
   Get rid of obsolete InsertAPIAccessKey
   Get rid of obsolete UpdateAPIAccessKey
   Get rid of obsolete DeleteAPIAccessKey
   Get rid of obsolete SearchAPIAccessKeyByString
   Get rid of obsolete GetAPIAccessKeyByID
   ------------------------------------------------------------ */
If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('InsertAPIAccessKey') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE InsertAPIAccessKey;
        PRINT 'Dropped InsertAPIAccessKey'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('UpdateAPIAccessKey') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE UpdateAPIAccessKey;
        PRINT 'Dropped UpdateAPIAccessKey'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DeleteAPIAccessKey') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE DeleteAPIAccessKey;
        PRINT 'Dropped DeleteAPIAccessKey'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('SearchAPIAccessKeyByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE SearchAPIAccessKeyByString;
        PRINT 'Dropped SearchAPIAccessKeyByString'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('GetAPIAccessKeyByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE GetAPIAccessKeyByID;
        PRINT 'Dropped GetAPIAccessKeyByID'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__APIAccessKey_GetByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__APIAccessKey_GetByID;
        PRINT 'Dropped spGen__APIAccessKey_GetByID'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__APIAccessKey_GetByID

   Description:  Selects record(s) from table 'APIAccessKey'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__APIAccessKey_GetByID
(
    @APIAccessKeyID uniqueidentifier

)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int

    Select [APIAccessKeyID],[AccessKey],[SecretKey],[Active],[KeyOwner],[KeyType],[CreateDateTime__Gen],[UpdateDateTime__Gen]
    FROM [APIAccessKey]
    WHERE [APIAccessKeyID] = @APIAccessKeyID

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__APIAccessKey_GetByID Succeeded'
Else PRINT 'Procedure Creation: spGen__APIAccessKey_GetByID Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__APIAccessKey_SearchByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__APIAccessKey_SearchByString;
        PRINT 'Dropped spGen__APIAccessKey_SearchByString'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__APIAccessKey_SearchByString

   Description:  Selects a record from table 'APIAccessKey'
                 And puts values into parameters

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__APIAccessKey_SearchByString
(
    @searchParam varchar(4000)
)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int
    DECLARE @strSql varchar(4000)

    SET @strSql = ' Select [APIAccessKeyID],[AccessKey],[SecretKey],[Active],[KeyOwner],[KeyType],[CreateDateTime__Gen],[UpdateDateTime__Gen]
    FROM [APIAccessKey]
    WHERE ' +  @searchParam

    EXEC(@strSql)

    --//We should NOT be using exec above.
    --//If params are NOT known, then be sure to clean sql
    --//If params are known, format like example below

    --IF @prodname IS NOT NULL
    --SELECT @sql = @sql + ' ProductName LIKE @prodname'
    --EXEC sp_executesql @sql, N'@prodname varchar(400)',@prodname

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__APIAccessKey_SearchByString Succeeded'
Else PRINT 'Procedure Creation: spGen__APIAccessKey_SearchByString Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__APIAccessKey_Delete') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__APIAccessKey_Delete;
        PRINT 'Dropped spGen__APIAccessKey_Delete'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__APIAccessKey_Delete

   Description:  Deletes a record from table 'APIAccessKey'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__APIAccessKey_Delete
(
    @APIAccessKeyID uniqueidentifier

)
AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN
    DECLARE @Err Int


    DELETE FROM [APIAccessKey]
    WHERE [APIAccessKeyID] = @APIAccessKeyID


End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__APIAccessKey_Delete Succeeded'
Else PRINT 'Procedure Creation: spGen__APIAccessKey_Delete Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__APIAccessKey_Save') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__APIAccessKey_Save;
        PRINT 'Dropped spGen__APIAccessKey_Save'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__APIAccessKey_Save

   Description:  Updates or Deletes a record In table 'APIAccessKey'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__APIAccessKey_Save
(
    @ErrText varchar(4000) output,
    @APIAccessKeyID uniqueidentifier output,
    @AccessKey varchar(50),
    @SecretKey varchar(256),
    @Active bit,
    @KeyOwner uniqueidentifier,
    @KeyType varchar(50)
)

AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN

    DECLARE @UniqueRowCount Int
    IF @APIAccessKeyID = '00000000-0000-0000-0000-000000000000' SET @APIAccessKeyID = NULL
    IF @APIAccessKeyID IS NULL
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    SET @APIAccessKeyID = NewID()

                    INSERT
                    INTO [APIAccessKey]
                    (
                        [APIAccessKeyID],
                        [AccessKey],
                        [SecretKey],
                        [Active],
                        [KeyOwner],
                        [KeyType],
                        [CreateDateTime__Gen],
                        [UpdateDateTime__Gen]
                    )
                    VALUES
                    (
                        @APIAccessKeyID,
                        @AccessKey,
                        @SecretKey,
                        @Active,
                        @KeyOwner,
                        @KeyType,
                        SYSDATETIME(),
                        SYSDATETIME()
                    )
                END
        END
    ELSE
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    UPDATE [APIAccessKey]
                    SET
                    [AccessKey] = @AccessKey,
                    [SecretKey] = @SecretKey,
                    [Active] = @Active,
                    [KeyOwner] = @KeyOwner,
                    [KeyType] = @KeyType,
                    [UpdateDateTime__Gen] = SYSDATETIME()
                    WHERE [APIAccessKeyID] = @APIAccessKeyID
                END
        END

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__APIAccessKey_Save Succeeded'
Else PRINT 'Procedure Creation: spGen__APIAccessKey_Save Error on Creation'
GO





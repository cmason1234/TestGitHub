/*
'===============================================================================
' Generated by GenerateDataAndObjectLayer Version 1.0.0.0
'
' <auto-generated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated. 
' </auto-generated>
'===============================================================================

*/
USE [RheemUsers]

/* ------------------------------------------------------------
   Get rid of obsolete InsertLists
   Get rid of obsolete UpdateLists
   Get rid of obsolete DeleteLists
   Get rid of obsolete SearchListsByString
   Get rid of obsolete GetListsByID
   ------------------------------------------------------------ */
If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('InsertLists') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE InsertLists;
        PRINT 'Dropped InsertLists'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('UpdateLists') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE UpdateLists;
        PRINT 'Dropped UpdateLists'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DeleteLists') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE DeleteLists;
        PRINT 'Dropped DeleteLists'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('SearchListsByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE SearchListsByString;
        PRINT 'Dropped SearchListsByString'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('GetListsByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE GetListsByID;
        PRINT 'Dropped GetListsByID'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__Lists_GetByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__Lists_GetByID;
        PRINT 'Dropped spGen__Lists_GetByID'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__Lists_GetByID

   Description:  Selects record(s) from table 'Lists'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__Lists_GetByID
(
    @ListID uniqueidentifier

)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int

    Select [ListID],[ListName],[ListType],[Description],[CreateDateTime__Gen],[UpdateDateTime__Gen]
    FROM [Lists]
    WHERE [ListID] = @ListID

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__Lists_GetByID Succeeded'
Else PRINT 'Procedure Creation: spGen__Lists_GetByID Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__Lists_SearchByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__Lists_SearchByString;
        PRINT 'Dropped spGen__Lists_SearchByString'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__Lists_SearchByString

   Description:  Selects a record from table 'Lists'
                 And puts values into parameters

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__Lists_SearchByString
(
    @searchParam varchar(4000)
)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int
    DECLARE @strSql varchar(4000)

    SET @strSql = ' Select [ListID],[ListName],[ListType],[Description],[CreateDateTime__Gen],[UpdateDateTime__Gen]
    FROM [Lists]
    WHERE ' +  @searchParam

    EXEC(@strSql)

    --//We should NOT be using exec above.
    --//If params are NOT known, then be sure to clean sql
    --//If params are known, format like example below

    --IF @prodname IS NOT NULL
    --SELECT @sql = @sql + ' ProductName LIKE @prodname'
    --EXEC sp_executesql @sql, N'@prodname varchar(400)',@prodname

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__Lists_SearchByString Succeeded'
Else PRINT 'Procedure Creation: spGen__Lists_SearchByString Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__Lists_Delete') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__Lists_Delete;
        PRINT 'Dropped spGen__Lists_Delete'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__Lists_Delete

   Description:  Deletes a record from table 'Lists'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__Lists_Delete
(
    @ListID uniqueidentifier

)
AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN
    DECLARE @Err Int


    DELETE FROM [Lists]
    WHERE [ListID] = @ListID


End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__Lists_Delete Succeeded'
Else PRINT 'Procedure Creation: spGen__Lists_Delete Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__Lists_Save') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__Lists_Save;
        PRINT 'Dropped spGen__Lists_Save'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__Lists_Save

   Description:  Updates or Deletes a record In table 'Lists'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__Lists_Save
(
    @ErrText varchar(4000) output,
    @ListID uniqueidentifier output,
    @ListName varchar(50),
    @ListType varchar(50),
    @Description varchar(512)
)

AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN

    DECLARE @UniqueRowCount Int
    IF @ListID = '00000000-0000-0000-0000-000000000000' SET @ListID = NULL
    IF @ListID IS NULL
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    SET @ListID = NewID()

                    INSERT
                    INTO [Lists]
                    (
                        [ListID],
                        [ListName],
                        [ListType],
                        [Description],
                        [CreateDateTime__Gen],
                        [UpdateDateTime__Gen]
                    )
                    VALUES
                    (
                        @ListID,
                        @ListName,
                        @ListType,
                        @Description,
                        SYSDATETIME(),
                        SYSDATETIME()
                    )
                END
        END
    ELSE
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    UPDATE [Lists]
                    SET
                    [ListName] = @ListName,
                    [ListType] = @ListType,
                    [Description] = @Description,
                    [UpdateDateTime__Gen] = SYSDATETIME()
                    WHERE [ListID] = @ListID
                END
        END

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__Lists_Save Succeeded'
Else PRINT 'Procedure Creation: spGen__Lists_Save Error on Creation'
GO





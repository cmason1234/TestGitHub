/*
'===============================================================================
' Generated by GenerateDataAndObjectLayer Version 1.0.0.0
'
' <auto-generated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated. 
' </auto-generated>
'===============================================================================

*/
USE [RheemUsers]

/* ------------------------------------------------------------
   Get rid of obsolete InsertEmploymentJob
   Get rid of obsolete UpdateEmploymentJob
   Get rid of obsolete DeleteEmploymentJob
   Get rid of obsolete SearchEmploymentJobByString
   Get rid of obsolete GetEmploymentJobByID
   ------------------------------------------------------------ */
If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('InsertEmploymentJob') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE InsertEmploymentJob;
        PRINT 'Dropped InsertEmploymentJob'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('UpdateEmploymentJob') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE UpdateEmploymentJob;
        PRINT 'Dropped UpdateEmploymentJob'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DeleteEmploymentJob') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE DeleteEmploymentJob;
        PRINT 'Dropped DeleteEmploymentJob'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('SearchEmploymentJobByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE SearchEmploymentJobByString;
        PRINT 'Dropped SearchEmploymentJobByString'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('GetEmploymentJobByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE GetEmploymentJobByID;
        PRINT 'Dropped GetEmploymentJobByID'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__EmploymentJob_GetByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__EmploymentJob_GetByID;
        PRINT 'Dropped spGen__EmploymentJob_GetByID'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__EmploymentJob_GetByID

   Description:  Selects record(s) from table 'EmploymentJob'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__EmploymentJob_GetByID
(
    @EmploymentJobID uniqueidentifier

)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int

    Select [EmploymentJobID],[JobTitle],[Department],[PostDate],[Location],[PositionResponsibilities],[PositionRequirements],[ContactName],[showbenefits],[benefitstext],[Active],[ContactEmailAddress],[Note],[JobSubTitle],[Salary],[ContactAddress1],[ContactAddress2],[ContactCity],[ContactState],[ContactZip],[ContactPhone],[ContactFax],[Brand],[CreateDateTime__Gen],[UpdateDateTime__Gen]
    FROM [EmploymentJob]
    WHERE [EmploymentJobID] = @EmploymentJobID

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__EmploymentJob_GetByID Succeeded'
Else PRINT 'Procedure Creation: spGen__EmploymentJob_GetByID Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__EmploymentJob_SearchByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__EmploymentJob_SearchByString;
        PRINT 'Dropped spGen__EmploymentJob_SearchByString'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__EmploymentJob_SearchByString

   Description:  Selects a record from table 'EmploymentJob'
                 And puts values into parameters

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__EmploymentJob_SearchByString
(
    @searchParam varchar(4000)
)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int
    DECLARE @strSql varchar(4000)

    SET @strSql = ' Select [EmploymentJobID],[JobTitle],[Department],[PostDate],[Location],[PositionResponsibilities],[PositionRequirements],[ContactName],[showbenefits],[benefitstext],[Active],[ContactEmailAddress],[Note],[JobSubTitle],[Salary],[ContactAddress1],[ContactAddress2],[ContactCity],[ContactState],[ContactZip],[ContactPhone],[ContactFax],[Brand],[CreateDateTime__Gen],[UpdateDateTime__Gen]
    FROM [EmploymentJob]
    WHERE ' +  @searchParam

    EXEC(@strSql)

    --//We should NOT be using exec above.
    --//If params are NOT known, then be sure to clean sql
    --//If params are known, format like example below

    --IF @prodname IS NOT NULL
    --SELECT @sql = @sql + ' ProductName LIKE @prodname'
    --EXEC sp_executesql @sql, N'@prodname varchar(400)',@prodname

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__EmploymentJob_SearchByString Succeeded'
Else PRINT 'Procedure Creation: spGen__EmploymentJob_SearchByString Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__EmploymentJob_Delete') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__EmploymentJob_Delete;
        PRINT 'Dropped spGen__EmploymentJob_Delete'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__EmploymentJob_Delete

   Description:  Deletes a record from table 'EmploymentJob'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__EmploymentJob_Delete
(
    @EmploymentJobID uniqueidentifier

)
AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN
    DECLARE @Err Int


    DELETE FROM [EmploymentJob]
    WHERE [EmploymentJobID] = @EmploymentJobID


End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__EmploymentJob_Delete Succeeded'
Else PRINT 'Procedure Creation: spGen__EmploymentJob_Delete Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__EmploymentJob_Save') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__EmploymentJob_Save;
        PRINT 'Dropped spGen__EmploymentJob_Save'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__EmploymentJob_Save

   Description:  Updates or Deletes a record In table 'EmploymentJob'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__EmploymentJob_Save
(
    @ErrText varchar(4000) output,
    @EmploymentJobID uniqueidentifier output,
    @JobTitle varchar(100),
    @Department varchar(100),
    @PostDate datetime,
    @Location varchar(50),
    @PositionResponsibilities text,
    @PositionRequirements text,
    @ContactName varchar(50),
    @showbenefits bit,
    @benefitstext text,
    @Active bit,
    @ContactEmailAddress text,
    @Note varchar(50),
    @JobSubTitle varchar(100),
    @Salary varchar(50),
    @ContactAddress1 varchar(50),
    @ContactAddress2 varchar(50),
    @ContactCity varchar(50),
    @ContactState varchar(50),
    @ContactZip varchar(50),
    @ContactPhone varchar(50),
    @ContactFax varchar(50),
    @Brand uniqueidentifier
)

AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN

    DECLARE @UniqueRowCount Int
    IF @EmploymentJobID = '00000000-0000-0000-0000-000000000000' SET @EmploymentJobID = NULL
    IF @EmploymentJobID IS NULL
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    SET @EmploymentJobID = NewID()

                    INSERT
                    INTO [EmploymentJob]
                    (
                        [EmploymentJobID],
                        [JobTitle],
                        [Department],
                        [PostDate],
                        [Location],
                        [PositionResponsibilities],
                        [PositionRequirements],
                        [ContactName],
                        [showbenefits],
                        [benefitstext],
                        [Active],
                        [ContactEmailAddress],
                        [Note],
                        [JobSubTitle],
                        [Salary],
                        [ContactAddress1],
                        [ContactAddress2],
                        [ContactCity],
                        [ContactState],
                        [ContactZip],
                        [ContactPhone],
                        [ContactFax],
                        [Brand],
                        [CreateDateTime__Gen],
                        [UpdateDateTime__Gen]
                    )
                    VALUES
                    (
                        @EmploymentJobID,
                        @JobTitle,
                        @Department,
                        @PostDate,
                        @Location,
                        @PositionResponsibilities,
                        @PositionRequirements,
                        @ContactName,
                        @showbenefits,
                        @benefitstext,
                        @Active,
                        @ContactEmailAddress,
                        @Note,
                        @JobSubTitle,
                        @Salary,
                        @ContactAddress1,
                        @ContactAddress2,
                        @ContactCity,
                        @ContactState,
                        @ContactZip,
                        @ContactPhone,
                        @ContactFax,
                        @Brand,
                        SYSDATETIME(),
                        SYSDATETIME()
                    )
                END
        END
    ELSE
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    UPDATE [EmploymentJob]
                    SET
                    [JobTitle] = @JobTitle,
                    [Department] = @Department,
                    [PostDate] = @PostDate,
                    [Location] = @Location,
                    [PositionResponsibilities] = @PositionResponsibilities,
                    [PositionRequirements] = @PositionRequirements,
                    [ContactName] = @ContactName,
                    [showbenefits] = @showbenefits,
                    [benefitstext] = @benefitstext,
                    [Active] = @Active,
                    [ContactEmailAddress] = @ContactEmailAddress,
                    [Note] = @Note,
                    [JobSubTitle] = @JobSubTitle,
                    [Salary] = @Salary,
                    [ContactAddress1] = @ContactAddress1,
                    [ContactAddress2] = @ContactAddress2,
                    [ContactCity] = @ContactCity,
                    [ContactState] = @ContactState,
                    [ContactZip] = @ContactZip,
                    [ContactPhone] = @ContactPhone,
                    [ContactFax] = @ContactFax,
                    [Brand] = @Brand,
                    [UpdateDateTime__Gen] = SYSDATETIME()
                    WHERE [EmploymentJobID] = @EmploymentJobID
                END
        END

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__EmploymentJob_Save Succeeded'
Else PRINT 'Procedure Creation: spGen__EmploymentJob_Save Error on Creation'
GO





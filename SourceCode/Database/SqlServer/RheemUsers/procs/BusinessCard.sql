/*
'===============================================================================
' Generated by GenerateDataAndObjectLayer Version 1.0.0.0
'
' <auto-generated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated. 
' </auto-generated>
'===============================================================================

*/
USE [RheemUsers]

/* ------------------------------------------------------------
   Get rid of obsolete InsertBusinessCard
   Get rid of obsolete UpdateBusinessCard
   Get rid of obsolete DeleteBusinessCard
   Get rid of obsolete SearchBusinessCardByString
   Get rid of obsolete GetBusinessCardByID
   ------------------------------------------------------------ */
If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('InsertBusinessCard') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE InsertBusinessCard;
        PRINT 'Dropped InsertBusinessCard'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('UpdateBusinessCard') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE UpdateBusinessCard;
        PRINT 'Dropped UpdateBusinessCard'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DeleteBusinessCard') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE DeleteBusinessCard;
        PRINT 'Dropped DeleteBusinessCard'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('SearchBusinessCardByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE SearchBusinessCardByString;
        PRINT 'Dropped SearchBusinessCardByString'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('GetBusinessCardByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE GetBusinessCardByID;
        PRINT 'Dropped GetBusinessCardByID'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__BusinessCard_GetByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__BusinessCard_GetByID;
        PRINT 'Dropped spGen__BusinessCard_GetByID'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__BusinessCard_GetByID

   Description:  Selects record(s) from table 'BusinessCard'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__BusinessCard_GetByID
(
    @BusinessCardID uniqueidentifier

)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int

    Select [BusinessCardID],[BrandID],[EmployeeLine1],[EmployeeLine2],[EmployeeLine3],[EmployeeLine4],[BusinessCardAddressID],[LocationLine1],[LocationLine2],[LocationLine3],[LocationLine4],[LocationLine5],[LocationLine6],[LocationLine7],[Shipping1],[Shipping2],[Shipping3],[Shipping4],[Shipping5],[BillToName],[AccountCode],[Quantity],[EmailProof],[DateAdded],[DateLastUpdated],[DateShipped],[Status],[OrderedByPersonID],[CreateDateTime__Gen],[UpdateDateTime__Gen]
    FROM [BusinessCard]
    WHERE [BusinessCardID] = @BusinessCardID

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__BusinessCard_GetByID Succeeded'
Else PRINT 'Procedure Creation: spGen__BusinessCard_GetByID Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__BusinessCard_SearchByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__BusinessCard_SearchByString;
        PRINT 'Dropped spGen__BusinessCard_SearchByString'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__BusinessCard_SearchByString

   Description:  Selects a record from table 'BusinessCard'
                 And puts values into parameters

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__BusinessCard_SearchByString
(
    @searchParam varchar(4000)
)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int
    DECLARE @strSql varchar(4000)

    SET @strSql = ' Select [BusinessCardID],[BrandID],[EmployeeLine1],[EmployeeLine2],[EmployeeLine3],[EmployeeLine4],[BusinessCardAddressID],[LocationLine1],[LocationLine2],[LocationLine3],[LocationLine4],[LocationLine5],[LocationLine6],[LocationLine7],[Shipping1],[Shipping2],[Shipping3],[Shipping4],[Shipping5],[BillToName],[AccountCode],[Quantity],[EmailProof],[DateAdded],[DateLastUpdated],[DateShipped],[Status],[OrderedByPersonID],[CreateDateTime__Gen],[UpdateDateTime__Gen]
    FROM [BusinessCard]
    WHERE ' +  @searchParam

    EXEC(@strSql)

    --//We should NOT be using exec above.
    --//If params are NOT known, then be sure to clean sql
    --//If params are known, format like example below

    --IF @prodname IS NOT NULL
    --SELECT @sql = @sql + ' ProductName LIKE @prodname'
    --EXEC sp_executesql @sql, N'@prodname varchar(400)',@prodname

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__BusinessCard_SearchByString Succeeded'
Else PRINT 'Procedure Creation: spGen__BusinessCard_SearchByString Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__BusinessCard_Delete') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__BusinessCard_Delete;
        PRINT 'Dropped spGen__BusinessCard_Delete'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__BusinessCard_Delete

   Description:  Deletes a record from table 'BusinessCard'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__BusinessCard_Delete
(
    @BusinessCardID uniqueidentifier

)
AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN
    DECLARE @Err Int


    DELETE FROM [BusinessCard]
    WHERE [BusinessCardID] = @BusinessCardID


End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__BusinessCard_Delete Succeeded'
Else PRINT 'Procedure Creation: spGen__BusinessCard_Delete Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__BusinessCard_Save') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__BusinessCard_Save;
        PRINT 'Dropped spGen__BusinessCard_Save'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__BusinessCard_Save

   Description:  Updates or Deletes a record In table 'BusinessCard'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__BusinessCard_Save
(
    @ErrText varchar(4000) output,
    @BusinessCardID uniqueidentifier output,
    @BrandID uniqueidentifier,
    @EmployeeLine1 nvarchar(50),
    @EmployeeLine2 nvarchar(50),
    @EmployeeLine3 nvarchar(50),
    @EmployeeLine4 nvarchar(50),
    @BusinessCardAddressID uniqueidentifier,
    @LocationLine1 nvarchar(50),
    @LocationLine2 nvarchar(50),
    @LocationLine3 nvarchar(50),
    @LocationLine4 nvarchar(50),
    @LocationLine5 nvarchar(50),
    @LocationLine6 nvarchar(50),
    @LocationLine7 nvarchar(50),
    @Shipping1 nvarchar(50),
    @Shipping2 nvarchar(50),
    @Shipping3 nvarchar(50),
    @Shipping4 nvarchar(50),
    @Shipping5 nvarchar(50),
    @BillToName nvarchar(50),
    @AccountCode nvarchar(50),
    @Quantity int,
    @EmailProof varchar(50),
    @DateAdded datetime,
    @DateLastUpdated datetime,
    @DateShipped datetime,
    @Status varchar(50),
    @OrderedByPersonID uniqueidentifier
)

AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN

    DECLARE @UniqueRowCount Int
    IF @BusinessCardID = '00000000-0000-0000-0000-000000000000' SET @BusinessCardID = NULL
    IF @BusinessCardID IS NULL
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    SET @BusinessCardID = NewID()

                    INSERT
                    INTO [BusinessCard]
                    (
                        [BusinessCardID],
                        [BrandID],
                        [EmployeeLine1],
                        [EmployeeLine2],
                        [EmployeeLine3],
                        [EmployeeLine4],
                        [BusinessCardAddressID],
                        [LocationLine1],
                        [LocationLine2],
                        [LocationLine3],
                        [LocationLine4],
                        [LocationLine5],
                        [LocationLine6],
                        [LocationLine7],
                        [Shipping1],
                        [Shipping2],
                        [Shipping3],
                        [Shipping4],
                        [Shipping5],
                        [BillToName],
                        [AccountCode],
                        [Quantity],
                        [EmailProof],
                        [DateAdded],
                        [DateLastUpdated],
                        [DateShipped],
                        [Status],
                        [OrderedByPersonID],
                        [CreateDateTime__Gen],
                        [UpdateDateTime__Gen]
                    )
                    VALUES
                    (
                        @BusinessCardID,
                        @BrandID,
                        @EmployeeLine1,
                        @EmployeeLine2,
                        @EmployeeLine3,
                        @EmployeeLine4,
                        @BusinessCardAddressID,
                        @LocationLine1,
                        @LocationLine2,
                        @LocationLine3,
                        @LocationLine4,
                        @LocationLine5,
                        @LocationLine6,
                        @LocationLine7,
                        @Shipping1,
                        @Shipping2,
                        @Shipping3,
                        @Shipping4,
                        @Shipping5,
                        @BillToName,
                        @AccountCode,
                        @Quantity,
                        @EmailProof,
                        @DateAdded,
                        @DateLastUpdated,
                        @DateShipped,
                        @Status,
                        @OrderedByPersonID,
                        SYSDATETIME(),
                        SYSDATETIME()
                    )
                END
        END
    ELSE
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    UPDATE [BusinessCard]
                    SET
                    [BrandID] = @BrandID,
                    [EmployeeLine1] = @EmployeeLine1,
                    [EmployeeLine2] = @EmployeeLine2,
                    [EmployeeLine3] = @EmployeeLine3,
                    [EmployeeLine4] = @EmployeeLine4,
                    [BusinessCardAddressID] = @BusinessCardAddressID,
                    [LocationLine1] = @LocationLine1,
                    [LocationLine2] = @LocationLine2,
                    [LocationLine3] = @LocationLine3,
                    [LocationLine4] = @LocationLine4,
                    [LocationLine5] = @LocationLine5,
                    [LocationLine6] = @LocationLine6,
                    [LocationLine7] = @LocationLine7,
                    [Shipping1] = @Shipping1,
                    [Shipping2] = @Shipping2,
                    [Shipping3] = @Shipping3,
                    [Shipping4] = @Shipping4,
                    [Shipping5] = @Shipping5,
                    [BillToName] = @BillToName,
                    [AccountCode] = @AccountCode,
                    [Quantity] = @Quantity,
                    [EmailProof] = @EmailProof,
                    [DateAdded] = @DateAdded,
                    [DateLastUpdated] = @DateLastUpdated,
                    [DateShipped] = @DateShipped,
                    [Status] = @Status,
                    [OrderedByPersonID] = @OrderedByPersonID,
                    [UpdateDateTime__Gen] = SYSDATETIME()
                    WHERE [BusinessCardID] = @BusinessCardID
                END
        END

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__BusinessCard_Save Succeeded'
Else PRINT 'Procedure Creation: spGen__BusinessCard_Save Error on Creation'
GO





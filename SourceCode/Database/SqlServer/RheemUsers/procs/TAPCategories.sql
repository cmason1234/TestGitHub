/*
'===============================================================================
' Generated by GenerateDataAndObjectLayer Version 1.0.0.0
'
' <auto-generated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated. 
' </auto-generated>
'===============================================================================

*/
USE [RheemUsers]

/* ------------------------------------------------------------
   Get rid of obsolete InsertTAPCategories
   Get rid of obsolete UpdateTAPCategories
   Get rid of obsolete DeleteTAPCategories
   Get rid of obsolete SearchTAPCategoriesByString
   Get rid of obsolete GetTAPCategoriesByID
   ------------------------------------------------------------ */
If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('InsertTAPCategories') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE InsertTAPCategories;
        PRINT 'Dropped InsertTAPCategories'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('UpdateTAPCategories') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE UpdateTAPCategories;
        PRINT 'Dropped UpdateTAPCategories'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DeleteTAPCategories') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE DeleteTAPCategories;
        PRINT 'Dropped DeleteTAPCategories'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('SearchTAPCategoriesByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE SearchTAPCategoriesByString;
        PRINT 'Dropped SearchTAPCategoriesByString'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('GetTAPCategoriesByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE GetTAPCategoriesByID;
        PRINT 'Dropped GetTAPCategoriesByID'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__TAPCategories_GetByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__TAPCategories_GetByID;
        PRINT 'Dropped spGen__TAPCategories_GetByID'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__TAPCategories_GetByID

   Description:  Selects record(s) from table 'TAPCategories'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__TAPCategories_GetByID
(
    @TAPCategoryID uniqueidentifier

)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int

    Select [TAPCategoryID],[CategoryName],[Description],[PointValue],[ApprovalRequired],[CreateDateTime__Gen],[UpdateDateTime__Gen]
    FROM [TAPCategories]
    WHERE [TAPCategoryID] = @TAPCategoryID

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__TAPCategories_GetByID Succeeded'
Else PRINT 'Procedure Creation: spGen__TAPCategories_GetByID Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__TAPCategories_SearchByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__TAPCategories_SearchByString;
        PRINT 'Dropped spGen__TAPCategories_SearchByString'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__TAPCategories_SearchByString

   Description:  Selects a record from table 'TAPCategories'
                 And puts values into parameters

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__TAPCategories_SearchByString
(
    @searchParam varchar(4000)
)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int
    DECLARE @strSql varchar(4000)

    SET @strSql = ' Select [TAPCategoryID],[CategoryName],[Description],[PointValue],[ApprovalRequired],[CreateDateTime__Gen],[UpdateDateTime__Gen]
    FROM [TAPCategories]
    WHERE ' +  @searchParam

    EXEC(@strSql)

    --//We should NOT be using exec above.
    --//If params are NOT known, then be sure to clean sql
    --//If params are known, format like example below

    --IF @prodname IS NOT NULL
    --SELECT @sql = @sql + ' ProductName LIKE @prodname'
    --EXEC sp_executesql @sql, N'@prodname varchar(400)',@prodname

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__TAPCategories_SearchByString Succeeded'
Else PRINT 'Procedure Creation: spGen__TAPCategories_SearchByString Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__TAPCategories_Delete') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__TAPCategories_Delete;
        PRINT 'Dropped spGen__TAPCategories_Delete'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__TAPCategories_Delete

   Description:  Deletes a record from table 'TAPCategories'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__TAPCategories_Delete
(
    @TAPCategoryID uniqueidentifier

)
AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN
    DECLARE @Err Int


    DELETE FROM [TAPCategories]
    WHERE [TAPCategoryID] = @TAPCategoryID


End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__TAPCategories_Delete Succeeded'
Else PRINT 'Procedure Creation: spGen__TAPCategories_Delete Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__TAPCategories_Save') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__TAPCategories_Save;
        PRINT 'Dropped spGen__TAPCategories_Save'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__TAPCategories_Save

   Description:  Updates or Deletes a record In table 'TAPCategories'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__TAPCategories_Save
(
    @ErrText varchar(4000) output,
    @TAPCategoryID uniqueidentifier output,
    @CategoryName varchar(50),
    @Description varchar(512),
    @PointValue float,
    @ApprovalRequired bit
)

AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN

    DECLARE @UniqueRowCount Int
    IF @TAPCategoryID = '00000000-0000-0000-0000-000000000000' SET @TAPCategoryID = NULL
    IF @TAPCategoryID IS NULL
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    SET @TAPCategoryID = NewID()

                    INSERT
                    INTO [TAPCategories]
                    (
                        [TAPCategoryID],
                        [CategoryName],
                        [Description],
                        [PointValue],
                        [ApprovalRequired],
                        [CreateDateTime__Gen],
                        [UpdateDateTime__Gen]
                    )
                    VALUES
                    (
                        @TAPCategoryID,
                        @CategoryName,
                        @Description,
                        @PointValue,
                        @ApprovalRequired,
                        SYSDATETIME(),
                        SYSDATETIME()
                    )
                END
        END
    ELSE
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    UPDATE [TAPCategories]
                    SET
                    [CategoryName] = @CategoryName,
                    [Description] = @Description,
                    [PointValue] = @PointValue,
                    [ApprovalRequired] = @ApprovalRequired,
                    [UpdateDateTime__Gen] = SYSDATETIME()
                    WHERE [TAPCategoryID] = @TAPCategoryID
                END
        END

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__TAPCategories_Save Succeeded'
Else PRINT 'Procedure Creation: spGen__TAPCategories_Save Error on Creation'
GO





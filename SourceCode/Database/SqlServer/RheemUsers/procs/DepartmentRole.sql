/*
'===============================================================================
' Generated by GenerateDataAndObjectLayer Version 1.0.0.0
'
' <auto-generated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated. 
' </auto-generated>
'===============================================================================

*/
USE [RheemUsers]

/* ------------------------------------------------------------
   Get rid of obsolete InsertDepartmentRole
   Get rid of obsolete UpdateDepartmentRole
   Get rid of obsolete DeleteDepartmentRole
   Get rid of obsolete SearchDepartmentRoleByString
   Get rid of obsolete GetDepartmentRoleByID
   ------------------------------------------------------------ */
If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('InsertDepartmentRole') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE InsertDepartmentRole;
        PRINT 'Dropped InsertDepartmentRole'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('UpdateDepartmentRole') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE UpdateDepartmentRole;
        PRINT 'Dropped UpdateDepartmentRole'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DeleteDepartmentRole') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE DeleteDepartmentRole;
        PRINT 'Dropped DeleteDepartmentRole'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('SearchDepartmentRoleByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE SearchDepartmentRoleByString;
        PRINT 'Dropped SearchDepartmentRoleByString'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('GetDepartmentRoleByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE GetDepartmentRoleByID;
        PRINT 'Dropped GetDepartmentRoleByID'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__DepartmentRole_GetByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__DepartmentRole_GetByID;
        PRINT 'Dropped spGen__DepartmentRole_GetByID'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__DepartmentRole_GetByID

   Description:  Selects record(s) from table 'DepartmentRole'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__DepartmentRole_GetByID
(
    @DepartmentRoleID uniqueidentifier

)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int

    Select [DepartmentRoleID],[ApplicationRoleID],[DepartmentID],[CreateDateTime__Gen],[UpdateDateTime__Gen]
    FROM [DepartmentRole]
    WHERE [DepartmentRoleID] = @DepartmentRoleID

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__DepartmentRole_GetByID Succeeded'
Else PRINT 'Procedure Creation: spGen__DepartmentRole_GetByID Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__DepartmentRole_SearchByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__DepartmentRole_SearchByString;
        PRINT 'Dropped spGen__DepartmentRole_SearchByString'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__DepartmentRole_SearchByString

   Description:  Selects a record from table 'DepartmentRole'
                 And puts values into parameters

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__DepartmentRole_SearchByString
(
    @searchParam varchar(4000)
)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int
    DECLARE @strSql varchar(4000)

    SET @strSql = ' Select [DepartmentRoleID],[ApplicationRoleID],[DepartmentID],[CreateDateTime__Gen],[UpdateDateTime__Gen]
    FROM [DepartmentRole]
    WHERE ' +  @searchParam

    EXEC(@strSql)

    --//We should NOT be using exec above.
    --//If params are NOT known, then be sure to clean sql
    --//If params are known, format like example below

    --IF @prodname IS NOT NULL
    --SELECT @sql = @sql + ' ProductName LIKE @prodname'
    --EXEC sp_executesql @sql, N'@prodname varchar(400)',@prodname

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__DepartmentRole_SearchByString Succeeded'
Else PRINT 'Procedure Creation: spGen__DepartmentRole_SearchByString Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__DepartmentRole_Delete') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__DepartmentRole_Delete;
        PRINT 'Dropped spGen__DepartmentRole_Delete'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__DepartmentRole_Delete

   Description:  Deletes a record from table 'DepartmentRole'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__DepartmentRole_Delete
(
    @DepartmentRoleID uniqueidentifier

)
AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN
    DECLARE @Err Int


    DELETE FROM [DepartmentRole]
    WHERE [DepartmentRoleID] = @DepartmentRoleID


End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__DepartmentRole_Delete Succeeded'
Else PRINT 'Procedure Creation: spGen__DepartmentRole_Delete Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__DepartmentRole_Save') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__DepartmentRole_Save;
        PRINT 'Dropped spGen__DepartmentRole_Save'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__DepartmentRole_Save

   Description:  Updates or Deletes a record In table 'DepartmentRole'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__DepartmentRole_Save
(
    @ErrText varchar(4000) output,
    @DepartmentRoleID uniqueidentifier output,
    @ApplicationRoleID uniqueidentifier,
    @DepartmentID uniqueidentifier
)

AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN

    DECLARE @UniqueRowCount Int
    IF @DepartmentRoleID = '00000000-0000-0000-0000-000000000000' SET @DepartmentRoleID = NULL
    IF @DepartmentRoleID IS NULL
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    SET @DepartmentRoleID = NewID()

                    INSERT
                    INTO [DepartmentRole]
                    (
                        [DepartmentRoleID],
                        [ApplicationRoleID],
                        [DepartmentID],
                        [CreateDateTime__Gen],
                        [UpdateDateTime__Gen]
                    )
                    VALUES
                    (
                        @DepartmentRoleID,
                        @ApplicationRoleID,
                        @DepartmentID,
                        SYSDATETIME(),
                        SYSDATETIME()
                    )
                END
        END
    ELSE
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    UPDATE [DepartmentRole]
                    SET
                    [ApplicationRoleID] = @ApplicationRoleID,
                    [DepartmentID] = @DepartmentID,
                    [UpdateDateTime__Gen] = SYSDATETIME()
                    WHERE [DepartmentRoleID] = @DepartmentRoleID
                END
        END

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__DepartmentRole_Save Succeeded'
Else PRINT 'Procedure Creation: spGen__DepartmentRole_Save Error on Creation'
GO





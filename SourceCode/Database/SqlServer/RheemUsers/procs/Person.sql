/*
'===============================================================================
' Generated by GenerateDataAndObjectLayer Version 1.0.0.0
'
' <auto-generated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated. 
' </auto-generated>
'===============================================================================

*/
USE [RheemUsers]

/* ------------------------------------------------------------
   Get rid of obsolete InsertPerson
   Get rid of obsolete UpdatePerson
   Get rid of obsolete DeletePerson
   Get rid of obsolete SearchPersonByString
   Get rid of obsolete GetPersonByID
   ------------------------------------------------------------ */
If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('InsertPerson') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE InsertPerson;
        PRINT 'Dropped InsertPerson'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('UpdatePerson') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE UpdatePerson;
        PRINT 'Dropped UpdatePerson'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DeletePerson') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE DeletePerson;
        PRINT 'Dropped DeletePerson'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('SearchPersonByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE SearchPersonByString;
        PRINT 'Dropped SearchPersonByString'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('GetPersonByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE GetPersonByID;
        PRINT 'Dropped GetPersonByID'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__Person_GetByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__Person_GetByID;
        PRINT 'Dropped spGen__Person_GetByID'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__Person_GetByID

   Description:  Selects record(s) from table 'Person'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__Person_GetByID
(
    @PersonID uniqueidentifier

)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int

    Select [PersonID],[UserID],[FirstName],[MiddleName],[LastName],[EmailAddress],[Title],[Phone],[Fax],[MobilePhone],[ImageID],[CreatedDate],[TerminatedDate],[VaultID],[Username],[EncryptedPassword],[PasswordSeed],[PasswordDate],[HubID],[NealVaultImport],[VaultPassword],[Disabled],[Template],[ManagerPersonID],[PrimaryAddressID],[PrimaryOrganizationID],[SignatureDocumentID],[TreeUpdated],[WelcomeEmailSent],[AccountUpdated],[ByPassDAC],[Gender],[LastLogin],[CreateDateTime__Gen],[UpdateDateTime__Gen],[PartsDistributionWestCoast],[Signature]
    FROM [Person]
    WHERE [PersonID] = @PersonID

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__Person_GetByID Succeeded'
Else PRINT 'Procedure Creation: spGen__Person_GetByID Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__Person_SearchByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__Person_SearchByString;
        PRINT 'Dropped spGen__Person_SearchByString'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__Person_SearchByString

   Description:  Selects a record from table 'Person'
                 And puts values into parameters

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__Person_SearchByString
(
    @searchParam varchar(8000)
)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int
    DECLARE @strSql varchar(8000)

    SET @strSql = ' Select [PersonID],[UserID],[FirstName],[MiddleName],[LastName],[EmailAddress],[Title],[Phone],[Fax],[MobilePhone],[ImageID],[CreatedDate],[TerminatedDate],[VaultID],[Username],[EncryptedPassword],[PasswordSeed],[PasswordDate],[HubID],[NealVaultImport],[VaultPassword],[Disabled],[Template],[ManagerPersonID],[PrimaryAddressID],[PrimaryOrganizationID],[SignatureDocumentID],[TreeUpdated],[WelcomeEmailSent],[AccountUpdated],[ByPassDAC],[Gender],[LastLogin],[CreateDateTime__Gen],[UpdateDateTime__Gen],[PartsDistributionWestCoast],[Signature]
    FROM [Person]
    WHERE ' +  @searchParam

    EXEC(@strSql)

    --//We should NOT be using exec above.
    --//If params are NOT known, then be sure to clean sql
    --//If params are known, format like example below

    --IF @prodname IS NOT NULL
    --SELECT @sql = @sql + ' ProductName LIKE @prodname'
    --EXEC sp_executesql @sql, N'@prodname varchar(400)',@prodname

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__Person_SearchByString Succeeded'
Else PRINT 'Procedure Creation: spGen__Person_SearchByString Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__Person_Delete') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__Person_Delete;
        PRINT 'Dropped spGen__Person_Delete'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__Person_Delete

   Description:  Deletes a record from table 'Person'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__Person_Delete
(
    @PersonID uniqueidentifier

)
AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN
    DECLARE @Err Int


    DELETE FROM [Person]
    WHERE [PersonID] = @PersonID


End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__Person_Delete Succeeded'
Else PRINT 'Procedure Creation: spGen__Person_Delete Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__Person_Save') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__Person_Save;
        PRINT 'Dropped spGen__Person_Save'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__Person_Save

   Description:  Updates or Deletes a record In table 'Person'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__Person_Save
(
    @ErrText varchar(4000) output,
    @PersonID uniqueidentifier output,
    @UserID varchar(50),
    @FirstName varchar(50),
    @MiddleName varchar(50),
    @LastName varchar(50),
    @EmailAddress varchar(50),
    @Title varchar(50),
    @Phone varchar(50),
    @Fax varchar(50),
    @MobilePhone varchar(50),
    @ImageID uniqueidentifier,
    @CreatedDate datetime,
    @TerminatedDate datetime,
    @VaultID varchar(10),
    @Username varchar(50),
    @EncryptedPassword varchar(50),
    @PasswordSeed varchar(50),
    @PasswordDate datetime,
    @HubID varchar(100),
    @NealVaultImport datetime,
    @VaultPassword varchar(50),
    @Disabled bit,
    @Template bit,
    @ManagerPersonID uniqueidentifier,
    @PrimaryAddressID uniqueidentifier,
    @PrimaryOrganizationID uniqueidentifier,
    @SignatureDocumentID uniqueidentifier,
    @TreeUpdated datetime,
    @WelcomeEmailSent datetime,
    @AccountUpdated datetime,
    @ByPassDAC bit,
    @Gender varchar(1),
    @LastLogin datetime,
    @PartsDistributionWestCoast bit,
    @Signature text
)

AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN

    DECLARE @UniqueRowCount Int
    IF @PersonID = '00000000-0000-0000-0000-000000000000' SET @PersonID = NULL
    IF @PersonID IS NULL
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    SET @PersonID = NewID()

                    INSERT
                    INTO [Person]
                    (
                        [PersonID],
                        [UserID],
                        [FirstName],
                        [MiddleName],
                        [LastName],
                        [EmailAddress],
                        [Title],
                        [Phone],
                        [Fax],
                        [MobilePhone],
                        [ImageID],
                        [CreatedDate],
                        [TerminatedDate],
                        [VaultID],
                        [Username],
                        [EncryptedPassword],
                        [PasswordSeed],
                        [PasswordDate],
                        [HubID],
                        [NealVaultImport],
                        [VaultPassword],
                        [Disabled],
                        [Template],
                        [ManagerPersonID],
                        [PrimaryAddressID],
                        [PrimaryOrganizationID],
                        [SignatureDocumentID],
                        [TreeUpdated],
                        [WelcomeEmailSent],
                        [AccountUpdated],
                        [ByPassDAC],
                        [Gender],
                        [LastLogin],
                        [CreateDateTime__Gen],
                        [UpdateDateTime__Gen],
                        [PartsDistributionWestCoast],
                        [Signature]
                    )
                    VALUES
                    (
                        @PersonID,
                        @UserID,
                        @FirstName,
                        @MiddleName,
                        @LastName,
                        @EmailAddress,
                        @Title,
                        @Phone,
                        @Fax,
                        @MobilePhone,
                        @ImageID,
                        @CreatedDate,
                        @TerminatedDate,
                        @VaultID,
                        @Username,
                        @EncryptedPassword,
                        @PasswordSeed,
                        @PasswordDate,
                        @HubID,
                        @NealVaultImport,
                        @VaultPassword,
                        @Disabled,
                        @Template,
                        @ManagerPersonID,
                        @PrimaryAddressID,
                        @PrimaryOrganizationID,
                        @SignatureDocumentID,
                        @TreeUpdated,
                        @WelcomeEmailSent,
                        @AccountUpdated,
                        @ByPassDAC,
                        @Gender,
                        @LastLogin,
                        SYSDATETIME(),
                        SYSDATETIME(),
                        @PartsDistributionWestCoast,
                        @Signature
                    )
                END
        END
    ELSE
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    UPDATE [Person]
                    SET
                    [UserID] = @UserID,
                    [FirstName] = @FirstName,
                    [MiddleName] = @MiddleName,
                    [LastName] = @LastName,
                    [EmailAddress] = @EmailAddress,
                    [Title] = @Title,
                    [Phone] = @Phone,
                    [Fax] = @Fax,
                    [MobilePhone] = @MobilePhone,
                    [ImageID] = @ImageID,
                    [CreatedDate] = @CreatedDate,
                    [TerminatedDate] = @TerminatedDate,
                    [VaultID] = @VaultID,
                    [Username] = @Username,
                    [EncryptedPassword] = @EncryptedPassword,
                    [PasswordSeed] = @PasswordSeed,
                    [PasswordDate] = @PasswordDate,
                    [HubID] = @HubID,
                    [NealVaultImport] = @NealVaultImport,
                    [VaultPassword] = @VaultPassword,
                    [Disabled] = @Disabled,
                    [Template] = @Template,
                    [ManagerPersonID] = @ManagerPersonID,
                    [PrimaryAddressID] = @PrimaryAddressID,
                    [PrimaryOrganizationID] = @PrimaryOrganizationID,
                    [SignatureDocumentID] = @SignatureDocumentID,
                    [TreeUpdated] = @TreeUpdated,
                    [WelcomeEmailSent] = @WelcomeEmailSent,
                    [AccountUpdated] = @AccountUpdated,
                    [ByPassDAC] = @ByPassDAC,
                    [Gender] = @Gender,
                    [LastLogin] = @LastLogin,
                    [UpdateDateTime__Gen] = SYSDATETIME(),
                    [PartsDistributionWestCoast] = @PartsDistributionWestCoast,
                    [Signature] = @Signature
                    WHERE [PersonID] = @PersonID
                END
        END

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__Person_Save Succeeded'
Else PRINT 'Procedure Creation: spGen__Person_Save Error on Creation'
GO





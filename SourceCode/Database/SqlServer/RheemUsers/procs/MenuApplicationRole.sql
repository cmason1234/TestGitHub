/*
'===============================================================================
' Generated by GenerateDataAndObjectLayer Version 1.0.0.0
'
' <auto-generated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated. 
' </auto-generated>
'===============================================================================

*/
USE [RheemUsers]

/* ------------------------------------------------------------
   Get rid of obsolete InsertMenuApplicationRole
   Get rid of obsolete UpdateMenuApplicationRole
   Get rid of obsolete DeleteMenuApplicationRole
   Get rid of obsolete SearchMenuApplicationRoleByString
   Get rid of obsolete GetMenuApplicationRoleByID
   ------------------------------------------------------------ */
If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('InsertMenuApplicationRole') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE InsertMenuApplicationRole;
        PRINT 'Dropped InsertMenuApplicationRole'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('UpdateMenuApplicationRole') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE UpdateMenuApplicationRole;
        PRINT 'Dropped UpdateMenuApplicationRole'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DeleteMenuApplicationRole') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE DeleteMenuApplicationRole;
        PRINT 'Dropped DeleteMenuApplicationRole'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('SearchMenuApplicationRoleByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE SearchMenuApplicationRoleByString;
        PRINT 'Dropped SearchMenuApplicationRoleByString'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('GetMenuApplicationRoleByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE GetMenuApplicationRoleByID;
        PRINT 'Dropped GetMenuApplicationRoleByID'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__MenuApplicationRole_GetByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__MenuApplicationRole_GetByID;
        PRINT 'Dropped spGen__MenuApplicationRole_GetByID'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__MenuApplicationRole_GetByID

   Description:  Selects record(s) from table 'MenuApplicationRole'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__MenuApplicationRole_GetByID
(
    @MenuApplicationRoleID uniqueidentifier

)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int

    Select [MenuApplicationRoleID],[MenuID],[ApplicationRoleID],[CreateDateTime__Gen],[UpdateDateTime__Gen]
    FROM [MenuApplicationRole]
    WHERE [MenuApplicationRoleID] = @MenuApplicationRoleID

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__MenuApplicationRole_GetByID Succeeded'
Else PRINT 'Procedure Creation: spGen__MenuApplicationRole_GetByID Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__MenuApplicationRole_SearchByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__MenuApplicationRole_SearchByString;
        PRINT 'Dropped spGen__MenuApplicationRole_SearchByString'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__MenuApplicationRole_SearchByString

   Description:  Selects a record from table 'MenuApplicationRole'
                 And puts values into parameters

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__MenuApplicationRole_SearchByString
(
    @searchParam varchar(4000)
)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int
    DECLARE @strSql varchar(4000)

    SET @strSql = ' Select [MenuApplicationRoleID],[MenuID],[ApplicationRoleID],[CreateDateTime__Gen],[UpdateDateTime__Gen]
    FROM [MenuApplicationRole]
    WHERE ' +  @searchParam

    EXEC(@strSql)

    --//We should NOT be using exec above.
    --//If params are NOT known, then be sure to clean sql
    --//If params are known, format like example below

    --IF @prodname IS NOT NULL
    --SELECT @sql = @sql + ' ProductName LIKE @prodname'
    --EXEC sp_executesql @sql, N'@prodname varchar(400)',@prodname

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__MenuApplicationRole_SearchByString Succeeded'
Else PRINT 'Procedure Creation: spGen__MenuApplicationRole_SearchByString Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__MenuApplicationRole_Delete') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__MenuApplicationRole_Delete;
        PRINT 'Dropped spGen__MenuApplicationRole_Delete'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__MenuApplicationRole_Delete

   Description:  Deletes a record from table 'MenuApplicationRole'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__MenuApplicationRole_Delete
(
    @MenuApplicationRoleID uniqueidentifier

)
AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN
    DECLARE @Err Int


    DELETE FROM [MenuApplicationRole]
    WHERE [MenuApplicationRoleID] = @MenuApplicationRoleID


End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__MenuApplicationRole_Delete Succeeded'
Else PRINT 'Procedure Creation: spGen__MenuApplicationRole_Delete Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__MenuApplicationRole_Save') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__MenuApplicationRole_Save;
        PRINT 'Dropped spGen__MenuApplicationRole_Save'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__MenuApplicationRole_Save

   Description:  Updates or Deletes a record In table 'MenuApplicationRole'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__MenuApplicationRole_Save
(
    @ErrText varchar(4000) output,
    @MenuApplicationRoleID uniqueidentifier output,
    @MenuID uniqueidentifier,
    @ApplicationRoleID uniqueidentifier
)

AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN

    DECLARE @UniqueRowCount Int
    IF @MenuApplicationRoleID = '00000000-0000-0000-0000-000000000000' SET @MenuApplicationRoleID = NULL
    IF @MenuApplicationRoleID IS NULL
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    SET @MenuApplicationRoleID = NewID()

                    INSERT
                    INTO [MenuApplicationRole]
                    (
                        [MenuApplicationRoleID],
                        [MenuID],
                        [ApplicationRoleID],
                        [CreateDateTime__Gen],
                        [UpdateDateTime__Gen]
                    )
                    VALUES
                    (
                        @MenuApplicationRoleID,
                        @MenuID,
                        @ApplicationRoleID,
                        SYSDATETIME(),
                        SYSDATETIME()
                    )
                END
        END
    ELSE
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    UPDATE [MenuApplicationRole]
                    SET
                    [MenuID] = @MenuID,
                    [ApplicationRoleID] = @ApplicationRoleID,
                    [UpdateDateTime__Gen] = SYSDATETIME()
                    WHERE [MenuApplicationRoleID] = @MenuApplicationRoleID
                END
        END

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__MenuApplicationRole_Save Succeeded'
Else PRINT 'Procedure Creation: spGen__MenuApplicationRole_Save Error on Creation'
GO





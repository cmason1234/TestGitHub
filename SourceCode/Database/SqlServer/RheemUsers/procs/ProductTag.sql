/*
'===============================================================================
' Generated by GenerateDataAndObjectLayer Version 1.0.0.0
'
' <auto-generated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated. 
' </auto-generated>
'===============================================================================

*/
USE [RheemUsers]

/* ------------------------------------------------------------
   Get rid of obsolete InsertProductTag
   Get rid of obsolete UpdateProductTag
   Get rid of obsolete DeleteProductTag
   Get rid of obsolete SearchProductTagByString
   Get rid of obsolete GetProductTagByID
   ------------------------------------------------------------ */
If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('InsertProductTag') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE InsertProductTag;
        PRINT 'Dropped InsertProductTag'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('UpdateProductTag') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE UpdateProductTag;
        PRINT 'Dropped UpdateProductTag'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DeleteProductTag') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE DeleteProductTag;
        PRINT 'Dropped DeleteProductTag'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('SearchProductTagByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE SearchProductTagByString;
        PRINT 'Dropped SearchProductTagByString'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('GetProductTagByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE GetProductTagByID;
        PRINT 'Dropped GetProductTagByID'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__ProductTag_GetByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__ProductTag_GetByID;
        PRINT 'Dropped spGen__ProductTag_GetByID'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__ProductTag_GetByID

   Description:  Selects record(s) from table 'ProductTag'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__ProductTag_GetByID
(
    @ProductTagID uniqueidentifier

)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int

    Select [ProductTagID],[Label],[TagOrder],[ParentProductTagID],[CreateDateTime__Gen],[UpdateDateTime__Gen],[Name],[Description],[LogoUrl]
    FROM [ProductTag]
    WHERE [ProductTagID] = @ProductTagID

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__ProductTag_GetByID Succeeded'
Else PRINT 'Procedure Creation: spGen__ProductTag_GetByID Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__ProductTag_SearchByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__ProductTag_SearchByString;
        PRINT 'Dropped spGen__ProductTag_SearchByString'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__ProductTag_SearchByString

   Description:  Selects a record from table 'ProductTag'
                 And puts values into parameters

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__ProductTag_SearchByString
(
    @searchParam varchar(8000)
)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int
    DECLARE @strSql varchar(8000)

    SET @strSql = ' Select [ProductTagID],[Label],[TagOrder],[ParentProductTagID],[CreateDateTime__Gen],[UpdateDateTime__Gen],[Name],[Description],[LogoUrl]
    FROM [ProductTag]
    WHERE ' +  @searchParam

    EXEC(@strSql)

    --//We should NOT be using exec above.
    --//If params are NOT known, then be sure to clean sql
    --//If params are known, format like example below

    --IF @prodname IS NOT NULL
    --SELECT @sql = @sql + ' ProductName LIKE @prodname'
    --EXEC sp_executesql @sql, N'@prodname varchar(400)',@prodname

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__ProductTag_SearchByString Succeeded'
Else PRINT 'Procedure Creation: spGen__ProductTag_SearchByString Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__ProductTag_Delete') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__ProductTag_Delete;
        PRINT 'Dropped spGen__ProductTag_Delete'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__ProductTag_Delete

   Description:  Deletes a record from table 'ProductTag'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__ProductTag_Delete
(
    @ProductTagID uniqueidentifier

)
AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN
    DECLARE @Err Int


    DELETE FROM [ProductTag]
    WHERE [ProductTagID] = @ProductTagID


End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__ProductTag_Delete Succeeded'
Else PRINT 'Procedure Creation: spGen__ProductTag_Delete Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__ProductTag_Save') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__ProductTag_Save;
        PRINT 'Dropped spGen__ProductTag_Save'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__ProductTag_Save

   Description:  Updates or Deletes a record In table 'ProductTag'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__ProductTag_Save
(
    @ErrText varchar(4000) output,
    @ProductTagID uniqueidentifier output,
    @Label varchar(250),
    @TagOrder int,
    @ParentProductTagID uniqueidentifier,
    @Name varchar(256),
    @Description varchar(512),
    @LogoUrl varchar(550)
)

AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN

    DECLARE @UniqueRowCount Int
    IF @ProductTagID = '00000000-0000-0000-0000-000000000000' SET @ProductTagID = NULL
    IF @ProductTagID IS NULL
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    SET @ProductTagID = NewID()

                    INSERT
                    INTO [ProductTag]
                    (
                        [ProductTagID],
                        [Label],
                        [TagOrder],
                        [ParentProductTagID],
                        [CreateDateTime__Gen],
                        [UpdateDateTime__Gen],
                        [Name],
                        [Description],
                        [LogoUrl]
                    )
                    VALUES
                    (
                        @ProductTagID,
                        @Label,
                        @TagOrder,
                        @ParentProductTagID,
                        SYSDATETIME(),
                        SYSDATETIME(),
                        @Name,
                        @Description,
                        @LogoUrl
                    )
                END
        END
    ELSE
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    UPDATE [ProductTag]
                    SET
                    [Label] = @Label,
                    [TagOrder] = @TagOrder,
                    [ParentProductTagID] = @ParentProductTagID,
                    [UpdateDateTime__Gen] = SYSDATETIME(),
                    [Name] = @Name,
                    [Description] = @Description,
                    [LogoUrl] = @LogoUrl
                    WHERE [ProductTagID] = @ProductTagID
                END
        END

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__ProductTag_Save Succeeded'
Else PRINT 'Procedure Creation: spGen__ProductTag_Save Error on Creation'
GO





/*
'===============================================================================
' Generated by GenerateDataAndObjectLayer Version 1.0.0.0
'
' <auto-generated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated. 
' </auto-generated>
'===============================================================================

*/
USE [RheemUsers]

/* ------------------------------------------------------------
   Get rid of obsolete InsertDepartmentJobFunction
   Get rid of obsolete UpdateDepartmentJobFunction
   Get rid of obsolete DeleteDepartmentJobFunction
   Get rid of obsolete SearchDepartmentJobFunctionByString
   Get rid of obsolete GetDepartmentJobFunctionByID
   ------------------------------------------------------------ */
If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('InsertDepartmentJobFunction') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE InsertDepartmentJobFunction;
        PRINT 'Dropped InsertDepartmentJobFunction'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('UpdateDepartmentJobFunction') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE UpdateDepartmentJobFunction;
        PRINT 'Dropped UpdateDepartmentJobFunction'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DeleteDepartmentJobFunction') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE DeleteDepartmentJobFunction;
        PRINT 'Dropped DeleteDepartmentJobFunction'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('SearchDepartmentJobFunctionByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE SearchDepartmentJobFunctionByString;
        PRINT 'Dropped SearchDepartmentJobFunctionByString'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('GetDepartmentJobFunctionByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE GetDepartmentJobFunctionByID;
        PRINT 'Dropped GetDepartmentJobFunctionByID'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__DepartmentJobFunction_GetByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__DepartmentJobFunction_GetByID;
        PRINT 'Dropped spGen__DepartmentJobFunction_GetByID'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__DepartmentJobFunction_GetByID

   Description:  Selects record(s) from table 'DepartmentJobFunction'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__DepartmentJobFunction_GetByID
(
    @DepartmentJobFunctionID uniqueidentifier

)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int

    Select [DepartmentJobFunctionID],[DepartmentID],[JobFunctionID],[LegacyCode],[CreateDateTime__Gen],[UpdateDateTime__Gen]
    FROM [DepartmentJobFunction]
    WHERE [DepartmentJobFunctionID] = @DepartmentJobFunctionID

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__DepartmentJobFunction_GetByID Succeeded'
Else PRINT 'Procedure Creation: spGen__DepartmentJobFunction_GetByID Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__DepartmentJobFunction_SearchByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__DepartmentJobFunction_SearchByString;
        PRINT 'Dropped spGen__DepartmentJobFunction_SearchByString'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__DepartmentJobFunction_SearchByString

   Description:  Selects a record from table 'DepartmentJobFunction'
                 And puts values into parameters

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__DepartmentJobFunction_SearchByString
(
    @searchParam varchar(4000)
)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int
    DECLARE @strSql varchar(4000)

    SET @strSql = ' Select [DepartmentJobFunctionID],[DepartmentID],[JobFunctionID],[LegacyCode],[CreateDateTime__Gen],[UpdateDateTime__Gen]
    FROM [DepartmentJobFunction]
    WHERE ' +  @searchParam

    EXEC(@strSql)

    --//We should NOT be using exec above.
    --//If params are NOT known, then be sure to clean sql
    --//If params are known, format like example below

    --IF @prodname IS NOT NULL
    --SELECT @sql = @sql + ' ProductName LIKE @prodname'
    --EXEC sp_executesql @sql, N'@prodname varchar(400)',@prodname

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__DepartmentJobFunction_SearchByString Succeeded'
Else PRINT 'Procedure Creation: spGen__DepartmentJobFunction_SearchByString Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__DepartmentJobFunction_Delete') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__DepartmentJobFunction_Delete;
        PRINT 'Dropped spGen__DepartmentJobFunction_Delete'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__DepartmentJobFunction_Delete

   Description:  Deletes a record from table 'DepartmentJobFunction'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__DepartmentJobFunction_Delete
(
    @DepartmentJobFunctionID uniqueidentifier

)
AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN
    DECLARE @Err Int


    DELETE FROM [DepartmentJobFunction]
    WHERE [DepartmentJobFunctionID] = @DepartmentJobFunctionID


End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__DepartmentJobFunction_Delete Succeeded'
Else PRINT 'Procedure Creation: spGen__DepartmentJobFunction_Delete Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__DepartmentJobFunction_Save') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__DepartmentJobFunction_Save;
        PRINT 'Dropped spGen__DepartmentJobFunction_Save'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__DepartmentJobFunction_Save

   Description:  Updates or Deletes a record In table 'DepartmentJobFunction'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__DepartmentJobFunction_Save
(
    @ErrText varchar(4000) output,
    @DepartmentJobFunctionID uniqueidentifier output,
    @DepartmentID uniqueidentifier,
    @JobFunctionID uniqueidentifier,
    @LegacyCode int
)

AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN

    DECLARE @UniqueRowCount Int
    IF @DepartmentJobFunctionID = '00000000-0000-0000-0000-000000000000' SET @DepartmentJobFunctionID = NULL
    IF @DepartmentJobFunctionID IS NULL
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    SET @DepartmentJobFunctionID = NewID()

                    INSERT
                    INTO [DepartmentJobFunction]
                    (
                        [DepartmentJobFunctionID],
                        [DepartmentID],
                        [JobFunctionID],
                        [LegacyCode],
                        [CreateDateTime__Gen],
                        [UpdateDateTime__Gen]
                    )
                    VALUES
                    (
                        @DepartmentJobFunctionID,
                        @DepartmentID,
                        @JobFunctionID,
                        @LegacyCode,
                        SYSDATETIME(),
                        SYSDATETIME()
                    )
                END
        END
    ELSE
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    UPDATE [DepartmentJobFunction]
                    SET
                    [DepartmentID] = @DepartmentID,
                    [JobFunctionID] = @JobFunctionID,
                    [LegacyCode] = @LegacyCode,
                    [UpdateDateTime__Gen] = SYSDATETIME()
                    WHERE [DepartmentJobFunctionID] = @DepartmentJobFunctionID
                END
        END

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__DepartmentJobFunction_Save Succeeded'
Else PRINT 'Procedure Creation: spGen__DepartmentJobFunction_Save Error on Creation'
GO





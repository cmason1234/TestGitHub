/*
'===============================================================================
' Generated by GenerateDataAndObjectLayer Version 1.0.0.0
'
' <auto-generated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated. 
' </auto-generated>
'===============================================================================

*/
USE [RheemUsers]

/* ------------------------------------------------------------
   Get rid of obsolete InsertProductModelWHSolar
   Get rid of obsolete UpdateProductModelWHSolar
   Get rid of obsolete DeleteProductModelWHSolar
   Get rid of obsolete SearchProductModelWHSolarByString
   Get rid of obsolete GetProductModelWHSolarByID
   ------------------------------------------------------------ */
If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('InsertProductModelWHSolar') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE InsertProductModelWHSolar;
        PRINT 'Dropped InsertProductModelWHSolar'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('UpdateProductModelWHSolar') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE UpdateProductModelWHSolar;
        PRINT 'Dropped UpdateProductModelWHSolar'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DeleteProductModelWHSolar') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE DeleteProductModelWHSolar;
        PRINT 'Dropped DeleteProductModelWHSolar'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('SearchProductModelWHSolarByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE SearchProductModelWHSolarByString;
        PRINT 'Dropped SearchProductModelWHSolarByString'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('GetProductModelWHSolarByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE GetProductModelWHSolarByID;
        PRINT 'Dropped GetProductModelWHSolarByID'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__ProductModelWHSolar_GetByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__ProductModelWHSolar_GetByID;
        PRINT 'Dropped spGen__ProductModelWHSolar_GetByID'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__ProductModelWHSolar_GetByID

   Description:  Selects record(s) from table 'ProductModelWHSolar'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__ProductModelWHSolar_GetByID
(
    @ProductModelWHSolarID uniqueidentifier

)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int

    Select [ProductModelWHSolarID],[ProductModelWHID],[StorageCapacity],[SolarEnergyFactor],[NumberOfCollectionPanels],[AbsorberCoating],[CollectorWidth],[CollectorLength],[CollectorDepth],[AreaSqFt],[DryWeight],[FluidCapacity],[DesignFlowRate],[MaxFlowRate],[MaxOperatingPressure],[TankHeight],[TankDiameter],[TankWeight],[TankWattage],[BTUInput],[WorkingPressure],[DeliveryCapacity],[BackUpelementSpecs],[SystemWidth],[SystemLength],[SystemWeightEmpty],[SystemWeightFull],[CreateDateTime__Gen],[UpdateDateTime__Gen]
    FROM [ProductModelWHSolar]
    WHERE [ProductModelWHSolarID] = @ProductModelWHSolarID

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__ProductModelWHSolar_GetByID Succeeded'
Else PRINT 'Procedure Creation: spGen__ProductModelWHSolar_GetByID Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__ProductModelWHSolar_SearchByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__ProductModelWHSolar_SearchByString;
        PRINT 'Dropped spGen__ProductModelWHSolar_SearchByString'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__ProductModelWHSolar_SearchByString

   Description:  Selects a record from table 'ProductModelWHSolar'
                 And puts values into parameters

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__ProductModelWHSolar_SearchByString
(
    @searchParam varchar(4000)
)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int
    DECLARE @strSql varchar(4000)

    SET @strSql = ' Select [ProductModelWHSolarID],[ProductModelWHID],[StorageCapacity],[SolarEnergyFactor],[NumberOfCollectionPanels],[AbsorberCoating],[CollectorWidth],[CollectorLength],[CollectorDepth],[AreaSqFt],[DryWeight],[FluidCapacity],[DesignFlowRate],[MaxFlowRate],[MaxOperatingPressure],[TankHeight],[TankDiameter],[TankWeight],[TankWattage],[BTUInput],[WorkingPressure],[DeliveryCapacity],[BackUpelementSpecs],[SystemWidth],[SystemLength],[SystemWeightEmpty],[SystemWeightFull],[CreateDateTime__Gen],[UpdateDateTime__Gen]
    FROM [ProductModelWHSolar]
    WHERE ' +  @searchParam

    EXEC(@strSql)

    --//We should NOT be using exec above.
    --//If params are NOT known, then be sure to clean sql
    --//If params are known, format like example below

    --IF @prodname IS NOT NULL
    --SELECT @sql = @sql + ' ProductName LIKE @prodname'
    --EXEC sp_executesql @sql, N'@prodname varchar(400)',@prodname

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__ProductModelWHSolar_SearchByString Succeeded'
Else PRINT 'Procedure Creation: spGen__ProductModelWHSolar_SearchByString Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__ProductModelWHSolar_Delete') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__ProductModelWHSolar_Delete;
        PRINT 'Dropped spGen__ProductModelWHSolar_Delete'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__ProductModelWHSolar_Delete

   Description:  Deletes a record from table 'ProductModelWHSolar'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__ProductModelWHSolar_Delete
(
    @ProductModelWHSolarID uniqueidentifier

)
AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN
    DECLARE @Err Int


    DELETE FROM [ProductModelWHSolar]
    WHERE [ProductModelWHSolarID] = @ProductModelWHSolarID


End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__ProductModelWHSolar_Delete Succeeded'
Else PRINT 'Procedure Creation: spGen__ProductModelWHSolar_Delete Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__ProductModelWHSolar_Save') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__ProductModelWHSolar_Save;
        PRINT 'Dropped spGen__ProductModelWHSolar_Save'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__ProductModelWHSolar_Save

   Description:  Updates or Deletes a record In table 'ProductModelWHSolar'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__ProductModelWHSolar_Save
(
    @ErrText varchar(4000) output,
    @ProductModelWHSolarID uniqueidentifier output,
    @ProductModelWHID uniqueidentifier,
    @StorageCapacity int,
    @SolarEnergyFactor decimal(2,1),
    @NumberOfCollectionPanels int,
    @AbsorberCoating varchar(50),
    @CollectorWidth int,
    @CollectorLength int,
    @CollectorDepth int,
    @AreaSqFt decimal(5,2),
    @DryWeight int,
    @FluidCapacity decimal(2,1),
    @DesignFlowRate decimal(3,2),
    @MaxFlowRate int,
    @MaxOperatingPressure int,
    @TankHeight int,
    @TankDiameter int,
    @TankWeight int,
    @TankWattage int,
    @BTUInput decimal(3,1),
    @WorkingPressure int,
    @DeliveryCapacity decimal(3,1),
    @BackUpelementSpecs varchar(50),
    @SystemWidth int,
    @SystemLength int,
    @SystemWeightEmpty int,
    @SystemWeightFull int
)

AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN

    DECLARE @UniqueRowCount Int
    IF @ProductModelWHSolarID = '00000000-0000-0000-0000-000000000000' SET @ProductModelWHSolarID = NULL
    IF @ProductModelWHSolarID IS NULL
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    SET @ProductModelWHSolarID = NewID()

                    INSERT
                    INTO [ProductModelWHSolar]
                    (
                        [ProductModelWHSolarID],
                        [ProductModelWHID],
                        [StorageCapacity],
                        [SolarEnergyFactor],
                        [NumberOfCollectionPanels],
                        [AbsorberCoating],
                        [CollectorWidth],
                        [CollectorLength],
                        [CollectorDepth],
                        [AreaSqFt],
                        [DryWeight],
                        [FluidCapacity],
                        [DesignFlowRate],
                        [MaxFlowRate],
                        [MaxOperatingPressure],
                        [TankHeight],
                        [TankDiameter],
                        [TankWeight],
                        [TankWattage],
                        [BTUInput],
                        [WorkingPressure],
                        [DeliveryCapacity],
                        [BackUpelementSpecs],
                        [SystemWidth],
                        [SystemLength],
                        [SystemWeightEmpty],
                        [SystemWeightFull],
                        [CreateDateTime__Gen],
                        [UpdateDateTime__Gen]
                    )
                    VALUES
                    (
                        @ProductModelWHSolarID,
                        @ProductModelWHID,
                        @StorageCapacity,
                        @SolarEnergyFactor,
                        @NumberOfCollectionPanels,
                        @AbsorberCoating,
                        @CollectorWidth,
                        @CollectorLength,
                        @CollectorDepth,
                        @AreaSqFt,
                        @DryWeight,
                        @FluidCapacity,
                        @DesignFlowRate,
                        @MaxFlowRate,
                        @MaxOperatingPressure,
                        @TankHeight,
                        @TankDiameter,
                        @TankWeight,
                        @TankWattage,
                        @BTUInput,
                        @WorkingPressure,
                        @DeliveryCapacity,
                        @BackUpelementSpecs,
                        @SystemWidth,
                        @SystemLength,
                        @SystemWeightEmpty,
                        @SystemWeightFull,
                        SYSDATETIME(),
                        SYSDATETIME()
                    )
                END
        END
    ELSE
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    UPDATE [ProductModelWHSolar]
                    SET
                    [ProductModelWHID] = @ProductModelWHID,
                    [StorageCapacity] = @StorageCapacity,
                    [SolarEnergyFactor] = @SolarEnergyFactor,
                    [NumberOfCollectionPanels] = @NumberOfCollectionPanels,
                    [AbsorberCoating] = @AbsorberCoating,
                    [CollectorWidth] = @CollectorWidth,
                    [CollectorLength] = @CollectorLength,
                    [CollectorDepth] = @CollectorDepth,
                    [AreaSqFt] = @AreaSqFt,
                    [DryWeight] = @DryWeight,
                    [FluidCapacity] = @FluidCapacity,
                    [DesignFlowRate] = @DesignFlowRate,
                    [MaxFlowRate] = @MaxFlowRate,
                    [MaxOperatingPressure] = @MaxOperatingPressure,
                    [TankHeight] = @TankHeight,
                    [TankDiameter] = @TankDiameter,
                    [TankWeight] = @TankWeight,
                    [TankWattage] = @TankWattage,
                    [BTUInput] = @BTUInput,
                    [WorkingPressure] = @WorkingPressure,
                    [DeliveryCapacity] = @DeliveryCapacity,
                    [BackUpelementSpecs] = @BackUpelementSpecs,
                    [SystemWidth] = @SystemWidth,
                    [SystemLength] = @SystemLength,
                    [SystemWeightEmpty] = @SystemWeightEmpty,
                    [SystemWeightFull] = @SystemWeightFull,
                    [UpdateDateTime__Gen] = SYSDATETIME()
                    WHERE [ProductModelWHSolarID] = @ProductModelWHSolarID
                END
        END

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__ProductModelWHSolar_Save Succeeded'
Else PRINT 'Procedure Creation: spGen__ProductModelWHSolar_Save Error on Creation'
GO





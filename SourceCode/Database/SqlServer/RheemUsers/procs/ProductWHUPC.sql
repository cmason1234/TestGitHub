/*
'===============================================================================
' Generated by GenerateDataAndObjectLayer Version 1.0.0.0
'
' <auto-generated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated. 
' </auto-generated>
'===============================================================================

*/
USE [RheemUsers]

/* ------------------------------------------------------------
   Get rid of obsolete InsertProductWHUPC
   Get rid of obsolete UpdateProductWHUPC
   Get rid of obsolete DeleteProductWHUPC
   Get rid of obsolete SearchProductWHUPCByString
   Get rid of obsolete GetProductWHUPCByID
   ------------------------------------------------------------ */
If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('InsertProductWHUPC') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE InsertProductWHUPC;
        PRINT 'Dropped InsertProductWHUPC'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('UpdateProductWHUPC') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE UpdateProductWHUPC;
        PRINT 'Dropped UpdateProductWHUPC'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DeleteProductWHUPC') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE DeleteProductWHUPC;
        PRINT 'Dropped DeleteProductWHUPC'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('SearchProductWHUPCByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE SearchProductWHUPCByString;
        PRINT 'Dropped SearchProductWHUPCByString'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('GetProductWHUPCByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE GetProductWHUPCByID;
        PRINT 'Dropped GetProductWHUPCByID'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__ProductWHUPC_GetByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__ProductWHUPC_GetByID;
        PRINT 'Dropped spGen__ProductWHUPC_GetByID'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__ProductWHUPC_GetByID

   Description:  Selects record(s) from table 'ProductWHUPC'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__ProductWHUPC_GetByID
(
    @ProductWHUPCID uniqueidentifier

)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int

    Select [ProductWHUPCID],[UPC],[AlternateCode],[ConfigurationString],[BrandID],[CatalogCode],[ProductWHBaseModelID],[VariantCode],[Description],[ProductWHGallonCapacityID],[ProductWHWatt1ID],[ProductWHWatt2ID],[ProductWHVoltageID],[ProductWHBTUID],[ProductWHPhaseID],[FreightClass],[HazMatDescription],[PriceSheetNumber],[ListPriceID],[Kit],[Commercial],[Residential],[HarmonizeCodes],[NAFTACertificate],[Length],[Height],[Width],[Weight],[CertifiedAltitude],[CreateDateTime__Gen],[UpdateDateTime__Gen]
    FROM [ProductWHUPC]
    WHERE [ProductWHUPCID] = @ProductWHUPCID

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__ProductWHUPC_GetByID Succeeded'
Else PRINT 'Procedure Creation: spGen__ProductWHUPC_GetByID Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__ProductWHUPC_SearchByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__ProductWHUPC_SearchByString;
        PRINT 'Dropped spGen__ProductWHUPC_SearchByString'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__ProductWHUPC_SearchByString

   Description:  Selects a record from table 'ProductWHUPC'
                 And puts values into parameters

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__ProductWHUPC_SearchByString
(
    @searchParam varchar(4000)
)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int
    DECLARE @strSql varchar(4000)

    SET @strSql = ' Select [ProductWHUPCID],[UPC],[AlternateCode],[ConfigurationString],[BrandID],[CatalogCode],[ProductWHBaseModelID],[VariantCode],[Description],[ProductWHGallonCapacityID],[ProductWHWatt1ID],[ProductWHWatt2ID],[ProductWHVoltageID],[ProductWHBTUID],[ProductWHPhaseID],[FreightClass],[HazMatDescription],[PriceSheetNumber],[ListPriceID],[Kit],[Commercial],[Residential],[HarmonizeCodes],[NAFTACertificate],[Length],[Height],[Width],[Weight],[CertifiedAltitude],[CreateDateTime__Gen],[UpdateDateTime__Gen]
    FROM [ProductWHUPC]
    WHERE ' +  @searchParam

    EXEC(@strSql)

    --//We should NOT be using exec above.
    --//If params are NOT known, then be sure to clean sql
    --//If params are known, format like example below

    --IF @prodname IS NOT NULL
    --SELECT @sql = @sql + ' ProductName LIKE @prodname'
    --EXEC sp_executesql @sql, N'@prodname varchar(400)',@prodname

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__ProductWHUPC_SearchByString Succeeded'
Else PRINT 'Procedure Creation: spGen__ProductWHUPC_SearchByString Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__ProductWHUPC_Delete') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__ProductWHUPC_Delete;
        PRINT 'Dropped spGen__ProductWHUPC_Delete'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__ProductWHUPC_Delete

   Description:  Deletes a record from table 'ProductWHUPC'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__ProductWHUPC_Delete
(
    @ProductWHUPCID uniqueidentifier

)
AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN
    DECLARE @Err Int


    DELETE FROM [ProductWHUPC]
    WHERE [ProductWHUPCID] = @ProductWHUPCID


End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__ProductWHUPC_Delete Succeeded'
Else PRINT 'Procedure Creation: spGen__ProductWHUPC_Delete Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__ProductWHUPC_Save') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__ProductWHUPC_Save;
        PRINT 'Dropped spGen__ProductWHUPC_Save'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__ProductWHUPC_Save

   Description:  Updates or Deletes a record In table 'ProductWHUPC'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__ProductWHUPC_Save
(
    @ErrText varchar(4000) output,
    @ProductWHUPCID uniqueidentifier output,
    @UPC varchar(50),
    @AlternateCode varchar(50),
    @ConfigurationString varchar(50),
    @BrandID uniqueidentifier,
    @CatalogCode varchar(50),
    @ProductWHBaseModelID uniqueidentifier,
    @VariantCode varchar(50),
    @Description text,
    @ProductWHGallonCapacityID uniqueidentifier,
    @ProductWHWatt1ID uniqueidentifier,
    @ProductWHWatt2ID uniqueidentifier,
    @ProductWHVoltageID uniqueidentifier,
    @ProductWHBTUID uniqueidentifier,
    @ProductWHPhaseID uniqueidentifier,
    @FreightClass int,
    @HazMatDescription varchar(256),
    @PriceSheetNumber varchar(50),
    @ListPriceID uniqueidentifier,
    @Kit bit,
    @Commercial bit,
    @Residential bit,
    @HarmonizeCodes varchar(50),
    @NAFTACertificate bit,
    @Length float,
    @Height float,
    @Width float,
    @Weight float,
    @CertifiedAltitude int
)

AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN

    DECLARE @UniqueRowCount Int
    IF @ProductWHUPCID = '00000000-0000-0000-0000-000000000000' SET @ProductWHUPCID = NULL
    IF @ProductWHUPCID IS NULL
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    SET @ProductWHUPCID = NewID()

                    INSERT
                    INTO [ProductWHUPC]
                    (
                        [ProductWHUPCID],
                        [UPC],
                        [AlternateCode],
                        [ConfigurationString],
                        [BrandID],
                        [CatalogCode],
                        [ProductWHBaseModelID],
                        [VariantCode],
                        [Description],
                        [ProductWHGallonCapacityID],
                        [ProductWHWatt1ID],
                        [ProductWHWatt2ID],
                        [ProductWHVoltageID],
                        [ProductWHBTUID],
                        [ProductWHPhaseID],
                        [FreightClass],
                        [HazMatDescription],
                        [PriceSheetNumber],
                        [ListPriceID],
                        [Kit],
                        [Commercial],
                        [Residential],
                        [HarmonizeCodes],
                        [NAFTACertificate],
                        [Length],
                        [Height],
                        [Width],
                        [Weight],
                        [CertifiedAltitude],
                        [CreateDateTime__Gen],
                        [UpdateDateTime__Gen]
                    )
                    VALUES
                    (
                        @ProductWHUPCID,
                        @UPC,
                        @AlternateCode,
                        @ConfigurationString,
                        @BrandID,
                        @CatalogCode,
                        @ProductWHBaseModelID,
                        @VariantCode,
                        @Description,
                        @ProductWHGallonCapacityID,
                        @ProductWHWatt1ID,
                        @ProductWHWatt2ID,
                        @ProductWHVoltageID,
                        @ProductWHBTUID,
                        @ProductWHPhaseID,
                        @FreightClass,
                        @HazMatDescription,
                        @PriceSheetNumber,
                        @ListPriceID,
                        @Kit,
                        @Commercial,
                        @Residential,
                        @HarmonizeCodes,
                        @NAFTACertificate,
                        @Length,
                        @Height,
                        @Width,
                        @Weight,
                        @CertifiedAltitude,
                        SYSDATETIME(),
                        SYSDATETIME()
                    )
                END
        END
    ELSE
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    UPDATE [ProductWHUPC]
                    SET
                    [UPC] = @UPC,
                    [AlternateCode] = @AlternateCode,
                    [ConfigurationString] = @ConfigurationString,
                    [BrandID] = @BrandID,
                    [CatalogCode] = @CatalogCode,
                    [ProductWHBaseModelID] = @ProductWHBaseModelID,
                    [VariantCode] = @VariantCode,
                    [Description] = @Description,
                    [ProductWHGallonCapacityID] = @ProductWHGallonCapacityID,
                    [ProductWHWatt1ID] = @ProductWHWatt1ID,
                    [ProductWHWatt2ID] = @ProductWHWatt2ID,
                    [ProductWHVoltageID] = @ProductWHVoltageID,
                    [ProductWHBTUID] = @ProductWHBTUID,
                    [ProductWHPhaseID] = @ProductWHPhaseID,
                    [FreightClass] = @FreightClass,
                    [HazMatDescription] = @HazMatDescription,
                    [PriceSheetNumber] = @PriceSheetNumber,
                    [ListPriceID] = @ListPriceID,
                    [Kit] = @Kit,
                    [Commercial] = @Commercial,
                    [Residential] = @Residential,
                    [HarmonizeCodes] = @HarmonizeCodes,
                    [NAFTACertificate] = @NAFTACertificate,
                    [Length] = @Length,
                    [Height] = @Height,
                    [Width] = @Width,
                    [Weight] = @Weight,
                    [CertifiedAltitude] = @CertifiedAltitude,
                    [UpdateDateTime__Gen] = SYSDATETIME()
                    WHERE [ProductWHUPCID] = @ProductWHUPCID
                END
        END

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__ProductWHUPC_Save Succeeded'
Else PRINT 'Procedure Creation: spGen__ProductWHUPC_Save Error on Creation'
GO





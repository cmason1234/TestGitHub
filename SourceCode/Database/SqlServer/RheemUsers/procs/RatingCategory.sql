/*
'===============================================================================
' Generated by GenerateDataAndObjectLayer Version 1.0.0.0
'
' <auto-generated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated. 
' </auto-generated>
'===============================================================================

*/
USE [RheemUsers]

/* ------------------------------------------------------------
   Get rid of obsolete InsertRatingCategory
   Get rid of obsolete UpdateRatingCategory
   Get rid of obsolete DeleteRatingCategory
   Get rid of obsolete SearchRatingCategoryByString
   Get rid of obsolete GetRatingCategoryByID
   ------------------------------------------------------------ */
If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('InsertRatingCategory') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE InsertRatingCategory;
        PRINT 'Dropped InsertRatingCategory'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('UpdateRatingCategory') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE UpdateRatingCategory;
        PRINT 'Dropped UpdateRatingCategory'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DeleteRatingCategory') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE DeleteRatingCategory;
        PRINT 'Dropped DeleteRatingCategory'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('SearchRatingCategoryByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE SearchRatingCategoryByString;
        PRINT 'Dropped SearchRatingCategoryByString'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('GetRatingCategoryByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE GetRatingCategoryByID;
        PRINT 'Dropped GetRatingCategoryByID'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__RatingCategory_GetByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__RatingCategory_GetByID;
        PRINT 'Dropped spGen__RatingCategory_GetByID'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__RatingCategory_GetByID

   Description:  Selects record(s) from table 'RatingCategory'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__RatingCategory_GetByID
(
    @RatingCategoryID uniqueidentifier

)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int

    Select [RatingCategoryID],[CategoryName],[DisplayOrder],[Weight],[RatingParentID],[CreateDateTime__Gen],[UpdateDateTime__Gen]
    FROM [RatingCategory]
    WHERE [RatingCategoryID] = @RatingCategoryID

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__RatingCategory_GetByID Succeeded'
Else PRINT 'Procedure Creation: spGen__RatingCategory_GetByID Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__RatingCategory_SearchByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__RatingCategory_SearchByString;
        PRINT 'Dropped spGen__RatingCategory_SearchByString'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__RatingCategory_SearchByString

   Description:  Selects a record from table 'RatingCategory'
                 And puts values into parameters

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__RatingCategory_SearchByString
(
    @searchParam varchar(4000)
)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int
    DECLARE @strSql varchar(4000)

    SET @strSql = ' Select [RatingCategoryID],[CategoryName],[DisplayOrder],[Weight],[RatingParentID],[CreateDateTime__Gen],[UpdateDateTime__Gen]
    FROM [RatingCategory]
    WHERE ' +  @searchParam

    EXEC(@strSql)

    --//We should NOT be using exec above.
    --//If params are NOT known, then be sure to clean sql
    --//If params are known, format like example below

    --IF @prodname IS NOT NULL
    --SELECT @sql = @sql + ' ProductName LIKE @prodname'
    --EXEC sp_executesql @sql, N'@prodname varchar(400)',@prodname

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__RatingCategory_SearchByString Succeeded'
Else PRINT 'Procedure Creation: spGen__RatingCategory_SearchByString Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__RatingCategory_Delete') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__RatingCategory_Delete;
        PRINT 'Dropped spGen__RatingCategory_Delete'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__RatingCategory_Delete

   Description:  Deletes a record from table 'RatingCategory'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__RatingCategory_Delete
(
    @RatingCategoryID uniqueidentifier

)
AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN
    DECLARE @Err Int


    DELETE FROM [RatingCategory]
    WHERE [RatingCategoryID] = @RatingCategoryID


End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__RatingCategory_Delete Succeeded'
Else PRINT 'Procedure Creation: spGen__RatingCategory_Delete Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__RatingCategory_Save') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__RatingCategory_Save;
        PRINT 'Dropped spGen__RatingCategory_Save'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__RatingCategory_Save

   Description:  Updates or Deletes a record In table 'RatingCategory'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__RatingCategory_Save
(
    @ErrText varchar(4000) output,
    @RatingCategoryID uniqueidentifier output,
    @CategoryName varchar(50),
    @DisplayOrder int,
    @Weight float,
    @RatingParentID uniqueidentifier
)

AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN

    DECLARE @UniqueRowCount Int
    IF @RatingCategoryID = '00000000-0000-0000-0000-000000000000' SET @RatingCategoryID = NULL
    IF @RatingCategoryID IS NULL
        BEGIN
            SELECT @UniqueRowCount = COUNT(1) FROM [RatingCategory] where [CategoryName] = @CategoryName 
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = 'CategoryName ' + Convert(varchar(36), @CategoryName) + ' already exists'
                END
            ELSE
                BEGIN
                    SET @RatingCategoryID = NewID()

                    INSERT
                    INTO [RatingCategory]
                    (
                        [RatingCategoryID],
                        [CategoryName],
                        [DisplayOrder],
                        [Weight],
                        [RatingParentID],
                        [CreateDateTime__Gen],
                        [UpdateDateTime__Gen]
                    )
                    VALUES
                    (
                        @RatingCategoryID,
                        @CategoryName,
                        @DisplayOrder,
                        @Weight,
                        @RatingParentID,
                        SYSDATETIME(),
                        SYSDATETIME()
                    )
                END
        END
    ELSE
        BEGIN
            -- check to see that there isn't another row like this one (assuming the unique index column(s) might have changed)
            SELECT @UniqueRowCount = COUNT(1) FROM [RatingCategory] where [CategoryName] = @CategoryName  and [RatingCategoryID] <> @RatingCategoryID
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = 'CategoryName ' + Convert(varchar(36), @CategoryName) + ' already exists'
                END
            ELSE
                BEGIN
                    UPDATE [RatingCategory]
                    SET
                    [CategoryName] = @CategoryName,
                    [DisplayOrder] = @DisplayOrder,
                    [Weight] = @Weight,
                    [RatingParentID] = @RatingParentID,
                    [UpdateDateTime__Gen] = SYSDATETIME()
                    WHERE [RatingCategoryID] = @RatingCategoryID
                END
        END

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__RatingCategory_Save Succeeded'
Else PRINT 'Procedure Creation: spGen__RatingCategory_Save Error on Creation'
GO





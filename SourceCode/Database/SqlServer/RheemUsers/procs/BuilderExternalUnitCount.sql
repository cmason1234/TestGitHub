/*
'===============================================================================
' Generated by GenerateDataAndObjectLayer Version 1.0.0.0
'
' <auto-generated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated. 
' </auto-generated>
'===============================================================================

*/
USE [RheemUsers]

/* ------------------------------------------------------------
   Get rid of obsolete InsertBuilderExternalUnitCount
   Get rid of obsolete UpdateBuilderExternalUnitCount
   Get rid of obsolete DeleteBuilderExternalUnitCount
   Get rid of obsolete SearchBuilderExternalUnitCountByString
   Get rid of obsolete GetBuilderExternalUnitCountByID
   ------------------------------------------------------------ */
If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('InsertBuilderExternalUnitCount') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE InsertBuilderExternalUnitCount;
        PRINT 'Dropped InsertBuilderExternalUnitCount'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('UpdateBuilderExternalUnitCount') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE UpdateBuilderExternalUnitCount;
        PRINT 'Dropped UpdateBuilderExternalUnitCount'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DeleteBuilderExternalUnitCount') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE DeleteBuilderExternalUnitCount;
        PRINT 'Dropped DeleteBuilderExternalUnitCount'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('SearchBuilderExternalUnitCountByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE SearchBuilderExternalUnitCountByString;
        PRINT 'Dropped SearchBuilderExternalUnitCountByString'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('GetBuilderExternalUnitCountByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE GetBuilderExternalUnitCountByID;
        PRINT 'Dropped GetBuilderExternalUnitCountByID'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__BuilderExternalUnitCount_GetByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__BuilderExternalUnitCount_GetByID;
        PRINT 'Dropped spGen__BuilderExternalUnitCount_GetByID'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__BuilderExternalUnitCount_GetByID

   Description:  Selects record(s) from table 'BuilderExternalUnitCount'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__BuilderExternalUnitCount_GetByID
(
    @BuilderExternalUnitCountID uniqueidentifier

)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int

    Select [BuilderExternalUnitCountID],[OrganizationID],[ProgramType],[Year],[Month],[MotorBearingUnits],[Incentive],[CreateDateTime__Gen],[UpdateDateTime__Gen]
    FROM [BuilderExternalUnitCount]
    WHERE [BuilderExternalUnitCountID] = @BuilderExternalUnitCountID

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__BuilderExternalUnitCount_GetByID Succeeded'
Else PRINT 'Procedure Creation: spGen__BuilderExternalUnitCount_GetByID Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__BuilderExternalUnitCount_SearchByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__BuilderExternalUnitCount_SearchByString;
        PRINT 'Dropped spGen__BuilderExternalUnitCount_SearchByString'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__BuilderExternalUnitCount_SearchByString

   Description:  Selects a record from table 'BuilderExternalUnitCount'
                 And puts values into parameters

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__BuilderExternalUnitCount_SearchByString
(
    @searchParam varchar(4000)
)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int
    DECLARE @strSql varchar(4000)

    SET @strSql = ' Select [BuilderExternalUnitCountID],[OrganizationID],[ProgramType],[Year],[Month],[MotorBearingUnits],[Incentive],[CreateDateTime__Gen],[UpdateDateTime__Gen]
    FROM [BuilderExternalUnitCount]
    WHERE ' +  @searchParam

    EXEC(@strSql)

    --//We should NOT be using exec above.
    --//If params are NOT known, then be sure to clean sql
    --//If params are known, format like example below

    --IF @prodname IS NOT NULL
    --SELECT @sql = @sql + ' ProductName LIKE @prodname'
    --EXEC sp_executesql @sql, N'@prodname varchar(400)',@prodname

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__BuilderExternalUnitCount_SearchByString Succeeded'
Else PRINT 'Procedure Creation: spGen__BuilderExternalUnitCount_SearchByString Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__BuilderExternalUnitCount_Delete') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__BuilderExternalUnitCount_Delete;
        PRINT 'Dropped spGen__BuilderExternalUnitCount_Delete'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__BuilderExternalUnitCount_Delete

   Description:  Deletes a record from table 'BuilderExternalUnitCount'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__BuilderExternalUnitCount_Delete
(
    @BuilderExternalUnitCountID uniqueidentifier

)
AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN
    DECLARE @Err Int


    DELETE FROM [BuilderExternalUnitCount]
    WHERE [BuilderExternalUnitCountID] = @BuilderExternalUnitCountID


End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__BuilderExternalUnitCount_Delete Succeeded'
Else PRINT 'Procedure Creation: spGen__BuilderExternalUnitCount_Delete Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__BuilderExternalUnitCount_Save') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__BuilderExternalUnitCount_Save;
        PRINT 'Dropped spGen__BuilderExternalUnitCount_Save'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__BuilderExternalUnitCount_Save

   Description:  Updates or Deletes a record In table 'BuilderExternalUnitCount'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__BuilderExternalUnitCount_Save
(
    @ErrText varchar(4000) output,
    @BuilderExternalUnitCountID uniqueidentifier output,
    @OrganizationID uniqueidentifier,
    @ProgramType varchar(50),
    @Year int,
    @Month int,
    @MotorBearingUnits int,
    @Incentive float
)

AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN

    DECLARE @UniqueRowCount Int
    IF @BuilderExternalUnitCountID = '00000000-0000-0000-0000-000000000000' SET @BuilderExternalUnitCountID = NULL
    IF @BuilderExternalUnitCountID IS NULL
        BEGIN
            SELECT @UniqueRowCount = COUNT(1) FROM [BuilderExternalUnitCount] where [OrganizationID] = @OrganizationID and [ProgramType] = @ProgramType and [Year] = @Year and [Month] = @Month 
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = 'A row matching these unique index columns was found: OrganizationID, ProgramType, Year, Month'
                END
            ELSE
                BEGIN
                    SET @BuilderExternalUnitCountID = NewID()

                    INSERT
                    INTO [BuilderExternalUnitCount]
                    (
                        [BuilderExternalUnitCountID],
                        [OrganizationID],
                        [ProgramType],
                        [Year],
                        [Month],
                        [MotorBearingUnits],
                        [Incentive],
                        [CreateDateTime__Gen],
                        [UpdateDateTime__Gen]
                    )
                    VALUES
                    (
                        @BuilderExternalUnitCountID,
                        @OrganizationID,
                        @ProgramType,
                        @Year,
                        @Month,
                        @MotorBearingUnits,
                        @Incentive,
                        SYSDATETIME(),
                        SYSDATETIME()
                    )
                END
        END
    ELSE
        BEGIN
            -- check to see that there isn't another row like this one (assuming the unique index column(s) might have changed)
            SELECT @UniqueRowCount = COUNT(1) FROM [BuilderExternalUnitCount] where [OrganizationID] = @OrganizationID and [ProgramType] = @ProgramType and [Year] = @Year and [Month] = @Month  and [BuilderExternalUnitCountID] <> @BuilderExternalUnitCountID
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = 'A row matching these unique index columns was found: OrganizationID, ProgramType, Year, Month'
                END
            ELSE
                BEGIN
                    UPDATE [BuilderExternalUnitCount]
                    SET
                    [OrganizationID] = @OrganizationID,
                    [ProgramType] = @ProgramType,
                    [Year] = @Year,
                    [Month] = @Month,
                    [MotorBearingUnits] = @MotorBearingUnits,
                    [Incentive] = @Incentive,
                    [UpdateDateTime__Gen] = SYSDATETIME()
                    WHERE [BuilderExternalUnitCountID] = @BuilderExternalUnitCountID
                END
        END

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__BuilderExternalUnitCount_Save Succeeded'
Else PRINT 'Procedure Creation: spGen__BuilderExternalUnitCount_Save Error on Creation'
GO





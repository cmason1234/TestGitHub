/*
'===============================================================================
' Generated by GenerateDataAndObjectLayer Version 1.0.0.0
'
' <auto-generated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated. 
' </auto-generated>
'===============================================================================

*/
USE [RheemUsers]

/* ------------------------------------------------------------
   Get rid of obsolete InsertRatingCriteria
   Get rid of obsolete UpdateRatingCriteria
   Get rid of obsolete DeleteRatingCriteria
   Get rid of obsolete SearchRatingCriteriaByString
   Get rid of obsolete GetRatingCriteriaByID
   ------------------------------------------------------------ */
If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('InsertRatingCriteria') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE InsertRatingCriteria;
        PRINT 'Dropped InsertRatingCriteria'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('UpdateRatingCriteria') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE UpdateRatingCriteria;
        PRINT 'Dropped UpdateRatingCriteria'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DeleteRatingCriteria') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE DeleteRatingCriteria;
        PRINT 'Dropped DeleteRatingCriteria'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('SearchRatingCriteriaByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE SearchRatingCriteriaByString;
        PRINT 'Dropped SearchRatingCriteriaByString'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('GetRatingCriteriaByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE GetRatingCriteriaByID;
        PRINT 'Dropped GetRatingCriteriaByID'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__RatingCriteria_GetByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__RatingCriteria_GetByID;
        PRINT 'Dropped spGen__RatingCriteria_GetByID'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__RatingCriteria_GetByID

   Description:  Selects record(s) from table 'RatingCriteria'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__RatingCriteria_GetByID
(
    @RatingCriteriaID uniqueidentifier

)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int

    Select [RatingCriteriaID],[CriteriaName],[DisplayOrder],[Ranking],[RatingCategoryID],[CreateDateTime__Gen],[UpdateDateTime__Gen]
    FROM [RatingCriteria]
    WHERE [RatingCriteriaID] = @RatingCriteriaID

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__RatingCriteria_GetByID Succeeded'
Else PRINT 'Procedure Creation: spGen__RatingCriteria_GetByID Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__RatingCriteria_SearchByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__RatingCriteria_SearchByString;
        PRINT 'Dropped spGen__RatingCriteria_SearchByString'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__RatingCriteria_SearchByString

   Description:  Selects a record from table 'RatingCriteria'
                 And puts values into parameters

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__RatingCriteria_SearchByString
(
    @searchParam varchar(4000)
)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int
    DECLARE @strSql varchar(4000)

    SET @strSql = ' Select [RatingCriteriaID],[CriteriaName],[DisplayOrder],[Ranking],[RatingCategoryID],[CreateDateTime__Gen],[UpdateDateTime__Gen]
    FROM [RatingCriteria]
    WHERE ' +  @searchParam

    EXEC(@strSql)

    --//We should NOT be using exec above.
    --//If params are NOT known, then be sure to clean sql
    --//If params are known, format like example below

    --IF @prodname IS NOT NULL
    --SELECT @sql = @sql + ' ProductName LIKE @prodname'
    --EXEC sp_executesql @sql, N'@prodname varchar(400)',@prodname

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__RatingCriteria_SearchByString Succeeded'
Else PRINT 'Procedure Creation: spGen__RatingCriteria_SearchByString Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__RatingCriteria_Delete') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__RatingCriteria_Delete;
        PRINT 'Dropped spGen__RatingCriteria_Delete'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__RatingCriteria_Delete

   Description:  Deletes a record from table 'RatingCriteria'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__RatingCriteria_Delete
(
    @RatingCriteriaID uniqueidentifier

)
AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN
    DECLARE @Err Int


    DELETE FROM [RatingCriteria]
    WHERE [RatingCriteriaID] = @RatingCriteriaID


End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__RatingCriteria_Delete Succeeded'
Else PRINT 'Procedure Creation: spGen__RatingCriteria_Delete Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__RatingCriteria_Save') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__RatingCriteria_Save;
        PRINT 'Dropped spGen__RatingCriteria_Save'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__RatingCriteria_Save

   Description:  Updates or Deletes a record In table 'RatingCriteria'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__RatingCriteria_Save
(
    @ErrText varchar(4000) output,
    @RatingCriteriaID uniqueidentifier output,
    @CriteriaName varchar(100),
    @DisplayOrder int,
    @Ranking float,
    @RatingCategoryID uniqueidentifier
)

AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN

    DECLARE @UniqueRowCount Int
    IF @RatingCriteriaID = '00000000-0000-0000-0000-000000000000' SET @RatingCriteriaID = NULL
    IF @RatingCriteriaID IS NULL
        BEGIN
            SELECT @UniqueRowCount = COUNT(1) FROM [RatingCriteria] where [CriteriaName] = @CriteriaName and [RatingCategoryID] = @RatingCategoryID 
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = 'A row matching these unique index columns was found: CriteriaName, RatingCategoryID'
                END
            ELSE
                BEGIN
                    SET @RatingCriteriaID = NewID()

                    INSERT
                    INTO [RatingCriteria]
                    (
                        [RatingCriteriaID],
                        [CriteriaName],
                        [DisplayOrder],
                        [Ranking],
                        [RatingCategoryID],
                        [CreateDateTime__Gen],
                        [UpdateDateTime__Gen]
                    )
                    VALUES
                    (
                        @RatingCriteriaID,
                        @CriteriaName,
                        @DisplayOrder,
                        @Ranking,
                        @RatingCategoryID,
                        SYSDATETIME(),
                        SYSDATETIME()
                    )
                END
        END
    ELSE
        BEGIN
            -- check to see that there isn't another row like this one (assuming the unique index column(s) might have changed)
            SELECT @UniqueRowCount = COUNT(1) FROM [RatingCriteria] where [CriteriaName] = @CriteriaName and [RatingCategoryID] = @RatingCategoryID  and [RatingCriteriaID] <> @RatingCriteriaID
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = 'A row matching these unique index columns was found: CriteriaName, RatingCategoryID'
                END
            ELSE
                BEGIN
                    UPDATE [RatingCriteria]
                    SET
                    [CriteriaName] = @CriteriaName,
                    [DisplayOrder] = @DisplayOrder,
                    [Ranking] = @Ranking,
                    [RatingCategoryID] = @RatingCategoryID,
                    [UpdateDateTime__Gen] = SYSDATETIME()
                    WHERE [RatingCriteriaID] = @RatingCriteriaID
                END
        END

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__RatingCriteria_Save Succeeded'
Else PRINT 'Procedure Creation: spGen__RatingCriteria_Save Error on Creation'
GO





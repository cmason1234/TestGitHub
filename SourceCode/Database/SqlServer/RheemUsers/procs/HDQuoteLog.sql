/*
'===============================================================================
' Generated by GenerateDataAndObjectLayer Version 1.0.0.0
'
' <auto-generated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated. 
' </auto-generated>
'===============================================================================

*/
USE [RheemUsers]

/* ------------------------------------------------------------
   Get rid of obsolete InsertHDQuoteLog
   Get rid of obsolete UpdateHDQuoteLog
   Get rid of obsolete DeleteHDQuoteLog
   Get rid of obsolete SearchHDQuoteLogByString
   Get rid of obsolete GetHDQuoteLogByID
   ------------------------------------------------------------ */
If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('InsertHDQuoteLog') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE InsertHDQuoteLog;
        PRINT 'Dropped InsertHDQuoteLog'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('UpdateHDQuoteLog') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE UpdateHDQuoteLog;
        PRINT 'Dropped UpdateHDQuoteLog'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DeleteHDQuoteLog') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE DeleteHDQuoteLog;
        PRINT 'Dropped DeleteHDQuoteLog'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('SearchHDQuoteLogByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE SearchHDQuoteLogByString;
        PRINT 'Dropped SearchHDQuoteLogByString'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('GetHDQuoteLogByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE GetHDQuoteLogByID;
        PRINT 'Dropped GetHDQuoteLogByID'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__HDQuoteLog_GetByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__HDQuoteLog_GetByID;
        PRINT 'Dropped spGen__HDQuoteLog_GetByID'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__HDQuoteLog_GetByID

   Description:  Selects record(s) from table 'HDQuoteLog'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__HDQuoteLog_GetByID
(
    @HDQuoteLogID uniqueidentifier

)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int

    Select [HDQuoteLogID],[HDQuoteID],[PersonID],[SeqNumIdentity],[LogTimeStamp],[LogText],[CreateDateTime__Gen],[UpdateDateTime__Gen]
    FROM [HDQuoteLog]
    WHERE [HDQuoteLogID] = @HDQuoteLogID

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__HDQuoteLog_GetByID Succeeded'
Else PRINT 'Procedure Creation: spGen__HDQuoteLog_GetByID Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__HDQuoteLog_SearchByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__HDQuoteLog_SearchByString;
        PRINT 'Dropped spGen__HDQuoteLog_SearchByString'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__HDQuoteLog_SearchByString

   Description:  Selects a record from table 'HDQuoteLog'
                 And puts values into parameters

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__HDQuoteLog_SearchByString
(
    @searchParam varchar(4000)
)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int
    DECLARE @strSql varchar(4000)

    SET @strSql = ' Select [HDQuoteLogID],[HDQuoteID],[PersonID],[SeqNumIdentity],[LogTimeStamp],[LogText],[CreateDateTime__Gen],[UpdateDateTime__Gen]
    FROM [HDQuoteLog]
    WHERE ' +  @searchParam

    EXEC(@strSql)

    --//We should NOT be using exec above.
    --//If params are NOT known, then be sure to clean sql
    --//If params are known, format like example below

    --IF @prodname IS NOT NULL
    --SELECT @sql = @sql + ' ProductName LIKE @prodname'
    --EXEC sp_executesql @sql, N'@prodname varchar(400)',@prodname

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__HDQuoteLog_SearchByString Succeeded'
Else PRINT 'Procedure Creation: spGen__HDQuoteLog_SearchByString Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__HDQuoteLog_Delete') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__HDQuoteLog_Delete;
        PRINT 'Dropped spGen__HDQuoteLog_Delete'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__HDQuoteLog_Delete

   Description:  Deletes a record from table 'HDQuoteLog'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__HDQuoteLog_Delete
(
    @HDQuoteLogID uniqueidentifier

)
AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN
    DECLARE @Err Int


    DELETE FROM [HDQuoteLog]
    WHERE [HDQuoteLogID] = @HDQuoteLogID


End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__HDQuoteLog_Delete Succeeded'
Else PRINT 'Procedure Creation: spGen__HDQuoteLog_Delete Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__HDQuoteLog_Save') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__HDQuoteLog_Save;
        PRINT 'Dropped spGen__HDQuoteLog_Save'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__HDQuoteLog_Save

   Description:  Updates or Deletes a record In table 'HDQuoteLog'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__HDQuoteLog_Save
(
    @ErrText varchar(4000) output,
    @HDQuoteLogID uniqueidentifier output,
    @HDQuoteID uniqueidentifier,
    @PersonID uniqueidentifier,
    @LogTimeStamp datetime,
    @LogText varchar(1000)
)

AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN

    DECLARE @UniqueRowCount Int
    IF @HDQuoteLogID = '00000000-0000-0000-0000-000000000000' SET @HDQuoteLogID = NULL
    IF @HDQuoteLogID IS NULL
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    SET @HDQuoteLogID = NewID()

                    INSERT
                    INTO [HDQuoteLog]
                    (
                        [HDQuoteLogID],
                        [HDQuoteID],
                        [PersonID],
                        [LogTimeStamp],
                        [LogText],
                        [CreateDateTime__Gen],
                        [UpdateDateTime__Gen]
                    )
                    VALUES
                    (
                        @HDQuoteLogID,
                        @HDQuoteID,
                        @PersonID,
                        @LogTimeStamp,
                        @LogText,
                        SYSDATETIME(),
                        SYSDATETIME()
                    )
                END
        END
    ELSE
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    UPDATE [HDQuoteLog]
                    SET
                    [HDQuoteID] = @HDQuoteID,
                    [PersonID] = @PersonID,
                    [LogTimeStamp] = @LogTimeStamp,
                    [LogText] = @LogText,
                    [UpdateDateTime__Gen] = SYSDATETIME()
                    WHERE [HDQuoteLogID] = @HDQuoteLogID
                END
        END

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__HDQuoteLog_Save Succeeded'
Else PRINT 'Procedure Creation: spGen__HDQuoteLog_Save Error on Creation'
GO





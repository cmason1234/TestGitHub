/*
'===============================================================================
' Generated by GenerateDataAndObjectLayer Version 1.0.0.0
'
' <auto-generated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated. 
' </auto-generated>
'===============================================================================

*/
USE [RheemUsers]

/* ------------------------------------------------------------
   Get rid of obsolete InsertHDImportLog
   Get rid of obsolete UpdateHDImportLog
   Get rid of obsolete DeleteHDImportLog
   Get rid of obsolete SearchHDImportLogByString
   Get rid of obsolete GetHDImportLogByID
   ------------------------------------------------------------ */
If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('InsertHDImportLog') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE InsertHDImportLog;
        PRINT 'Dropped InsertHDImportLog'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('UpdateHDImportLog') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE UpdateHDImportLog;
        PRINT 'Dropped UpdateHDImportLog'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DeleteHDImportLog') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE DeleteHDImportLog;
        PRINT 'Dropped DeleteHDImportLog'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('SearchHDImportLogByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE SearchHDImportLogByString;
        PRINT 'Dropped SearchHDImportLogByString'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('GetHDImportLogByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE GetHDImportLogByID;
        PRINT 'Dropped GetHDImportLogByID'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__HDImportLog_GetByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__HDImportLog_GetByID;
        PRINT 'Dropped spGen__HDImportLog_GetByID'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__HDImportLog_GetByID

   Description:  Selects record(s) from table 'HDImportLog'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__HDImportLog_GetByID
(
    @HDImportLogID uniqueidentifier

)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int

    Select [HDImportLogID],[ImportType],[Message],[MsgTime],[MsgOrder]
    FROM [HDImportLog]
    WHERE [HDImportLogID] = @HDImportLogID

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__HDImportLog_GetByID Succeeded'
Else PRINT 'Procedure Creation: spGen__HDImportLog_GetByID Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__HDImportLog_SearchByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__HDImportLog_SearchByString;
        PRINT 'Dropped spGen__HDImportLog_SearchByString'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__HDImportLog_SearchByString

   Description:  Selects a record from table 'HDImportLog'
                 And puts values into parameters

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__HDImportLog_SearchByString
(
    @searchParam varchar(4000)
)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int
    DECLARE @strSql varchar(4000)

    SET @strSql = ' Select [HDImportLogID],[ImportType],[Message],[MsgTime],[MsgOrder]
    FROM [HDImportLog]
    WHERE ' +  @searchParam

    EXEC(@strSql)

    --//We should NOT be using exec above.
    --//If params are NOT known, then be sure to clean sql
    --//If params are known, format like example below

    --IF @prodname IS NOT NULL
    --SELECT @sql = @sql + ' ProductName LIKE @prodname'
    --EXEC sp_executesql @sql, N'@prodname varchar(400)',@prodname

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__HDImportLog_SearchByString Succeeded'
Else PRINT 'Procedure Creation: spGen__HDImportLog_SearchByString Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__HDImportLog_Delete') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__HDImportLog_Delete;
        PRINT 'Dropped spGen__HDImportLog_Delete'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__HDImportLog_Delete

   Description:  Deletes a record from table 'HDImportLog'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__HDImportLog_Delete
(
    @HDImportLogID uniqueidentifier

)
AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN
    DECLARE @Err Int


    DELETE FROM [HDImportLog]
    WHERE [HDImportLogID] = @HDImportLogID


End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__HDImportLog_Delete Succeeded'
Else PRINT 'Procedure Creation: spGen__HDImportLog_Delete Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__HDImportLog_Save') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__HDImportLog_Save;
        PRINT 'Dropped spGen__HDImportLog_Save'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__HDImportLog_Save

   Description:  Updates or Deletes a record In table 'HDImportLog'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__HDImportLog_Save
(
    @ErrText varchar(4000) output,
    @HDImportLogID uniqueidentifier output,
    @ImportType varchar(50),
    @Message varchar(1024),
    @MsgTime datetime,
    @MsgOrder int
)

AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN

    DECLARE @UniqueRowCount Int
    IF @HDImportLogID = '00000000-0000-0000-0000-000000000000' SET @HDImportLogID = NULL
    IF @HDImportLogID IS NULL
        BEGIN
            SELECT @UniqueRowCount = COUNT(1) FROM [HDImportLog] where [ImportType] = @ImportType and [MsgOrder] = @MsgOrder 
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = 'A row matching these unique index columns was found: ImportType, MsgOrder'
                END
            ELSE
                BEGIN
                    SET @HDImportLogID = NewID()

                    INSERT
                    INTO [HDImportLog]
                    (
                        [HDImportLogID],
                        [ImportType],
                        [Message],
                        [MsgTime],
                        [MsgOrder]
                    )
                    VALUES
                    (
                        @HDImportLogID,
                        @ImportType,
                        @Message,
                        @MsgTime,
                        @MsgOrder
                    )
                END
        END
    ELSE
        BEGIN
            -- check to see that there isn't another row like this one (assuming the unique index column(s) might have changed)
            SELECT @UniqueRowCount = COUNT(1) FROM [HDImportLog] where [ImportType] = @ImportType and [MsgOrder] = @MsgOrder  and [HDImportLogID] <> @HDImportLogID
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = 'A row matching these unique index columns was found: ImportType, MsgOrder'
                END
            ELSE
                BEGIN
                    UPDATE [HDImportLog]
                    SET
                    [ImportType] = @ImportType,
                    [Message] = @Message,
                    [MsgTime] = @MsgTime,
                    [MsgOrder] = @MsgOrder
                    WHERE [HDImportLogID] = @HDImportLogID
                END
        END

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__HDImportLog_Save Succeeded'
Else PRINT 'Procedure Creation: spGen__HDImportLog_Save Error on Creation'
GO





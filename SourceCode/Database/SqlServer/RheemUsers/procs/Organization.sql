/*
'===============================================================================
' Generated by GenerateDataAndObjectLayer Version 1.0.0.0
'
' <auto-generated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated. 
' </auto-generated>
'===============================================================================

*/
USE [RheemUsers]

/* ------------------------------------------------------------
   Get rid of obsolete InsertOrganization
   Get rid of obsolete UpdateOrganization
   Get rid of obsolete DeleteOrganization
   Get rid of obsolete SearchOrganizationByString
   Get rid of obsolete GetOrganizationByID
   ------------------------------------------------------------ */
If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('InsertOrganization') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE InsertOrganization;
        PRINT 'Dropped InsertOrganization'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('UpdateOrganization') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE UpdateOrganization;
        PRINT 'Dropped UpdateOrganization'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DeleteOrganization') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE DeleteOrganization;
        PRINT 'Dropped DeleteOrganization'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('SearchOrganizationByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE SearchOrganizationByString;
        PRINT 'Dropped SearchOrganizationByString'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('GetOrganizationByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE GetOrganizationByID;
        PRINT 'Dropped GetOrganizationByID'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__Organization_GetByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__Organization_GetByID;
        PRINT 'Dropped spGen__Organization_GetByID'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__Organization_GetByID

   Description:  Selects record(s) from table 'Organization'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__Organization_GetByID
(
    @OrganizationID uniqueidentifier

)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int

    Select [OrganizationID],[OrganizationType],[OrganizationName],[Phone],[Phone2],[Fax],[LogoDocumentID],[CreationDate],[ModifiedDate],[PrimaryAddressID],[CreateDateTime__Gen],[UpdateDateTime__Gen]
    FROM [Organization]
    WHERE [OrganizationID] = @OrganizationID

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__Organization_GetByID Succeeded'
Else PRINT 'Procedure Creation: spGen__Organization_GetByID Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__Organization_SearchByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__Organization_SearchByString;
        PRINT 'Dropped spGen__Organization_SearchByString'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__Organization_SearchByString

   Description:  Selects a record from table 'Organization'
                 And puts values into parameters

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__Organization_SearchByString
(
    @searchParam varchar(4000)
)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int
    DECLARE @strSql varchar(4000)

    SET @strSql = ' Select [OrganizationID],[OrganizationType],[OrganizationName],[Phone],[Phone2],[Fax],[LogoDocumentID],[CreationDate],[ModifiedDate],[PrimaryAddressID],[CreateDateTime__Gen],[UpdateDateTime__Gen]
    FROM [Organization]
    WHERE ' +  @searchParam

    EXEC(@strSql)

    --//We should NOT be using exec above.
    --//If params are NOT known, then be sure to clean sql
    --//If params are known, format like example below

    --IF @prodname IS NOT NULL
    --SELECT @sql = @sql + ' ProductName LIKE @prodname'
    --EXEC sp_executesql @sql, N'@prodname varchar(400)',@prodname

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__Organization_SearchByString Succeeded'
Else PRINT 'Procedure Creation: spGen__Organization_SearchByString Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__Organization_Delete') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__Organization_Delete;
        PRINT 'Dropped spGen__Organization_Delete'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__Organization_Delete

   Description:  Deletes a record from table 'Organization'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__Organization_Delete
(
    @OrganizationID uniqueidentifier

)
AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN
    DECLARE @Err Int


    DELETE FROM [Organization]
    WHERE [OrganizationID] = @OrganizationID


End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__Organization_Delete Succeeded'
Else PRINT 'Procedure Creation: spGen__Organization_Delete Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__Organization_Save') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__Organization_Save;
        PRINT 'Dropped spGen__Organization_Save'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__Organization_Save

   Description:  Updates or Deletes a record In table 'Organization'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__Organization_Save
(
    @ErrText varchar(4000) output,
    @OrganizationID uniqueidentifier output,
    @OrganizationType char(32),
    @OrganizationName varchar(128),
    @Phone varchar(50),
    @Phone2 varchar(50),
    @Fax varchar(50),
    @LogoDocumentID uniqueidentifier,
    @CreationDate datetime,
    @ModifiedDate datetime,
    @PrimaryAddressID uniqueidentifier
)

AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN

    DECLARE @UniqueRowCount Int
    IF @OrganizationID = '00000000-0000-0000-0000-000000000000' SET @OrganizationID = NULL
    IF @OrganizationID IS NULL
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    SET @OrganizationID = NewID()

                    INSERT
                    INTO [Organization]
                    (
                        [OrganizationID],
                        [OrganizationType],
                        [OrganizationName],
                        [Phone],
                        [Phone2],
                        [Fax],
                        [LogoDocumentID],
                        [CreationDate],
                        [ModifiedDate],
                        [PrimaryAddressID],
                        [CreateDateTime__Gen],
                        [UpdateDateTime__Gen]
                    )
                    VALUES
                    (
                        @OrganizationID,
                        @OrganizationType,
                        @OrganizationName,
                        @Phone,
                        @Phone2,
                        @Fax,
                        @LogoDocumentID,
                        @CreationDate,
                        @ModifiedDate,
                        @PrimaryAddressID,
                        SYSDATETIME(),
                        SYSDATETIME()
                    )
                END
        END
    ELSE
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    UPDATE [Organization]
                    SET
                    [OrganizationType] = @OrganizationType,
                    [OrganizationName] = @OrganizationName,
                    [Phone] = @Phone,
                    [Phone2] = @Phone2,
                    [Fax] = @Fax,
                    [LogoDocumentID] = @LogoDocumentID,
                    [CreationDate] = @CreationDate,
                    [ModifiedDate] = @ModifiedDate,
                    [PrimaryAddressID] = @PrimaryAddressID,
                    [UpdateDateTime__Gen] = SYSDATETIME()
                    WHERE [OrganizationID] = @OrganizationID
                END
        END

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__Organization_Save Succeeded'
Else PRINT 'Procedure Creation: spGen__Organization_Save Error on Creation'
GO





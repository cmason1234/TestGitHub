/*
'===============================================================================
' Generated by GenerateDataAndObjectLayer Version 1.0.0.0
'
' <auto-generated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated. 
' </auto-generated>
'===============================================================================

*/
USE [RheemUsers]

/* ------------------------------------------------------------
   Get rid of obsolete InsertDivision
   Get rid of obsolete UpdateDivision
   Get rid of obsolete DeleteDivision
   Get rid of obsolete SearchDivisionByString
   Get rid of obsolete GetDivisionByID
   ------------------------------------------------------------ */
If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('InsertDivision') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE InsertDivision;
        PRINT 'Dropped InsertDivision'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('UpdateDivision') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE UpdateDivision;
        PRINT 'Dropped UpdateDivision'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DeleteDivision') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE DeleteDivision;
        PRINT 'Dropped DeleteDivision'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('SearchDivisionByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE SearchDivisionByString;
        PRINT 'Dropped SearchDivisionByString'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('GetDivisionByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE GetDivisionByID;
        PRINT 'Dropped GetDivisionByID'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__Division_GetByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__Division_GetByID;
        PRINT 'Dropped spGen__Division_GetByID'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__Division_GetByID

   Description:  Selects record(s) from table 'Division'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__Division_GetByID
(
    @DivisionID uniqueidentifier

)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int

    Select [DivisionID],[DivisionName],[CreateDateTime__Gen],[UpdateDateTime__Gen]
    FROM [Division]
    WHERE [DivisionID] = @DivisionID

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__Division_GetByID Succeeded'
Else PRINT 'Procedure Creation: spGen__Division_GetByID Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__Division_SearchByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__Division_SearchByString;
        PRINT 'Dropped spGen__Division_SearchByString'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__Division_SearchByString

   Description:  Selects a record from table 'Division'
                 And puts values into parameters

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__Division_SearchByString
(
    @searchParam varchar(4000)
)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int
    DECLARE @strSql varchar(4000)

    SET @strSql = ' Select [DivisionID],[DivisionName],[CreateDateTime__Gen],[UpdateDateTime__Gen]
    FROM [Division]
    WHERE ' +  @searchParam

    EXEC(@strSql)

    --//We should NOT be using exec above.
    --//If params are NOT known, then be sure to clean sql
    --//If params are known, format like example below

    --IF @prodname IS NOT NULL
    --SELECT @sql = @sql + ' ProductName LIKE @prodname'
    --EXEC sp_executesql @sql, N'@prodname varchar(400)',@prodname

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__Division_SearchByString Succeeded'
Else PRINT 'Procedure Creation: spGen__Division_SearchByString Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__Division_Delete') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__Division_Delete;
        PRINT 'Dropped spGen__Division_Delete'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__Division_Delete

   Description:  Deletes a record from table 'Division'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__Division_Delete
(
    @DivisionID uniqueidentifier

)
AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN
    DECLARE @Err Int


    DELETE FROM [Division]
    WHERE [DivisionID] = @DivisionID


End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__Division_Delete Succeeded'
Else PRINT 'Procedure Creation: spGen__Division_Delete Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__Division_Save') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__Division_Save;
        PRINT 'Dropped spGen__Division_Save'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__Division_Save

   Description:  Updates or Deletes a record In table 'Division'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__Division_Save
(
    @ErrText varchar(4000) output,
    @DivisionID uniqueidentifier output,
    @DivisionName varchar(50)
)

AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN

    DECLARE @UniqueRowCount Int
    IF @DivisionID = '00000000-0000-0000-0000-000000000000' SET @DivisionID = NULL
    IF @DivisionID IS NULL
        BEGIN
            SELECT @UniqueRowCount = COUNT(1) FROM [Division] where [DivisionName] = @DivisionName 
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = 'DivisionName ' + Convert(varchar(36), @DivisionName) + ' already exists'
                END
            ELSE
                BEGIN
                    SET @DivisionID = NewID()

                    INSERT
                    INTO [Division]
                    (
                        [DivisionID],
                        [DivisionName],
                        [CreateDateTime__Gen],
                        [UpdateDateTime__Gen]
                    )
                    VALUES
                    (
                        @DivisionID,
                        @DivisionName,
                        SYSDATETIME(),
                        SYSDATETIME()
                    )
                END
        END
    ELSE
        BEGIN
            -- check to see that there isn't another row like this one (assuming the unique index column(s) might have changed)
            SELECT @UniqueRowCount = COUNT(1) FROM [Division] where [DivisionName] = @DivisionName  and [DivisionID] <> @DivisionID
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = 'DivisionName ' + Convert(varchar(36), @DivisionName) + ' already exists'
                END
            ELSE
                BEGIN
                    UPDATE [Division]
                    SET
                    [DivisionName] = @DivisionName,
                    [UpdateDateTime__Gen] = SYSDATETIME()
                    WHERE [DivisionID] = @DivisionID
                END
        END

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__Division_Save Succeeded'
Else PRINT 'Procedure Creation: spGen__Division_Save Error on Creation'
GO





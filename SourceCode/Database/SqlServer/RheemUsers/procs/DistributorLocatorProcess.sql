/*
'===============================================================================
' Generated by GenerateDataAndObjectLayer Version 1.0.0.0
'
' <auto-generated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated. 
' </auto-generated>
'===============================================================================

*/
USE [RheemUsers]

/* ------------------------------------------------------------
   Get rid of obsolete InsertDistributorLocatorProcess
   Get rid of obsolete UpdateDistributorLocatorProcess
   Get rid of obsolete DeleteDistributorLocatorProcess
   Get rid of obsolete SearchDistributorLocatorProcessByString
   Get rid of obsolete GetDistributorLocatorProcessByID
   ------------------------------------------------------------ */
If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('InsertDistributorLocatorProcess') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE InsertDistributorLocatorProcess;
        PRINT 'Dropped InsertDistributorLocatorProcess'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('UpdateDistributorLocatorProcess') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE UpdateDistributorLocatorProcess;
        PRINT 'Dropped UpdateDistributorLocatorProcess'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DeleteDistributorLocatorProcess') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE DeleteDistributorLocatorProcess;
        PRINT 'Dropped DeleteDistributorLocatorProcess'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('SearchDistributorLocatorProcessByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE SearchDistributorLocatorProcessByString;
        PRINT 'Dropped SearchDistributorLocatorProcessByString'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('GetDistributorLocatorProcessByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE GetDistributorLocatorProcessByID;
        PRINT 'Dropped GetDistributorLocatorProcessByID'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__DistributorLocatorProcess_GetByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__DistributorLocatorProcess_GetByID;
        PRINT 'Dropped spGen__DistributorLocatorProcess_GetByID'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__DistributorLocatorProcess_GetByID

   Description:  Selects record(s) from table 'DistributorLocatorProcess'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__DistributorLocatorProcess_GetByID
(
    @DistributorLocatorProcessID uniqueidentifier

)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int

    Select [DistributorLocatorProcessID],[OrganizationID],[StartDate],[EndDate],[NotificationDate],[DSMPersonID],[CreateDateTime__Gen],[UpdateDateTime__Gen]
    FROM [DistributorLocatorProcess]
    WHERE [DistributorLocatorProcessID] = @DistributorLocatorProcessID

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__DistributorLocatorProcess_GetByID Succeeded'
Else PRINT 'Procedure Creation: spGen__DistributorLocatorProcess_GetByID Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__DistributorLocatorProcess_SearchByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__DistributorLocatorProcess_SearchByString;
        PRINT 'Dropped spGen__DistributorLocatorProcess_SearchByString'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__DistributorLocatorProcess_SearchByString

   Description:  Selects a record from table 'DistributorLocatorProcess'
                 And puts values into parameters

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__DistributorLocatorProcess_SearchByString
(
    @searchParam varchar(4000)
)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int
    DECLARE @strSql varchar(4000)

    SET @strSql = ' Select [DistributorLocatorProcessID],[OrganizationID],[StartDate],[EndDate],[NotificationDate],[DSMPersonID],[CreateDateTime__Gen],[UpdateDateTime__Gen]
    FROM [DistributorLocatorProcess]
    WHERE ' +  @searchParam

    EXEC(@strSql)

    --//We should NOT be using exec above.
    --//If params are NOT known, then be sure to clean sql
    --//If params are known, format like example below

    --IF @prodname IS NOT NULL
    --SELECT @sql = @sql + ' ProductName LIKE @prodname'
    --EXEC sp_executesql @sql, N'@prodname varchar(400)',@prodname

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__DistributorLocatorProcess_SearchByString Succeeded'
Else PRINT 'Procedure Creation: spGen__DistributorLocatorProcess_SearchByString Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__DistributorLocatorProcess_Delete') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__DistributorLocatorProcess_Delete;
        PRINT 'Dropped spGen__DistributorLocatorProcess_Delete'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__DistributorLocatorProcess_Delete

   Description:  Deletes a record from table 'DistributorLocatorProcess'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__DistributorLocatorProcess_Delete
(
    @DistributorLocatorProcessID uniqueidentifier

)
AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN
    DECLARE @Err Int


    DELETE FROM [DistributorLocatorProcess]
    WHERE [DistributorLocatorProcessID] = @DistributorLocatorProcessID


End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__DistributorLocatorProcess_Delete Succeeded'
Else PRINT 'Procedure Creation: spGen__DistributorLocatorProcess_Delete Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__DistributorLocatorProcess_Save') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__DistributorLocatorProcess_Save;
        PRINT 'Dropped spGen__DistributorLocatorProcess_Save'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__DistributorLocatorProcess_Save

   Description:  Updates or Deletes a record In table 'DistributorLocatorProcess'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__DistributorLocatorProcess_Save
(
    @ErrText varchar(4000) output,
    @DistributorLocatorProcessID uniqueidentifier output,
    @OrganizationID uniqueidentifier,
    @StartDate datetime,
    @EndDate datetime,
    @NotificationDate datetime,
    @DSMPersonID uniqueidentifier
)

AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN

    DECLARE @UniqueRowCount Int
    IF @DistributorLocatorProcessID = '00000000-0000-0000-0000-000000000000' SET @DistributorLocatorProcessID = NULL
    IF @DistributorLocatorProcessID IS NULL
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    SET @DistributorLocatorProcessID = NewID()

                    INSERT
                    INTO [DistributorLocatorProcess]
                    (
                        [DistributorLocatorProcessID],
                        [OrganizationID],
                        [StartDate],
                        [EndDate],
                        [NotificationDate],
                        [DSMPersonID],
                        [CreateDateTime__Gen],
                        [UpdateDateTime__Gen]
                    )
                    VALUES
                    (
                        @DistributorLocatorProcessID,
                        @OrganizationID,
                        @StartDate,
                        @EndDate,
                        @NotificationDate,
                        @DSMPersonID,
                        SYSDATETIME(),
                        SYSDATETIME()
                    )
                END
        END
    ELSE
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    UPDATE [DistributorLocatorProcess]
                    SET
                    [OrganizationID] = @OrganizationID,
                    [StartDate] = @StartDate,
                    [EndDate] = @EndDate,
                    [NotificationDate] = @NotificationDate,
                    [DSMPersonID] = @DSMPersonID,
                    [UpdateDateTime__Gen] = SYSDATETIME()
                    WHERE [DistributorLocatorProcessID] = @DistributorLocatorProcessID
                END
        END

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__DistributorLocatorProcess_Save Succeeded'
Else PRINT 'Procedure Creation: spGen__DistributorLocatorProcess_Save Error on Creation'
GO





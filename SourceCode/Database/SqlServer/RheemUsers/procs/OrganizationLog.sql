/*
'===============================================================================
' Generated by GenerateDataAndObjectLayer Version 1.0.0.0
'
' <auto-generated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated. 
' </auto-generated>
'===============================================================================

*/
USE [RheemUsers]

/* ------------------------------------------------------------
   Get rid of obsolete InsertOrganizationLog
   Get rid of obsolete UpdateOrganizationLog
   Get rid of obsolete DeleteOrganizationLog
   Get rid of obsolete SearchOrganizationLogByString
   Get rid of obsolete GetOrganizationLogByID
   ------------------------------------------------------------ */
If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('InsertOrganizationLog') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE InsertOrganizationLog;
        PRINT 'Dropped InsertOrganizationLog'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('UpdateOrganizationLog') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE UpdateOrganizationLog;
        PRINT 'Dropped UpdateOrganizationLog'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DeleteOrganizationLog') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE DeleteOrganizationLog;
        PRINT 'Dropped DeleteOrganizationLog'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('SearchOrganizationLogByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE SearchOrganizationLogByString;
        PRINT 'Dropped SearchOrganizationLogByString'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('GetOrganizationLogByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE GetOrganizationLogByID;
        PRINT 'Dropped GetOrganizationLogByID'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__OrganizationLog_GetByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__OrganizationLog_GetByID;
        PRINT 'Dropped spGen__OrganizationLog_GetByID'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__OrganizationLog_GetByID

   Description:  Selects record(s) from table 'OrganizationLog'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__OrganizationLog_GetByID
(
    @OrganizationLogID uniqueidentifier

)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int

    Select [OrganizationLogID],[OrganizationID],[SeqID],[LogText],[LogDate],[CreateDateTime__Gen],[UpdateDateTime__Gen]
    FROM [OrganizationLog]
    WHERE [OrganizationLogID] = @OrganizationLogID

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__OrganizationLog_GetByID Succeeded'
Else PRINT 'Procedure Creation: spGen__OrganizationLog_GetByID Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__OrganizationLog_SearchByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__OrganizationLog_SearchByString;
        PRINT 'Dropped spGen__OrganizationLog_SearchByString'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__OrganizationLog_SearchByString

   Description:  Selects a record from table 'OrganizationLog'
                 And puts values into parameters

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__OrganizationLog_SearchByString
(
    @searchParam varchar(4000)
)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int
    DECLARE @strSql varchar(4000)

    SET @strSql = ' Select [OrganizationLogID],[OrganizationID],[SeqID],[LogText],[LogDate],[CreateDateTime__Gen],[UpdateDateTime__Gen]
    FROM [OrganizationLog]
    WHERE ' +  @searchParam

    EXEC(@strSql)

    --//We should NOT be using exec above.
    --//If params are NOT known, then be sure to clean sql
    --//If params are known, format like example below

    --IF @prodname IS NOT NULL
    --SELECT @sql = @sql + ' ProductName LIKE @prodname'
    --EXEC sp_executesql @sql, N'@prodname varchar(400)',@prodname

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__OrganizationLog_SearchByString Succeeded'
Else PRINT 'Procedure Creation: spGen__OrganizationLog_SearchByString Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__OrganizationLog_Delete') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__OrganizationLog_Delete;
        PRINT 'Dropped spGen__OrganizationLog_Delete'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__OrganizationLog_Delete

   Description:  Deletes a record from table 'OrganizationLog'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__OrganizationLog_Delete
(
    @OrganizationLogID uniqueidentifier

)
AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN
    DECLARE @Err Int


    DELETE FROM [OrganizationLog]
    WHERE [OrganizationLogID] = @OrganizationLogID


End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__OrganizationLog_Delete Succeeded'
Else PRINT 'Procedure Creation: spGen__OrganizationLog_Delete Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__OrganizationLog_Save') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__OrganizationLog_Save;
        PRINT 'Dropped spGen__OrganizationLog_Save'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__OrganizationLog_Save

   Description:  Updates or Deletes a record In table 'OrganizationLog'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__OrganizationLog_Save
(
    @ErrText varchar(4000) output,
    @OrganizationLogID uniqueidentifier output,
    @OrganizationID uniqueidentifier,
    @SeqID int,
    @LogText varchar(1024),
    @LogDate datetime
)

AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN

    DECLARE @UniqueRowCount Int
    IF @OrganizationLogID = '00000000-0000-0000-0000-000000000000' SET @OrganizationLogID = NULL
    IF @OrganizationLogID IS NULL
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    SET @OrganizationLogID = NewID()

                    INSERT
                    INTO [OrganizationLog]
                    (
                        [OrganizationLogID],
                        [OrganizationID],
                        [SeqID],
                        [LogText],
                        [LogDate],
                        [CreateDateTime__Gen],
                        [UpdateDateTime__Gen]
                    )
                    VALUES
                    (
                        @OrganizationLogID,
                        @OrganizationID,
                        @SeqID,
                        @LogText,
                        @LogDate,
                        SYSDATETIME(),
                        SYSDATETIME()
                    )
                END
        END
    ELSE
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    UPDATE [OrganizationLog]
                    SET
                    [OrganizationID] = @OrganizationID,
                    [SeqID] = @SeqID,
                    [LogText] = @LogText,
                    [LogDate] = @LogDate,
                    [UpdateDateTime__Gen] = SYSDATETIME()
                    WHERE [OrganizationLogID] = @OrganizationLogID
                END
        END

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__OrganizationLog_Save Succeeded'
Else PRINT 'Procedure Creation: spGen__OrganizationLog_Save Error on Creation'
GO





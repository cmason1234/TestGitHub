/*
'===============================================================================
' Generated by GenerateDataAndObjectLayer Version 1.0.0.0
'
' <auto-generated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated. 
' </auto-generated>
'===============================================================================

*/
USE [RheemUsers]

/* ------------------------------------------------------------
   Get rid of obsolete InsertPersonLog
   Get rid of obsolete UpdatePersonLog
   Get rid of obsolete DeletePersonLog
   Get rid of obsolete SearchPersonLogByString
   Get rid of obsolete GetPersonLogByID
   ------------------------------------------------------------ */
If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('InsertPersonLog') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE InsertPersonLog;
        PRINT 'Dropped InsertPersonLog'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('UpdatePersonLog') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE UpdatePersonLog;
        PRINT 'Dropped UpdatePersonLog'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DeletePersonLog') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE DeletePersonLog;
        PRINT 'Dropped DeletePersonLog'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('SearchPersonLogByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE SearchPersonLogByString;
        PRINT 'Dropped SearchPersonLogByString'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('GetPersonLogByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE GetPersonLogByID;
        PRINT 'Dropped GetPersonLogByID'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__PersonLog_GetByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__PersonLog_GetByID;
        PRINT 'Dropped spGen__PersonLog_GetByID'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__PersonLog_GetByID

   Description:  Selects record(s) from table 'PersonLog'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__PersonLog_GetByID
(
    @PersonLogID uniqueidentifier

)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int

    Select [PersonLogID],[PersonID],[SeqID],[LogText],[CreateDateTime__Gen],[UpdateDateTime__Gen]
    FROM [PersonLog]
    WHERE [PersonLogID] = @PersonLogID

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__PersonLog_GetByID Succeeded'
Else PRINT 'Procedure Creation: spGen__PersonLog_GetByID Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__PersonLog_SearchByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__PersonLog_SearchByString;
        PRINT 'Dropped spGen__PersonLog_SearchByString'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__PersonLog_SearchByString

   Description:  Selects a record from table 'PersonLog'
                 And puts values into parameters

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__PersonLog_SearchByString
(
    @searchParam varchar(4000)
)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int
    DECLARE @strSql varchar(4000)

    SET @strSql = ' Select [PersonLogID],[PersonID],[SeqID],[LogText],[CreateDateTime__Gen],[UpdateDateTime__Gen]
    FROM [PersonLog]
    WHERE ' +  @searchParam

    EXEC(@strSql)

    --//We should NOT be using exec above.
    --//If params are NOT known, then be sure to clean sql
    --//If params are known, format like example below

    --IF @prodname IS NOT NULL
    --SELECT @sql = @sql + ' ProductName LIKE @prodname'
    --EXEC sp_executesql @sql, N'@prodname varchar(400)',@prodname

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__PersonLog_SearchByString Succeeded'
Else PRINT 'Procedure Creation: spGen__PersonLog_SearchByString Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__PersonLog_Delete') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__PersonLog_Delete;
        PRINT 'Dropped spGen__PersonLog_Delete'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__PersonLog_Delete

   Description:  Deletes a record from table 'PersonLog'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__PersonLog_Delete
(
    @PersonLogID uniqueidentifier

)
AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN
    DECLARE @Err Int


    DELETE FROM [PersonLog]
    WHERE [PersonLogID] = @PersonLogID


End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__PersonLog_Delete Succeeded'
Else PRINT 'Procedure Creation: spGen__PersonLog_Delete Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__PersonLog_Save') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__PersonLog_Save;
        PRINT 'Dropped spGen__PersonLog_Save'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__PersonLog_Save

   Description:  Updates or Deletes a record In table 'PersonLog'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__PersonLog_Save
(
    @ErrText varchar(4000) output,
    @PersonLogID uniqueidentifier output,
    @PersonID uniqueidentifier,
    @SeqID int,
    @LogText varchar(256)
)

AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN

    DECLARE @UniqueRowCount Int
    IF @PersonLogID = '00000000-0000-0000-0000-000000000000' SET @PersonLogID = NULL
    IF @PersonLogID IS NULL
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    SET @PersonLogID = NewID()

                    INSERT
                    INTO [PersonLog]
                    (
                        [PersonLogID],
                        [PersonID],
                        [SeqID],
                        [LogText],
                        [CreateDateTime__Gen],
                        [UpdateDateTime__Gen]
                    )
                    VALUES
                    (
                        @PersonLogID,
                        @PersonID,
                        @SeqID,
                        @LogText,
                        SYSDATETIME(),
                        SYSDATETIME()
                    )
                END
        END
    ELSE
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    UPDATE [PersonLog]
                    SET
                    [PersonID] = @PersonID,
                    [SeqID] = @SeqID,
                    [LogText] = @LogText,
                    [UpdateDateTime__Gen] = SYSDATETIME()
                    WHERE [PersonLogID] = @PersonLogID
                END
        END

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__PersonLog_Save Succeeded'
Else PRINT 'Procedure Creation: spGen__PersonLog_Save Error on Creation'
GO





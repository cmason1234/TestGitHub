/*
'===============================================================================
' Generated by GenerateDataAndObjectLayer Version 1.0.0.0
'
' <auto-generated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated. 
' </auto-generated>
'===============================================================================

*/
USE [RheemUsers]

/* ------------------------------------------------------------
   Get rid of obsolete InsertPartsBlogs
   Get rid of obsolete UpdatePartsBlogs
   Get rid of obsolete DeletePartsBlogs
   Get rid of obsolete SearchPartsBlogsByString
   Get rid of obsolete GetPartsBlogsByID
   ------------------------------------------------------------ */
If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('InsertPartsBlogs') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE InsertPartsBlogs;
        PRINT 'Dropped InsertPartsBlogs'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('UpdatePartsBlogs') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE UpdatePartsBlogs;
        PRINT 'Dropped UpdatePartsBlogs'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DeletePartsBlogs') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE DeletePartsBlogs;
        PRINT 'Dropped DeletePartsBlogs'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('SearchPartsBlogsByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE SearchPartsBlogsByString;
        PRINT 'Dropped SearchPartsBlogsByString'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('GetPartsBlogsByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE GetPartsBlogsByID;
        PRINT 'Dropped GetPartsBlogsByID'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__PartsBlogs_GetByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__PartsBlogs_GetByID;
        PRINT 'Dropped spGen__PartsBlogs_GetByID'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__PartsBlogs_GetByID

   Description:  Selects record(s) from table 'PartsBlogs'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__PartsBlogs_GetByID
(
    @PartsBlogID uniqueidentifier

)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int

    Select [PartsBlogID],[Title],[Type],[BrandID],[Live],[BlogText],[PersonID],[LiveDate],[ExpirationDate],[CreateDate],[ShowToDealers],[isFullPage],[CreateDateTime__Gen],[UpdateDateTime__Gen]
    FROM [PartsBlogs]
    WHERE [PartsBlogID] = @PartsBlogID

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__PartsBlogs_GetByID Succeeded'
Else PRINT 'Procedure Creation: spGen__PartsBlogs_GetByID Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__PartsBlogs_SearchByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__PartsBlogs_SearchByString;
        PRINT 'Dropped spGen__PartsBlogs_SearchByString'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__PartsBlogs_SearchByString

   Description:  Selects a record from table 'PartsBlogs'
                 And puts values into parameters

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__PartsBlogs_SearchByString
(
    @searchParam varchar(4000)
)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int
    DECLARE @strSql varchar(4000)

    SET @strSql = ' Select [PartsBlogID],[Title],[Type],[BrandID],[Live],[BlogText],[PersonID],[LiveDate],[ExpirationDate],[CreateDate],[ShowToDealers],[isFullPage],[CreateDateTime__Gen],[UpdateDateTime__Gen]
    FROM [PartsBlogs]
    WHERE ' +  @searchParam

    EXEC(@strSql)

    --//We should NOT be using exec above.
    --//If params are NOT known, then be sure to clean sql
    --//If params are known, format like example below

    --IF @prodname IS NOT NULL
    --SELECT @sql = @sql + ' ProductName LIKE @prodname'
    --EXEC sp_executesql @sql, N'@prodname varchar(400)',@prodname

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__PartsBlogs_SearchByString Succeeded'
Else PRINT 'Procedure Creation: spGen__PartsBlogs_SearchByString Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__PartsBlogs_Delete') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__PartsBlogs_Delete;
        PRINT 'Dropped spGen__PartsBlogs_Delete'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__PartsBlogs_Delete

   Description:  Deletes a record from table 'PartsBlogs'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__PartsBlogs_Delete
(
    @PartsBlogID uniqueidentifier

)
AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN
    DECLARE @Err Int


    DELETE FROM [PartsBlogs]
    WHERE [PartsBlogID] = @PartsBlogID


End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__PartsBlogs_Delete Succeeded'
Else PRINT 'Procedure Creation: spGen__PartsBlogs_Delete Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__PartsBlogs_Save') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__PartsBlogs_Save;
        PRINT 'Dropped spGen__PartsBlogs_Save'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__PartsBlogs_Save

   Description:  Updates or Deletes a record In table 'PartsBlogs'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__PartsBlogs_Save
(
    @ErrText varchar(4000) output,
    @PartsBlogID uniqueidentifier output,
    @Title varchar(256),
    @Type varchar(32),
    @BrandID uniqueidentifier,
    @Live bit,
    @BlogText text,
    @PersonID uniqueidentifier,
    @LiveDate datetime,
    @ExpirationDate datetime,
    @CreateDate datetime,
    @ShowToDealers bit,
    @isFullPage bit
)

AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN

    DECLARE @UniqueRowCount Int
    IF @PartsBlogID = '00000000-0000-0000-0000-000000000000' SET @PartsBlogID = NULL
    IF @PartsBlogID IS NULL
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    SET @PartsBlogID = NewID()

                    INSERT
                    INTO [PartsBlogs]
                    (
                        [PartsBlogID],
                        [Title],
                        [Type],
                        [BrandID],
                        [Live],
                        [BlogText],
                        [PersonID],
                        [LiveDate],
                        [ExpirationDate],
                        [CreateDate],
                        [ShowToDealers],
                        [isFullPage],
                        [CreateDateTime__Gen],
                        [UpdateDateTime__Gen]
                    )
                    VALUES
                    (
                        @PartsBlogID,
                        @Title,
                        @Type,
                        @BrandID,
                        @Live,
                        @BlogText,
                        @PersonID,
                        @LiveDate,
                        @ExpirationDate,
                        @CreateDate,
                        @ShowToDealers,
                        @isFullPage,
                        SYSDATETIME(),
                        SYSDATETIME()
                    )
                END
        END
    ELSE
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    UPDATE [PartsBlogs]
                    SET
                    [Title] = @Title,
                    [Type] = @Type,
                    [BrandID] = @BrandID,
                    [Live] = @Live,
                    [BlogText] = @BlogText,
                    [PersonID] = @PersonID,
                    [LiveDate] = @LiveDate,
                    [ExpirationDate] = @ExpirationDate,
                    [CreateDate] = @CreateDate,
                    [ShowToDealers] = @ShowToDealers,
                    [isFullPage] = @isFullPage,
                    [UpdateDateTime__Gen] = SYSDATETIME()
                    WHERE [PartsBlogID] = @PartsBlogID
                END
        END

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__PartsBlogs_Save Succeeded'
Else PRINT 'Procedure Creation: spGen__PartsBlogs_Save Error on Creation'
GO





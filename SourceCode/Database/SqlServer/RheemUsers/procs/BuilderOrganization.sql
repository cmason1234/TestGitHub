/*
'===============================================================================
' Generated by GenerateDataAndObjectLayer Version 1.0.0.0
'
' <auto-generated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated. 
' </auto-generated>
'===============================================================================

*/
USE [RheemUsers]

/* ------------------------------------------------------------
   Get rid of obsolete InsertBuilderOrganization
   Get rid of obsolete UpdateBuilderOrganization
   Get rid of obsolete DeleteBuilderOrganization
   Get rid of obsolete SearchBuilderOrganizationByString
   Get rid of obsolete GetBuilderOrganizationByID
   ------------------------------------------------------------ */
If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('InsertBuilderOrganization') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE InsertBuilderOrganization;
        PRINT 'Dropped InsertBuilderOrganization'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('UpdateBuilderOrganization') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE UpdateBuilderOrganization;
        PRINT 'Dropped UpdateBuilderOrganization'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DeleteBuilderOrganization') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE DeleteBuilderOrganization;
        PRINT 'Dropped DeleteBuilderOrganization'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('SearchBuilderOrganizationByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE SearchBuilderOrganizationByString;
        PRINT 'Dropped SearchBuilderOrganizationByString'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('GetBuilderOrganizationByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE GetBuilderOrganizationByID;
        PRINT 'Dropped GetBuilderOrganizationByID'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__BuilderOrganization_GetByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__BuilderOrganization_GetByID;
        PRINT 'Dropped spGen__BuilderOrganization_GetByID'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__BuilderOrganization_GetByID

   Description:  Selects record(s) from table 'BuilderOrganization'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__BuilderOrganization_GetByID
(
    @BuilderOrganizationID uniqueidentifier

)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int

    Select [BuilderOrganizationID],[BuilderID],[OrganizationID],[PrimaryAddressID],[CorporateEmail],[HomesPerYear],[SystemsPerHome],[BuilderTypeProduction],[BuilderTypeCustom],[BuilderTypeCondo],[VendorNumber],[ModelHomeIncentive],[ProgramType],[Status],[WebSite],[ACBuilder],[WHBuilder],[GeneratorBuilder],[AncillaryProducts],[SupplierNumber],[CreateDateTime__Gen],[UpdateDateTime__Gen],[PayContractor]
    FROM [BuilderOrganization]
    WHERE [BuilderOrganizationID] = @BuilderOrganizationID

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__BuilderOrganization_GetByID Succeeded'
Else PRINT 'Procedure Creation: spGen__BuilderOrganization_GetByID Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__BuilderOrganization_SearchByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__BuilderOrganization_SearchByString;
        PRINT 'Dropped spGen__BuilderOrganization_SearchByString'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__BuilderOrganization_SearchByString

   Description:  Selects a record from table 'BuilderOrganization'
                 And puts values into parameters

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__BuilderOrganization_SearchByString
(
    @searchParam varchar(4000)
)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int
    DECLARE @strSql varchar(4000)

    SET @strSql = ' Select [BuilderOrganizationID],[BuilderID],[OrganizationID],[PrimaryAddressID],[CorporateEmail],[HomesPerYear],[SystemsPerHome],[BuilderTypeProduction],[BuilderTypeCustom],[BuilderTypeCondo],[VendorNumber],[ModelHomeIncentive],[ProgramType],[Status],[WebSite],[ACBuilder],[WHBuilder],[GeneratorBuilder],[AncillaryProducts],[SupplierNumber],[CreateDateTime__Gen],[UpdateDateTime__Gen],[PayContractor]
    FROM [BuilderOrganization]
    WHERE ' +  @searchParam

    EXEC(@strSql)

    --//We should NOT be using exec above.
    --//If params are NOT known, then be sure to clean sql
    --//If params are known, format like example below

    --IF @prodname IS NOT NULL
    --SELECT @sql = @sql + ' ProductName LIKE @prodname'
    --EXEC sp_executesql @sql, N'@prodname varchar(400)',@prodname

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__BuilderOrganization_SearchByString Succeeded'
Else PRINT 'Procedure Creation: spGen__BuilderOrganization_SearchByString Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__BuilderOrganization_Delete') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__BuilderOrganization_Delete;
        PRINT 'Dropped spGen__BuilderOrganization_Delete'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__BuilderOrganization_Delete

   Description:  Deletes a record from table 'BuilderOrganization'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__BuilderOrganization_Delete
(
    @BuilderOrganizationID uniqueidentifier

)
AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN
    DECLARE @Err Int


    DELETE FROM [BuilderOrganization]
    WHERE [BuilderOrganizationID] = @BuilderOrganizationID


End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__BuilderOrganization_Delete Succeeded'
Else PRINT 'Procedure Creation: spGen__BuilderOrganization_Delete Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__BuilderOrganization_Save') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__BuilderOrganization_Save;
        PRINT 'Dropped spGen__BuilderOrganization_Save'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__BuilderOrganization_Save

   Description:  Updates or Deletes a record In table 'BuilderOrganization'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__BuilderOrganization_Save
(
    @ErrText varchar(4000) output,
    @BuilderOrganizationID uniqueidentifier output,
    @BuilderID uniqueidentifier,
    @OrganizationID uniqueidentifier,
    @PrimaryAddressID uniqueidentifier,
    @CorporateEmail varchar(50),
    @HomesPerYear int,
    @SystemsPerHome int,
    @BuilderTypeProduction bit,
    @BuilderTypeCustom bit,
    @BuilderTypeCondo bit,
    @VendorNumber varchar(50),
    @ModelHomeIncentive bit,
    @ProgramType varchar(50),
    @Status varchar(16),
    @WebSite varchar(128),
    @ACBuilder bit,
    @WHBuilder bit,
    @GeneratorBuilder bit,
    @AncillaryProducts bit,
    @SupplierNumber int,
    @PayContractor bit
)

AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN

    DECLARE @UniqueRowCount Int
    IF @BuilderOrganizationID = '00000000-0000-0000-0000-000000000000' SET @BuilderOrganizationID = NULL
    IF @BuilderOrganizationID IS NULL
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    SET @BuilderOrganizationID = NewID()

                    INSERT
                    INTO [BuilderOrganization]
                    (
                        [BuilderOrganizationID],
                        [BuilderID],
                        [OrganizationID],
                        [PrimaryAddressID],
                        [CorporateEmail],
                        [HomesPerYear],
                        [SystemsPerHome],
                        [BuilderTypeProduction],
                        [BuilderTypeCustom],
                        [BuilderTypeCondo],
                        [VendorNumber],
                        [ModelHomeIncentive],
                        [ProgramType],
                        [Status],
                        [WebSite],
                        [ACBuilder],
                        [WHBuilder],
                        [GeneratorBuilder],
                        [AncillaryProducts],
                        [SupplierNumber],
                        [CreateDateTime__Gen],
                        [UpdateDateTime__Gen],
                        [PayContractor]
                    )
                    VALUES
                    (
                        @BuilderOrganizationID,
                        @BuilderID,
                        @OrganizationID,
                        @PrimaryAddressID,
                        @CorporateEmail,
                        @HomesPerYear,
                        @SystemsPerHome,
                        @BuilderTypeProduction,
                        @BuilderTypeCustom,
                        @BuilderTypeCondo,
                        @VendorNumber,
                        @ModelHomeIncentive,
                        @ProgramType,
                        @Status,
                        @WebSite,
                        @ACBuilder,
                        @WHBuilder,
                        @GeneratorBuilder,
                        @AncillaryProducts,
                        @SupplierNumber,
                        SYSDATETIME(),
                        SYSDATETIME(),
                        @PayContractor
                    )
                END
        END
    ELSE
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    UPDATE [BuilderOrganization]
                    SET
                    [BuilderID] = @BuilderID,
                    [OrganizationID] = @OrganizationID,
                    [PrimaryAddressID] = @PrimaryAddressID,
                    [CorporateEmail] = @CorporateEmail,
                    [HomesPerYear] = @HomesPerYear,
                    [SystemsPerHome] = @SystemsPerHome,
                    [BuilderTypeProduction] = @BuilderTypeProduction,
                    [BuilderTypeCustom] = @BuilderTypeCustom,
                    [BuilderTypeCondo] = @BuilderTypeCondo,
                    [VendorNumber] = @VendorNumber,
                    [ModelHomeIncentive] = @ModelHomeIncentive,
                    [ProgramType] = @ProgramType,
                    [Status] = @Status,
                    [WebSite] = @WebSite,
                    [ACBuilder] = @ACBuilder,
                    [WHBuilder] = @WHBuilder,
                    [GeneratorBuilder] = @GeneratorBuilder,
                    [AncillaryProducts] = @AncillaryProducts,
                    [SupplierNumber] = @SupplierNumber,
                    [UpdateDateTime__Gen] = SYSDATETIME(),
                    [PayContractor] = @PayContractor
                    WHERE [BuilderOrganizationID] = @BuilderOrganizationID
                END
        END

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__BuilderOrganization_Save Succeeded'
Else PRINT 'Procedure Creation: spGen__BuilderOrganization_Save Error on Creation'
GO





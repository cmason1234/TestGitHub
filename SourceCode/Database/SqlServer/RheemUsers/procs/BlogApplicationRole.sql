/*
'===============================================================================
' Generated by GenerateDataAndObjectLayer Version 1.0.0.0
'
' <auto-generated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated. 
' </auto-generated>
'===============================================================================

*/
USE [RheemUsers]

/* ------------------------------------------------------------
   Get rid of obsolete InsertBlogApplicationRole
   Get rid of obsolete UpdateBlogApplicationRole
   Get rid of obsolete DeleteBlogApplicationRole
   Get rid of obsolete SearchBlogApplicationRoleByString
   Get rid of obsolete GetBlogApplicationRoleByID
   ------------------------------------------------------------ */
If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('InsertBlogApplicationRole') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE InsertBlogApplicationRole;
        PRINT 'Dropped InsertBlogApplicationRole'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('UpdateBlogApplicationRole') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE UpdateBlogApplicationRole;
        PRINT 'Dropped UpdateBlogApplicationRole'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DeleteBlogApplicationRole') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE DeleteBlogApplicationRole;
        PRINT 'Dropped DeleteBlogApplicationRole'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('SearchBlogApplicationRoleByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE SearchBlogApplicationRoleByString;
        PRINT 'Dropped SearchBlogApplicationRoleByString'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('GetBlogApplicationRoleByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE GetBlogApplicationRoleByID;
        PRINT 'Dropped GetBlogApplicationRoleByID'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__BlogApplicationRole_GetByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__BlogApplicationRole_GetByID;
        PRINT 'Dropped spGen__BlogApplicationRole_GetByID'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__BlogApplicationRole_GetByID

   Description:  Selects record(s) from table 'BlogApplicationRole'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__BlogApplicationRole_GetByID
(
    @BlogApplicationRoleID uniqueidentifier

)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int

    Select [BlogApplicationRoleID],[BlogID],[ApplicationRoleID],[CreateDateTime__Gen],[UpdateDateTime__Gen]
    FROM [BlogApplicationRole]
    WHERE [BlogApplicationRoleID] = @BlogApplicationRoleID

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__BlogApplicationRole_GetByID Succeeded'
Else PRINT 'Procedure Creation: spGen__BlogApplicationRole_GetByID Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__BlogApplicationRole_SearchByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__BlogApplicationRole_SearchByString;
        PRINT 'Dropped spGen__BlogApplicationRole_SearchByString'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__BlogApplicationRole_SearchByString

   Description:  Selects a record from table 'BlogApplicationRole'
                 And puts values into parameters

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__BlogApplicationRole_SearchByString
(
    @searchParam varchar(4000)
)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int
    DECLARE @strSql varchar(4000)

    SET @strSql = ' Select [BlogApplicationRoleID],[BlogID],[ApplicationRoleID],[CreateDateTime__Gen],[UpdateDateTime__Gen]
    FROM [BlogApplicationRole]
    WHERE ' +  @searchParam

    EXEC(@strSql)

    --//We should NOT be using exec above.
    --//If params are NOT known, then be sure to clean sql
    --//If params are known, format like example below

    --IF @prodname IS NOT NULL
    --SELECT @sql = @sql + ' ProductName LIKE @prodname'
    --EXEC sp_executesql @sql, N'@prodname varchar(400)',@prodname

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__BlogApplicationRole_SearchByString Succeeded'
Else PRINT 'Procedure Creation: spGen__BlogApplicationRole_SearchByString Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__BlogApplicationRole_Delete') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__BlogApplicationRole_Delete;
        PRINT 'Dropped spGen__BlogApplicationRole_Delete'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__BlogApplicationRole_Delete

   Description:  Deletes a record from table 'BlogApplicationRole'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__BlogApplicationRole_Delete
(
    @BlogApplicationRoleID uniqueidentifier

)
AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN
    DECLARE @Err Int


    DELETE FROM [BlogApplicationRole]
    WHERE [BlogApplicationRoleID] = @BlogApplicationRoleID


End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__BlogApplicationRole_Delete Succeeded'
Else PRINT 'Procedure Creation: spGen__BlogApplicationRole_Delete Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__BlogApplicationRole_Save') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__BlogApplicationRole_Save;
        PRINT 'Dropped spGen__BlogApplicationRole_Save'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__BlogApplicationRole_Save

   Description:  Updates or Deletes a record In table 'BlogApplicationRole'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__BlogApplicationRole_Save
(
    @ErrText varchar(4000) output,
    @BlogApplicationRoleID uniqueidentifier output,
    @BlogID uniqueidentifier,
    @ApplicationRoleID uniqueidentifier
)

AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN

    DECLARE @UniqueRowCount Int
    IF @BlogApplicationRoleID = '00000000-0000-0000-0000-000000000000' SET @BlogApplicationRoleID = NULL
    IF @BlogApplicationRoleID IS NULL
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    SET @BlogApplicationRoleID = NewID()

                    INSERT
                    INTO [BlogApplicationRole]
                    (
                        [BlogApplicationRoleID],
                        [BlogID],
                        [ApplicationRoleID],
                        [CreateDateTime__Gen],
                        [UpdateDateTime__Gen]
                    )
                    VALUES
                    (
                        @BlogApplicationRoleID,
                        @BlogID,
                        @ApplicationRoleID,
                        SYSDATETIME(),
                        SYSDATETIME()
                    )
                END
        END
    ELSE
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    UPDATE [BlogApplicationRole]
                    SET
                    [BlogID] = @BlogID,
                    [ApplicationRoleID] = @ApplicationRoleID,
                    [UpdateDateTime__Gen] = SYSDATETIME()
                    WHERE [BlogApplicationRoleID] = @BlogApplicationRoleID
                END
        END

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__BlogApplicationRole_Save Succeeded'
Else PRINT 'Procedure Creation: spGen__BlogApplicationRole_Save Error on Creation'
GO





/*
'===============================================================================
' Generated by GenerateDataAndObjectLayer Version 1.0.0.0
'
' <auto-generated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated. 
' </auto-generated>
'===============================================================================

*/
USE [RheemUsers]

/* ------------------------------------------------------------
   Get rid of obsolete InsertCountry
   Get rid of obsolete UpdateCountry
   Get rid of obsolete DeleteCountry
   Get rid of obsolete SearchCountryByString
   Get rid of obsolete GetCountryByID
   ------------------------------------------------------------ */
If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('InsertCountry') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE InsertCountry;
        PRINT 'Dropped InsertCountry'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('UpdateCountry') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE UpdateCountry;
        PRINT 'Dropped UpdateCountry'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DeleteCountry') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE DeleteCountry;
        PRINT 'Dropped DeleteCountry'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('SearchCountryByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE SearchCountryByString;
        PRINT 'Dropped SearchCountryByString'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('GetCountryByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE GetCountryByID;
        PRINT 'Dropped GetCountryByID'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__Country_GetByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__Country_GetByID;
        PRINT 'Dropped spGen__Country_GetByID'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__Country_GetByID

   Description:  Selects record(s) from table 'Country'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__Country_GetByID
(
    @CountryID uniqueidentifier

)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int

    Select [CountryID],[Country],[CountryCode],[Disabled],[CreateDateTime__Gen],[UpdateDateTime__Gen]
    FROM [Country]
    WHERE [CountryID] = @CountryID

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__Country_GetByID Succeeded'
Else PRINT 'Procedure Creation: spGen__Country_GetByID Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__Country_SearchByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__Country_SearchByString;
        PRINT 'Dropped spGen__Country_SearchByString'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__Country_SearchByString

   Description:  Selects a record from table 'Country'
                 And puts values into parameters

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__Country_SearchByString
(
    @searchParam varchar(4000)
)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int
    DECLARE @strSql varchar(4000)

    SET @strSql = ' Select [CountryID],[Country],[CountryCode],[Disabled],[CreateDateTime__Gen],[UpdateDateTime__Gen]
    FROM [Country]
    WHERE ' +  @searchParam

    EXEC(@strSql)

    --//We should NOT be using exec above.
    --//If params are NOT known, then be sure to clean sql
    --//If params are known, format like example below

    --IF @prodname IS NOT NULL
    --SELECT @sql = @sql + ' ProductName LIKE @prodname'
    --EXEC sp_executesql @sql, N'@prodname varchar(400)',@prodname

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__Country_SearchByString Succeeded'
Else PRINT 'Procedure Creation: spGen__Country_SearchByString Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__Country_Delete') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__Country_Delete;
        PRINT 'Dropped spGen__Country_Delete'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__Country_Delete

   Description:  Deletes a record from table 'Country'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__Country_Delete
(
    @CountryID uniqueidentifier

)
AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN
    DECLARE @Err Int


    DELETE FROM [Country]
    WHERE [CountryID] = @CountryID


End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__Country_Delete Succeeded'
Else PRINT 'Procedure Creation: spGen__Country_Delete Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__Country_Save') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__Country_Save;
        PRINT 'Dropped spGen__Country_Save'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__Country_Save

   Description:  Updates or Deletes a record In table 'Country'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__Country_Save
(
    @ErrText varchar(4000) output,
    @CountryID uniqueidentifier output,
    @Country varchar(50),
    @CountryCode varchar(2),
    @Disabled bit
)

AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN

    DECLARE @UniqueRowCount Int
    IF @CountryID = '00000000-0000-0000-0000-000000000000' SET @CountryID = NULL
    IF @CountryID IS NULL
        BEGIN
            SELECT @UniqueRowCount = COUNT(1) FROM [Country] where [CountryCode] = @CountryCode 
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = 'CountryCode ' + Convert(varchar(36), @CountryCode) + ' already exists'
                END
            ELSE
                BEGIN
                    SET @CountryID = NewID()

                    INSERT
                    INTO [Country]
                    (
                        [CountryID],
                        [Country],
                        [CountryCode],
                        [Disabled],
                        [CreateDateTime__Gen],
                        [UpdateDateTime__Gen]
                    )
                    VALUES
                    (
                        @CountryID,
                        @Country,
                        @CountryCode,
                        @Disabled,
                        SYSDATETIME(),
                        SYSDATETIME()
                    )
                END
        END
    ELSE
        BEGIN
            -- check to see that there isn't another row like this one (assuming the unique index column(s) might have changed)
            SELECT @UniqueRowCount = COUNT(1) FROM [Country] where [CountryCode] = @CountryCode  and [CountryID] <> @CountryID
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = 'CountryCode ' + Convert(varchar(36), @CountryCode) + ' already exists'
                END
            ELSE
                BEGIN
                    UPDATE [Country]
                    SET
                    [Country] = @Country,
                    [CountryCode] = @CountryCode,
                    [Disabled] = @Disabled,
                    [UpdateDateTime__Gen] = SYSDATETIME()
                    WHERE [CountryID] = @CountryID
                END
        END

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__Country_Save Succeeded'
Else PRINT 'Procedure Creation: spGen__Country_Save Error on Creation'
GO





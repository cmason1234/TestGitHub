/*
'===============================================================================
' Generated by GenerateDataAndObjectLayer Version 1.0.0.0
'
' <auto-generated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated. 
' </auto-generated>
'===============================================================================

*/
USE [RheemUsers]

/* ------------------------------------------------------------
   Get rid of obsolete InsertContractorPoolSpa
   Get rid of obsolete UpdateContractorPoolSpa
   Get rid of obsolete DeleteContractorPoolSpa
   Get rid of obsolete SearchContractorPoolSpaByString
   Get rid of obsolete GetContractorPoolSpaByID
   ------------------------------------------------------------ */
If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('InsertContractorPoolSpa') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE InsertContractorPoolSpa;
        PRINT 'Dropped InsertContractorPoolSpa'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('UpdateContractorPoolSpa') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE UpdateContractorPoolSpa;
        PRINT 'Dropped UpdateContractorPoolSpa'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DeleteContractorPoolSpa') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE DeleteContractorPoolSpa;
        PRINT 'Dropped DeleteContractorPoolSpa'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('SearchContractorPoolSpaByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE SearchContractorPoolSpaByString;
        PRINT 'Dropped SearchContractorPoolSpaByString'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('GetContractorPoolSpaByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE GetContractorPoolSpaByID;
        PRINT 'Dropped GetContractorPoolSpaByID'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__ContractorPoolSpa_GetByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__ContractorPoolSpa_GetByID;
        PRINT 'Dropped spGen__ContractorPoolSpa_GetByID'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__ContractorPoolSpa_GetByID

   Description:  Selects record(s) from table 'ContractorPoolSpa'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__ContractorPoolSpa_GetByID
(
    @ContractorPoolSpaID uniqueidentifier

)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int

    Select [ContractorPoolSpaID],[OrganizationID],[DistributorOrganizationID],[ShowOnLocator],[PoolSpaNumber],[Disabled],[WarrantyServiceProvider],[HeatPumpServiceProvider],[GasPoolHeaterServiceProvider],[CreateDateTime__Gen],[UpdateDateTime__Gen],[GasWarrantyStation],[HeatPumpWarrantyStation]
    FROM [ContractorPoolSpa]
    WHERE [ContractorPoolSpaID] = @ContractorPoolSpaID

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__ContractorPoolSpa_GetByID Succeeded'
Else PRINT 'Procedure Creation: spGen__ContractorPoolSpa_GetByID Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__ContractorPoolSpa_SearchByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__ContractorPoolSpa_SearchByString;
        PRINT 'Dropped spGen__ContractorPoolSpa_SearchByString'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__ContractorPoolSpa_SearchByString

   Description:  Selects a record from table 'ContractorPoolSpa'
                 And puts values into parameters

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__ContractorPoolSpa_SearchByString
(
    @searchParam varchar(4000)
)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int
    DECLARE @strSql varchar(4000)

    SET @strSql = ' Select [ContractorPoolSpaID],[OrganizationID],[DistributorOrganizationID],[ShowOnLocator],[PoolSpaNumber],[Disabled],[WarrantyServiceProvider],[HeatPumpServiceProvider],[GasPoolHeaterServiceProvider],[CreateDateTime__Gen],[UpdateDateTime__Gen],[GasWarrantyStation],[HeatPumpWarrantyStation]
    FROM [ContractorPoolSpa]
    WHERE ' +  @searchParam

    EXEC(@strSql)

    --//We should NOT be using exec above.
    --//If params are NOT known, then be sure to clean sql
    --//If params are known, format like example below

    --IF @prodname IS NOT NULL
    --SELECT @sql = @sql + ' ProductName LIKE @prodname'
    --EXEC sp_executesql @sql, N'@prodname varchar(400)',@prodname

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__ContractorPoolSpa_SearchByString Succeeded'
Else PRINT 'Procedure Creation: spGen__ContractorPoolSpa_SearchByString Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__ContractorPoolSpa_Delete') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__ContractorPoolSpa_Delete;
        PRINT 'Dropped spGen__ContractorPoolSpa_Delete'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__ContractorPoolSpa_Delete

   Description:  Deletes a record from table 'ContractorPoolSpa'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__ContractorPoolSpa_Delete
(
    @ContractorPoolSpaID uniqueidentifier

)
AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN
    DECLARE @Err Int


    DELETE FROM [ContractorPoolSpa]
    WHERE [ContractorPoolSpaID] = @ContractorPoolSpaID


End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__ContractorPoolSpa_Delete Succeeded'
Else PRINT 'Procedure Creation: spGen__ContractorPoolSpa_Delete Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__ContractorPoolSpa_Save') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__ContractorPoolSpa_Save;
        PRINT 'Dropped spGen__ContractorPoolSpa_Save'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__ContractorPoolSpa_Save

   Description:  Updates or Deletes a record In table 'ContractorPoolSpa'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__ContractorPoolSpa_Save
(
    @ErrText varchar(4000) output,
    @ContractorPoolSpaID uniqueidentifier output,
    @OrganizationID uniqueidentifier,
    @DistributorOrganizationID uniqueidentifier,
    @ShowOnLocator bit,
    @PoolSpaNumber int,
    @Disabled bit,
    @WarrantyServiceProvider bit,
    @HeatPumpServiceProvider bit,
    @GasPoolHeaterServiceProvider bit,
    @GasWarrantyStation bit,
    @HeatPumpWarrantyStation bit
)

AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN

    DECLARE @UniqueRowCount Int
    IF @ContractorPoolSpaID = '00000000-0000-0000-0000-000000000000' SET @ContractorPoolSpaID = NULL
    IF @ContractorPoolSpaID IS NULL
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    SET @ContractorPoolSpaID = NewID()

                    INSERT
                    INTO [ContractorPoolSpa]
                    (
                        [ContractorPoolSpaID],
                        [OrganizationID],
                        [DistributorOrganizationID],
                        [ShowOnLocator],
                        [PoolSpaNumber],
                        [Disabled],
                        [WarrantyServiceProvider],
                        [HeatPumpServiceProvider],
                        [GasPoolHeaterServiceProvider],
                        [CreateDateTime__Gen],
                        [UpdateDateTime__Gen],
                        [GasWarrantyStation],
                        [HeatPumpWarrantyStation]
                    )
                    VALUES
                    (
                        @ContractorPoolSpaID,
                        @OrganizationID,
                        @DistributorOrganizationID,
                        @ShowOnLocator,
                        @PoolSpaNumber,
                        @Disabled,
                        @WarrantyServiceProvider,
                        @HeatPumpServiceProvider,
                        @GasPoolHeaterServiceProvider,
                        SYSDATETIME(),
                        SYSDATETIME(),
                        @GasWarrantyStation,
                        @HeatPumpWarrantyStation
                    )
                END
        END
    ELSE
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    UPDATE [ContractorPoolSpa]
                    SET
                    [OrganizationID] = @OrganizationID,
                    [DistributorOrganizationID] = @DistributorOrganizationID,
                    [ShowOnLocator] = @ShowOnLocator,
                    [PoolSpaNumber] = @PoolSpaNumber,
                    [Disabled] = @Disabled,
                    [WarrantyServiceProvider] = @WarrantyServiceProvider,
                    [HeatPumpServiceProvider] = @HeatPumpServiceProvider,
                    [GasPoolHeaterServiceProvider] = @GasPoolHeaterServiceProvider,
                    [UpdateDateTime__Gen] = SYSDATETIME(),
                    [GasWarrantyStation] = @GasWarrantyStation,
                    [HeatPumpWarrantyStation] = @HeatPumpWarrantyStation
                    WHERE [ContractorPoolSpaID] = @ContractorPoolSpaID
                END
        END

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__ContractorPoolSpa_Save Succeeded'
Else PRINT 'Procedure Creation: spGen__ContractorPoolSpa_Save Error on Creation'
GO





/*
'===============================================================================
' Generated by GenerateDataAndObjectLayer Version 1.0.0.0
'
' <auto-generated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated. 
' </auto-generated>
'===============================================================================

*/
USE [RheemUsers]

/* ------------------------------------------------------------
   Get rid of obsolete InsertDepartment
   Get rid of obsolete UpdateDepartment
   Get rid of obsolete DeleteDepartment
   Get rid of obsolete SearchDepartmentByString
   Get rid of obsolete GetDepartmentByID
   ------------------------------------------------------------ */
If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('InsertDepartment') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE InsertDepartment;
        PRINT 'Dropped InsertDepartment'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('UpdateDepartment') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE UpdateDepartment;
        PRINT 'Dropped UpdateDepartment'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DeleteDepartment') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE DeleteDepartment;
        PRINT 'Dropped DeleteDepartment'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('SearchDepartmentByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE SearchDepartmentByString;
        PRINT 'Dropped SearchDepartmentByString'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('GetDepartmentByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE GetDepartmentByID;
        PRINT 'Dropped GetDepartmentByID'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__Department_GetByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__Department_GetByID;
        PRINT 'Dropped spGen__Department_GetByID'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__Department_GetByID

   Description:  Selects record(s) from table 'Department'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__Department_GetByID
(
    @DepartmentID uniqueidentifier

)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int

    Select [DepartmentID],[SequenceNumber],[DepartmentName],[LegacyCode],[CreateDateTime__Gen],[UpdateDateTime__Gen]
    FROM [Department]
    WHERE [DepartmentID] = @DepartmentID

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__Department_GetByID Succeeded'
Else PRINT 'Procedure Creation: spGen__Department_GetByID Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__Department_SearchByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__Department_SearchByString;
        PRINT 'Dropped spGen__Department_SearchByString'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__Department_SearchByString

   Description:  Selects a record from table 'Department'
                 And puts values into parameters

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__Department_SearchByString
(
    @searchParam varchar(4000)
)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int
    DECLARE @strSql varchar(4000)

    SET @strSql = ' Select [DepartmentID],[SequenceNumber],[DepartmentName],[LegacyCode],[CreateDateTime__Gen],[UpdateDateTime__Gen]
    FROM [Department]
    WHERE ' +  @searchParam

    EXEC(@strSql)

    --//We should NOT be using exec above.
    --//If params are NOT known, then be sure to clean sql
    --//If params are known, format like example below

    --IF @prodname IS NOT NULL
    --SELECT @sql = @sql + ' ProductName LIKE @prodname'
    --EXEC sp_executesql @sql, N'@prodname varchar(400)',@prodname

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__Department_SearchByString Succeeded'
Else PRINT 'Procedure Creation: spGen__Department_SearchByString Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__Department_Delete') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__Department_Delete;
        PRINT 'Dropped spGen__Department_Delete'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__Department_Delete

   Description:  Deletes a record from table 'Department'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__Department_Delete
(
    @DepartmentID uniqueidentifier

)
AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN
    DECLARE @Err Int


    DELETE FROM [Department]
    WHERE [DepartmentID] = @DepartmentID


End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__Department_Delete Succeeded'
Else PRINT 'Procedure Creation: spGen__Department_Delete Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__Department_Save') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__Department_Save;
        PRINT 'Dropped spGen__Department_Save'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__Department_Save

   Description:  Updates or Deletes a record In table 'Department'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__Department_Save
(
    @ErrText varchar(4000) output,
    @DepartmentID uniqueidentifier output,
    @SequenceNumber int,
    @DepartmentName varchar(50),
    @LegacyCode int
)

AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN

    DECLARE @UniqueRowCount Int
    IF @DepartmentID = '00000000-0000-0000-0000-000000000000' SET @DepartmentID = NULL
    IF @DepartmentID IS NULL
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    SET @DepartmentID = NewID()

                    INSERT
                    INTO [Department]
                    (
                        [DepartmentID],
                        [SequenceNumber],
                        [DepartmentName],
                        [LegacyCode],
                        [CreateDateTime__Gen],
                        [UpdateDateTime__Gen]
                    )
                    VALUES
                    (
                        @DepartmentID,
                        @SequenceNumber,
                        @DepartmentName,
                        @LegacyCode,
                        SYSDATETIME(),
                        SYSDATETIME()
                    )
                END
        END
    ELSE
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    UPDATE [Department]
                    SET
                    [SequenceNumber] = @SequenceNumber,
                    [DepartmentName] = @DepartmentName,
                    [LegacyCode] = @LegacyCode,
                    [UpdateDateTime__Gen] = SYSDATETIME()
                    WHERE [DepartmentID] = @DepartmentID
                END
        END

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__Department_Save Succeeded'
Else PRINT 'Procedure Creation: spGen__Department_Save Error on Creation'
GO





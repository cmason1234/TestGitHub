
USE [rheemusers]
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SearchBusinessCardAddressByStringForList]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[SearchBusinessCardAddressByStringForList]
GO


GO
/****** Object:  StoredProcedure [dbo].[SearchBusinessCardAddressByStringForList]    Script Date: 08/17/2011 12:37:25 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/* ------------------------------------------------------------
   PROCEDURE:    SearchBusinessCardAddressByStringForList
   
   Description:  Selects a record from table 'BusinessCardAddress'
   				 And puts values into parameters
   
   AUTHOR:       Rheem Manufacturing, Brian White - 7/13/2011 10:17:48 AM
   
   Generated by MyGeneration Version 1.3.0.9
   ------------------------------------------------------------ */

CREATE PROCEDURE [dbo].[SearchBusinessCardAddressByStringForList]
(
	@searchParam varchar(4000)
)
As
BEGIN
	SET NOCOUNT ON
	SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
	
	DECLARE @Err Int
	DECLARE @strSql varchar(4000)
	
	SET @strSql = '	SELECT     dbo.BusinessCardAddress.BusinessCardAddressID, dbo.BusinessCardAddress.BrandID, dbo.BusinessCardAddress.Title, dbo.BusinessCardAddress.AddressTitle, 
    dbo.BusinessCardAddress.Address1, dbo.BusinessCardAddress.Address2, dbo.BusinessCardAddress.City, dbo.BusinessCardAddress.State, 
    dbo.BusinessCardAddress.PostalCode, rheemdb.dbo.Brand.BrandName
	FROM         dbo.BusinessCardAddress INNER JOIN
    rheemdb.dbo.Brand ON dbo.BusinessCardAddress.BrandID = rheemdb.dbo.Brand.BrandID
	WHERE ' +  @searchParam

	EXEC(@strSql)
	
	--//We should NOT be using exec above.
	--//If params are NOT known, then be sure to clean sql
	--//If params are known, format like example below
	
	--IF @prodname IS NOT NULL
	--SELECT @sql = @sql + ' ProductName LIKE @prodname'
	--EXEC sp_executesql @sql, N'@prodname varchar(400)',@prodname
End

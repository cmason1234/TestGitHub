/*
'===============================================================================
' Generated by GenerateDataAndObjectLayer Version 1.0.0.0
'
' <auto-generated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated. 
' </auto-generated>
'===============================================================================

*/
USE [Products]

/* ------------------------------------------------------------
   Get rid of obsolete InsertMyLiteratureAddendum
   Get rid of obsolete UpdateMyLiteratureAddendum
   Get rid of obsolete DeleteMyLiteratureAddendum
   Get rid of obsolete SearchMyLiteratureAddendumByString
   Get rid of obsolete GetMyLiteratureAddendumByID
   ------------------------------------------------------------ */
If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('InsertMyLiteratureAddendum') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE InsertMyLiteratureAddendum;
        PRINT 'Dropped InsertMyLiteratureAddendum'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('UpdateMyLiteratureAddendum') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE UpdateMyLiteratureAddendum;
        PRINT 'Dropped UpdateMyLiteratureAddendum'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DeleteMyLiteratureAddendum') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE DeleteMyLiteratureAddendum;
        PRINT 'Dropped DeleteMyLiteratureAddendum'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('SearchMyLiteratureAddendumByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE SearchMyLiteratureAddendumByString;
        PRINT 'Dropped SearchMyLiteratureAddendumByString'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('GetMyLiteratureAddendumByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE GetMyLiteratureAddendumByID;
        PRINT 'Dropped GetMyLiteratureAddendumByID'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__MyLiteratureAddendum_GetByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__MyLiteratureAddendum_GetByID;
        PRINT 'Dropped spGen__MyLiteratureAddendum_GetByID'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__MyLiteratureAddendum_GetByID

   Description:  Selects record(s) from table 'MyLiteratureAddendum'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__MyLiteratureAddendum_GetByID
(
    @MyLiteratureAddendumID uniqueidentifier

)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int

    Select [MyLiteratureAddendumID],[LiteratureRequestID],[FileUrl],[AddendumName],[CreateDateTime__Gen],[UpdateDateTime__Gen]
    FROM [MyLiteratureAddendum]
    WHERE [MyLiteratureAddendumID] = @MyLiteratureAddendumID

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__MyLiteratureAddendum_GetByID Succeeded'
Else PRINT 'Procedure Creation: spGen__MyLiteratureAddendum_GetByID Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__MyLiteratureAddendum_SearchByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__MyLiteratureAddendum_SearchByString;
        PRINT 'Dropped spGen__MyLiteratureAddendum_SearchByString'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__MyLiteratureAddendum_SearchByString

   Description:  Selects a record from table 'MyLiteratureAddendum'
                 And puts values into parameters

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__MyLiteratureAddendum_SearchByString
(
    @searchParam varchar(8000)
)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int
    DECLARE @strSql varchar(8000)

    SET @strSql = ' Select [MyLiteratureAddendumID],[LiteratureRequestID],[FileUrl],[AddendumName],[CreateDateTime__Gen],[UpdateDateTime__Gen]
    FROM [MyLiteratureAddendum]
    WHERE ' +  @searchParam

    EXEC(@strSql)

    --//We should NOT be using exec above.
    --//If params are NOT known, then be sure to clean sql
    --//If params are known, format like example below

    --IF @prodname IS NOT NULL
    --SELECT @sql = @sql + ' ProductName LIKE @prodname'
    --EXEC sp_executesql @sql, N'@prodname varchar(400)',@prodname

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__MyLiteratureAddendum_SearchByString Succeeded'
Else PRINT 'Procedure Creation: spGen__MyLiteratureAddendum_SearchByString Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__MyLiteratureAddendum_Delete') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__MyLiteratureAddendum_Delete;
        PRINT 'Dropped spGen__MyLiteratureAddendum_Delete'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__MyLiteratureAddendum_Delete

   Description:  Deletes a record from table 'MyLiteratureAddendum'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__MyLiteratureAddendum_Delete
(
    @MyLiteratureAddendumID uniqueidentifier

)
AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN
    DECLARE @Err Int


    DELETE FROM [MyLiteratureAddendum]
    WHERE [MyLiteratureAddendumID] = @MyLiteratureAddendumID


End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__MyLiteratureAddendum_Delete Succeeded'
Else PRINT 'Procedure Creation: spGen__MyLiteratureAddendum_Delete Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__MyLiteratureAddendum_Save') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__MyLiteratureAddendum_Save;
        PRINT 'Dropped spGen__MyLiteratureAddendum_Save'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__MyLiteratureAddendum_Save

   Description:  Updates or Deletes a record In table 'MyLiteratureAddendum'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__MyLiteratureAddendum_Save
(
    @ErrText varchar(4000) output,
    @MyLiteratureAddendumID uniqueidentifier output,
    @LiteratureRequestID uniqueidentifier,
    @FileUrl varchar(255),
    @AddendumName varchar(50)
)

AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN

    DECLARE @UniqueRowCount Int
    IF @MyLiteratureAddendumID = '00000000-0000-0000-0000-000000000000' SET @MyLiteratureAddendumID = NULL
    IF @MyLiteratureAddendumID IS NULL
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    SET @MyLiteratureAddendumID = NewID()

                    INSERT
                    INTO [MyLiteratureAddendum]
                    (
                        [MyLiteratureAddendumID],
                        [LiteratureRequestID],
                        [FileUrl],
                        [AddendumName],
                        [CreateDateTime__Gen],
                        [UpdateDateTime__Gen]
                    )
                    VALUES
                    (
                        @MyLiteratureAddendumID,
                        @LiteratureRequestID,
                        @FileUrl,
                        @AddendumName,
                        SYSDATETIME(),
                        SYSDATETIME()
                    )
                END
        END
    ELSE
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    UPDATE [MyLiteratureAddendum]
                    SET
                    [LiteratureRequestID] = @LiteratureRequestID,
                    [FileUrl] = @FileUrl,
                    [AddendumName] = @AddendumName,
                    [UpdateDateTime__Gen] = SYSDATETIME()
                    WHERE [MyLiteratureAddendumID] = @MyLiteratureAddendumID
                END
        END

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__MyLiteratureAddendum_Save Succeeded'
Else PRINT 'Procedure Creation: spGen__MyLiteratureAddendum_Save Error on Creation'
GO





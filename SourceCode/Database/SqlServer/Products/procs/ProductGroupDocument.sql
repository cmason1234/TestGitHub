/*
'===============================================================================
' Generated by GenerateDataAndObjectLayer Version 1.0.0.0
'
' <auto-generated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated. 
' </auto-generated>
'===============================================================================

*/
USE [Products]

/* ------------------------------------------------------------
   Get rid of obsolete InsertProductGroupDocument
   Get rid of obsolete UpdateProductGroupDocument
   Get rid of obsolete DeleteProductGroupDocument
   Get rid of obsolete SearchProductGroupDocumentByString
   Get rid of obsolete GetProductGroupDocumentByID
   ------------------------------------------------------------ */
If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('InsertProductGroupDocument') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE InsertProductGroupDocument;
        PRINT 'Dropped InsertProductGroupDocument'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('UpdateProductGroupDocument') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE UpdateProductGroupDocument;
        PRINT 'Dropped UpdateProductGroupDocument'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DeleteProductGroupDocument') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE DeleteProductGroupDocument;
        PRINT 'Dropped DeleteProductGroupDocument'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('SearchProductGroupDocumentByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE SearchProductGroupDocumentByString;
        PRINT 'Dropped SearchProductGroupDocumentByString'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('GetProductGroupDocumentByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE GetProductGroupDocumentByID;
        PRINT 'Dropped GetProductGroupDocumentByID'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__ProductGroupDocument_GetByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__ProductGroupDocument_GetByID;
        PRINT 'Dropped spGen__ProductGroupDocument_GetByID'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__ProductGroupDocument_GetByID

   Description:  Selects record(s) from table 'ProductGroupDocument'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__ProductGroupDocument_GetByID
(
    @ProductGroupDocumentID uniqueidentifier

)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int

    Select [ProductGroupDocumentID],[ProductGroupID],[DocumentID],[PairingType],[CreateDateTime__Gen],[UpdateDateTime__Gen]
    FROM [ProductGroupDocument]
    WHERE [ProductGroupDocumentID] = @ProductGroupDocumentID

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__ProductGroupDocument_GetByID Succeeded'
Else PRINT 'Procedure Creation: spGen__ProductGroupDocument_GetByID Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__ProductGroupDocument_SearchByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__ProductGroupDocument_SearchByString;
        PRINT 'Dropped spGen__ProductGroupDocument_SearchByString'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__ProductGroupDocument_SearchByString

   Description:  Selects a record from table 'ProductGroupDocument'
                 And puts values into parameters

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__ProductGroupDocument_SearchByString
(
    @searchParam varchar(4000)
)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int
    DECLARE @strSql varchar(4000)

    SET @strSql = ' Select [ProductGroupDocumentID],[ProductGroupID],[DocumentID],[PairingType],[CreateDateTime__Gen],[UpdateDateTime__Gen]
    FROM [ProductGroupDocument]
    WHERE ' +  @searchParam

    EXEC(@strSql)

    --//We should NOT be using exec above.
    --//If params are NOT known, then be sure to clean sql
    --//If params are known, format like example below

    --IF @prodname IS NOT NULL
    --SELECT @sql = @sql + ' ProductName LIKE @prodname'
    --EXEC sp_executesql @sql, N'@prodname varchar(400)',@prodname

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__ProductGroupDocument_SearchByString Succeeded'
Else PRINT 'Procedure Creation: spGen__ProductGroupDocument_SearchByString Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__ProductGroupDocument_Delete') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__ProductGroupDocument_Delete;
        PRINT 'Dropped spGen__ProductGroupDocument_Delete'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__ProductGroupDocument_Delete

   Description:  Deletes a record from table 'ProductGroupDocument'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__ProductGroupDocument_Delete
(
    @ProductGroupDocumentID uniqueidentifier

)
AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN
    DECLARE @Err Int


    DELETE FROM [ProductGroupDocument]
    WHERE [ProductGroupDocumentID] = @ProductGroupDocumentID


End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__ProductGroupDocument_Delete Succeeded'
Else PRINT 'Procedure Creation: spGen__ProductGroupDocument_Delete Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__ProductGroupDocument_Save') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__ProductGroupDocument_Save;
        PRINT 'Dropped spGen__ProductGroupDocument_Save'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__ProductGroupDocument_Save

   Description:  Updates or Deletes a record In table 'ProductGroupDocument'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__ProductGroupDocument_Save
(
    @ErrText varchar(4000) output,
    @ProductGroupDocumentID uniqueidentifier output,
    @ProductGroupID uniqueidentifier,
    @DocumentID uniqueidentifier,
    @PairingType varchar(50)
)

AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN

    DECLARE @UniqueRowCount Int
    IF @ProductGroupDocumentID = '00000000-0000-0000-0000-000000000000' SET @ProductGroupDocumentID = NULL
    IF @ProductGroupDocumentID IS NULL
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    SET @ProductGroupDocumentID = NewID()

                    INSERT
                    INTO [ProductGroupDocument]
                    (
                        [ProductGroupDocumentID],
                        [ProductGroupID],
                        [DocumentID],
                        [PairingType],
                        [CreateDateTime__Gen],
                        [UpdateDateTime__Gen]
                    )
                    VALUES
                    (
                        @ProductGroupDocumentID,
                        @ProductGroupID,
                        @DocumentID,
                        @PairingType,
                        SYSDATETIME(),
                        SYSDATETIME()
                    )
                END
        END
    ELSE
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    UPDATE [ProductGroupDocument]
                    SET
                    [ProductGroupID] = @ProductGroupID,
                    [DocumentID] = @DocumentID,
                    [PairingType] = @PairingType,
                    [UpdateDateTime__Gen] = SYSDATETIME()
                    WHERE [ProductGroupDocumentID] = @ProductGroupDocumentID
                END
        END

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__ProductGroupDocument_Save Succeeded'
Else PRINT 'Procedure Creation: spGen__ProductGroupDocument_Save Error on Creation'
GO





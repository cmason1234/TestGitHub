/*
'===============================================================================
' Generated by GenerateDataAndObjectLayer Version 1.0.0.0
'
' <auto-generated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated. 
' </auto-generated>
'===============================================================================

*/
USE [Products]

/* ------------------------------------------------------------
   Get rid of obsolete InsertProductProductGroup
   Get rid of obsolete UpdateProductProductGroup
   Get rid of obsolete DeleteProductProductGroup
   Get rid of obsolete SearchProductProductGroupByString
   Get rid of obsolete GetProductProductGroupByID
   ------------------------------------------------------------ */
If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('InsertProductProductGroup') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE InsertProductProductGroup;
        PRINT 'Dropped InsertProductProductGroup'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('UpdateProductProductGroup') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE UpdateProductProductGroup;
        PRINT 'Dropped UpdateProductProductGroup'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DeleteProductProductGroup') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE DeleteProductProductGroup;
        PRINT 'Dropped DeleteProductProductGroup'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('SearchProductProductGroupByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE SearchProductProductGroupByString;
        PRINT 'Dropped SearchProductProductGroupByString'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('GetProductProductGroupByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE GetProductProductGroupByID;
        PRINT 'Dropped GetProductProductGroupByID'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__ProductProductGroup_GetByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__ProductProductGroup_GetByID;
        PRINT 'Dropped spGen__ProductProductGroup_GetByID'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__ProductProductGroup_GetByID

   Description:  Selects record(s) from table 'ProductProductGroup'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__ProductProductGroup_GetByID
(
    @ProductProductGroupID uniqueidentifier

)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int

    Select [ProductProductGroupID],[ProductID],[ProductGroupID],[CreateDateTime__Gen],[UpdateDateTime__Gen]
    FROM [ProductProductGroup]
    WHERE [ProductProductGroupID] = @ProductProductGroupID

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__ProductProductGroup_GetByID Succeeded'
Else PRINT 'Procedure Creation: spGen__ProductProductGroup_GetByID Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__ProductProductGroup_SearchByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__ProductProductGroup_SearchByString;
        PRINT 'Dropped spGen__ProductProductGroup_SearchByString'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__ProductProductGroup_SearchByString

   Description:  Selects a record from table 'ProductProductGroup'
                 And puts values into parameters

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__ProductProductGroup_SearchByString
(
    @searchParam varchar(4000)
)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int
    DECLARE @strSql varchar(4000)

    SET @strSql = ' Select [ProductProductGroupID],[ProductID],[ProductGroupID],[CreateDateTime__Gen],[UpdateDateTime__Gen]
    FROM [ProductProductGroup]
    WHERE ' +  @searchParam

    EXEC(@strSql)

    --//We should NOT be using exec above.
    --//If params are NOT known, then be sure to clean sql
    --//If params are known, format like example below

    --IF @prodname IS NOT NULL
    --SELECT @sql = @sql + ' ProductName LIKE @prodname'
    --EXEC sp_executesql @sql, N'@prodname varchar(400)',@prodname

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__ProductProductGroup_SearchByString Succeeded'
Else PRINT 'Procedure Creation: spGen__ProductProductGroup_SearchByString Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__ProductProductGroup_Delete') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__ProductProductGroup_Delete;
        PRINT 'Dropped spGen__ProductProductGroup_Delete'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__ProductProductGroup_Delete

   Description:  Deletes a record from table 'ProductProductGroup'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__ProductProductGroup_Delete
(
    @ProductProductGroupID uniqueidentifier

)
AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN
    DECLARE @Err Int


    DELETE FROM [ProductProductGroup]
    WHERE [ProductProductGroupID] = @ProductProductGroupID


End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__ProductProductGroup_Delete Succeeded'
Else PRINT 'Procedure Creation: spGen__ProductProductGroup_Delete Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__ProductProductGroup_Save') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__ProductProductGroup_Save;
        PRINT 'Dropped spGen__ProductProductGroup_Save'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__ProductProductGroup_Save

   Description:  Updates or Deletes a record In table 'ProductProductGroup'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__ProductProductGroup_Save
(
    @ErrText varchar(4000) output,
    @ProductProductGroupID uniqueidentifier output,
    @ProductID uniqueidentifier,
    @ProductGroupID uniqueidentifier
)

AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN

    DECLARE @UniqueRowCount Int
    IF @ProductProductGroupID = '00000000-0000-0000-0000-000000000000' SET @ProductProductGroupID = NULL
    IF @ProductProductGroupID IS NULL
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    SET @ProductProductGroupID = NewID()

                    INSERT
                    INTO [ProductProductGroup]
                    (
                        [ProductProductGroupID],
                        [ProductID],
                        [ProductGroupID],
                        [CreateDateTime__Gen],
                        [UpdateDateTime__Gen]
                    )
                    VALUES
                    (
                        @ProductProductGroupID,
                        @ProductID,
                        @ProductGroupID,
                        SYSDATETIME(),
                        SYSDATETIME()
                    )
                END
        END
    ELSE
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    UPDATE [ProductProductGroup]
                    SET
                    [ProductID] = @ProductID,
                    [ProductGroupID] = @ProductGroupID,
                    [UpdateDateTime__Gen] = SYSDATETIME()
                    WHERE [ProductProductGroupID] = @ProductProductGroupID
                END
        END

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__ProductProductGroup_Save Succeeded'
Else PRINT 'Procedure Creation: spGen__ProductProductGroup_Save Error on Creation'
GO





/*
'===============================================================================
' Generated by GenerateDataAndObjectLayer Version 1.0.0.0
'
' <auto-generated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated. 
' </auto-generated>
'===============================================================================

*/
USE [Products]

/* ------------------------------------------------------------
   Get rid of obsolete InsertAC
   Get rid of obsolete UpdateAC
   Get rid of obsolete DeleteAC
   Get rid of obsolete SearchACByString
   Get rid of obsolete GetACByID
   ------------------------------------------------------------ */
If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('InsertAC') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE InsertAC;
        PRINT 'Dropped InsertAC'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('UpdateAC') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE UpdateAC;
        PRINT 'Dropped UpdateAC'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DeleteAC') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE DeleteAC;
        PRINT 'Dropped DeleteAC'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('SearchACByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE SearchACByString;
        PRINT 'Dropped SearchACByString'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('GetACByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE GetACByID;
        PRINT 'Dropped GetACByID'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__AC_GetByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__AC_GetByID;
        PRINT 'Dropped spGen__AC_GetByID'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__AC_GetByID

   Description:  Selects record(s) from table 'AC'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__AC_GetByID
(
    @ACID uniqueidentifier

)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int

    Select [ACID],[ProductID],[DualFuel],[ClearControl],[AHRI_210_240_SmallAC],[AHRI_210_240_SmallHP],[AHRI_340_360_LargeAC],[AHRI_340_360_LargeHP],[AHRINoWWW],[CreateDateTime__Gen],[UpdateDateTime__Gen]
    FROM [AC]
    WHERE [ACID] = @ACID

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__AC_GetByID Succeeded'
Else PRINT 'Procedure Creation: spGen__AC_GetByID Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__AC_SearchByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__AC_SearchByString;
        PRINT 'Dropped spGen__AC_SearchByString'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__AC_SearchByString

   Description:  Selects a record from table 'AC'
                 And puts values into parameters

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__AC_SearchByString
(
    @searchParam varchar(4000)
)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int
    DECLARE @strSql varchar(4000)

    SET @strSql = ' Select [ACID],[ProductID],[DualFuel],[ClearControl],[AHRI_210_240_SmallAC],[AHRI_210_240_SmallHP],[AHRI_340_360_LargeAC],[AHRI_340_360_LargeHP],[AHRINoWWW],[CreateDateTime__Gen],[UpdateDateTime__Gen]
    FROM [AC]
    WHERE ' +  @searchParam

    EXEC(@strSql)

    --//We should NOT be using exec above.
    --//If params are NOT known, then be sure to clean sql
    --//If params are known, format like example below

    --IF @prodname IS NOT NULL
    --SELECT @sql = @sql + ' ProductName LIKE @prodname'
    --EXEC sp_executesql @sql, N'@prodname varchar(400)',@prodname

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__AC_SearchByString Succeeded'
Else PRINT 'Procedure Creation: spGen__AC_SearchByString Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__AC_Delete') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__AC_Delete;
        PRINT 'Dropped spGen__AC_Delete'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__AC_Delete

   Description:  Deletes a record from table 'AC'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__AC_Delete
(
    @ACID uniqueidentifier

)
AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN
    DECLARE @Err Int


    DELETE FROM [AC]
    WHERE [ACID] = @ACID


End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__AC_Delete Succeeded'
Else PRINT 'Procedure Creation: spGen__AC_Delete Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__AC_Save') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__AC_Save;
        PRINT 'Dropped spGen__AC_Save'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__AC_Save

   Description:  Updates or Deletes a record In table 'AC'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__AC_Save
(
    @ErrText varchar(4000) output,
    @ACID uniqueidentifier output,
    @ProductID uniqueidentifier,
    @DualFuel bit,
    @ClearControl bit,
    @AHRI_210_240_SmallAC bit,
    @AHRI_210_240_SmallHP bit,
    @AHRI_340_360_LargeAC bit,
    @AHRI_340_360_LargeHP bit,
    @AHRINoWWW bit
)

AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN

    DECLARE @UniqueRowCount Int
    IF @ACID = '00000000-0000-0000-0000-000000000000' SET @ACID = NULL
    IF @ACID IS NULL
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    SET @ACID = NewID()

                    INSERT
                    INTO [AC]
                    (
                        [ACID],
                        [ProductID],
                        [DualFuel],
                        [ClearControl],
                        [AHRI_210_240_SmallAC],
                        [AHRI_210_240_SmallHP],
                        [AHRI_340_360_LargeAC],
                        [AHRI_340_360_LargeHP],
                        [AHRINoWWW],
                        [CreateDateTime__Gen],
                        [UpdateDateTime__Gen]
                    )
                    VALUES
                    (
                        @ACID,
                        @ProductID,
                        @DualFuel,
                        @ClearControl,
                        @AHRI_210_240_SmallAC,
                        @AHRI_210_240_SmallHP,
                        @AHRI_340_360_LargeAC,
                        @AHRI_340_360_LargeHP,
                        @AHRINoWWW,
                        SYSDATETIME(),
                        SYSDATETIME()
                    )
                END
        END
    ELSE
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    UPDATE [AC]
                    SET
                    [ProductID] = @ProductID,
                    [DualFuel] = @DualFuel,
                    [ClearControl] = @ClearControl,
                    [AHRI_210_240_SmallAC] = @AHRI_210_240_SmallAC,
                    [AHRI_210_240_SmallHP] = @AHRI_210_240_SmallHP,
                    [AHRI_340_360_LargeAC] = @AHRI_340_360_LargeAC,
                    [AHRI_340_360_LargeHP] = @AHRI_340_360_LargeHP,
                    [AHRINoWWW] = @AHRINoWWW,
                    [UpdateDateTime__Gen] = SYSDATETIME()
                    WHERE [ACID] = @ACID
                END
        END

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__AC_Save Succeeded'
Else PRINT 'Procedure Creation: spGen__AC_Save Error on Creation'
GO





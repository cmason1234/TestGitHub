/*
'===============================================================================
' Generated by GenerateDataAndObjectLayer Version 1.0.0.0
'
' <auto-generated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated. 
' </auto-generated>
'===============================================================================

*/
USE [Products]

/* ------------------------------------------------------------
   Get rid of obsolete InsertProductLog
   Get rid of obsolete UpdateProductLog
   Get rid of obsolete DeleteProductLog
   Get rid of obsolete SearchProductLogByString
   Get rid of obsolete GetProductLogByID
   ------------------------------------------------------------ */
If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('InsertProductLog') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE InsertProductLog;
        PRINT 'Dropped InsertProductLog'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('UpdateProductLog') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE UpdateProductLog;
        PRINT 'Dropped UpdateProductLog'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DeleteProductLog') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE DeleteProductLog;
        PRINT 'Dropped DeleteProductLog'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('SearchProductLogByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE SearchProductLogByString;
        PRINT 'Dropped SearchProductLogByString'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('GetProductLogByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE GetProductLogByID;
        PRINT 'Dropped GetProductLogByID'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__ProductLog_GetByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__ProductLog_GetByID;
        PRINT 'Dropped spGen__ProductLog_GetByID'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__ProductLog_GetByID

   Description:  Selects record(s) from table 'ProductLog'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__ProductLog_GetByID
(
    @ProductLogID uniqueidentifier

)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int

    Select [ProductLogID],[ProductID],[SeqID],[LogText],[CreateDateTime__Gen],[UpdateDateTime__Gen]
    FROM [ProductLog]
    WHERE [ProductLogID] = @ProductLogID

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__ProductLog_GetByID Succeeded'
Else PRINT 'Procedure Creation: spGen__ProductLog_GetByID Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__ProductLog_SearchByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__ProductLog_SearchByString;
        PRINT 'Dropped spGen__ProductLog_SearchByString'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__ProductLog_SearchByString

   Description:  Selects a record from table 'ProductLog'
                 And puts values into parameters

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__ProductLog_SearchByString
(
    @searchParam varchar(4000)
)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int
    DECLARE @strSql varchar(4000)

    SET @strSql = ' Select [ProductLogID],[ProductID],[SeqID],[LogText],[CreateDateTime__Gen],[UpdateDateTime__Gen]
    FROM [ProductLog]
    WHERE ' +  @searchParam

    EXEC(@strSql)

    --//We should NOT be using exec above.
    --//If params are NOT known, then be sure to clean sql
    --//If params are known, format like example below

    --IF @prodname IS NOT NULL
    --SELECT @sql = @sql + ' ProductName LIKE @prodname'
    --EXEC sp_executesql @sql, N'@prodname varchar(400)',@prodname

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__ProductLog_SearchByString Succeeded'
Else PRINT 'Procedure Creation: spGen__ProductLog_SearchByString Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__ProductLog_Delete') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__ProductLog_Delete;
        PRINT 'Dropped spGen__ProductLog_Delete'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__ProductLog_Delete

   Description:  Deletes a record from table 'ProductLog'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__ProductLog_Delete
(
    @ProductLogID uniqueidentifier

)
AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN
    DECLARE @Err Int


    DELETE FROM [ProductLog]
    WHERE [ProductLogID] = @ProductLogID


End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__ProductLog_Delete Succeeded'
Else PRINT 'Procedure Creation: spGen__ProductLog_Delete Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__ProductLog_Save') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__ProductLog_Save;
        PRINT 'Dropped spGen__ProductLog_Save'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__ProductLog_Save

   Description:  Updates or Deletes a record In table 'ProductLog'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__ProductLog_Save
(
    @ErrText varchar(4000) output,
    @ProductLogID uniqueidentifier output,
    @ProductID uniqueidentifier,
    @SeqID int,
    @LogText varchar(1024)
)

AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN

    DECLARE @UniqueRowCount Int
    IF @ProductLogID = '00000000-0000-0000-0000-000000000000' SET @ProductLogID = NULL
    IF @ProductLogID IS NULL
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    SET @ProductLogID = NewID()

                    INSERT
                    INTO [ProductLog]
                    (
                        [ProductLogID],
                        [ProductID],
                        [SeqID],
                        [LogText],
                        [CreateDateTime__Gen],
                        [UpdateDateTime__Gen]
                    )
                    VALUES
                    (
                        @ProductLogID,
                        @ProductID,
                        @SeqID,
                        @LogText,
                        SYSDATETIME(),
                        SYSDATETIME()
                    )
                END
        END
    ELSE
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    UPDATE [ProductLog]
                    SET
                    [ProductID] = @ProductID,
                    [SeqID] = @SeqID,
                    [LogText] = @LogText,
                    [UpdateDateTime__Gen] = SYSDATETIME()
                    WHERE [ProductLogID] = @ProductLogID
                END
        END

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__ProductLog_Save Succeeded'
Else PRINT 'Procedure Creation: spGen__ProductLog_Save Error on Creation'
GO





/*
'===============================================================================
' Generated by GenerateDataAndObjectLayer Version 1.0.0.0
'
' <auto-generated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated. 
' </auto-generated>
'===============================================================================

*/
USE [Products]

/* ------------------------------------------------------------
   Get rid of obsolete InsertProductMaster
   Get rid of obsolete UpdateProductMaster
   Get rid of obsolete DeleteProductMaster
   Get rid of obsolete SearchProductMasterByString
   Get rid of obsolete GetProductMasterByID
   ------------------------------------------------------------ */
If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('InsertProductMaster') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE InsertProductMaster;
        PRINT 'Dropped InsertProductMaster'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('UpdateProductMaster') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE UpdateProductMaster;
        PRINT 'Dropped UpdateProductMaster'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('DeleteProductMaster') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE DeleteProductMaster;
        PRINT 'Dropped DeleteProductMaster'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('SearchProductMasterByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE SearchProductMasterByString;
        PRINT 'Dropped SearchProductMasterByString'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('GetProductMasterByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE GetProductMasterByID;
        PRINT 'Dropped GetProductMasterByID'
    END
GO

If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__ProductMaster_GetByID') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__ProductMaster_GetByID;
        PRINT 'Dropped spGen__ProductMaster_GetByID'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__ProductMaster_GetByID

   Description:  Selects record(s) from table 'ProductMaster'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__ProductMaster_GetByID
(
    @ProductMasterID uniqueidentifier

)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int

    Select [ProductMasterID],[ProductID],[DescriptionBriefHTML],[TaxCredit],[IsSureProDesk],[CountryID],[ImageURL],[AvailableForLiterature],[CreateDateTime__Gen],[UpdateDateTime__Gen]
    FROM [ProductMaster]
    WHERE [ProductMasterID] = @ProductMasterID

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__ProductMaster_GetByID Succeeded'
Else PRINT 'Procedure Creation: spGen__ProductMaster_GetByID Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__ProductMaster_SearchByString') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__ProductMaster_SearchByString;
        PRINT 'Dropped spGen__ProductMaster_SearchByString'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__ProductMaster_SearchByString

   Description:  Selects a record from table 'ProductMaster'
                 And puts values into parameters

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__ProductMaster_SearchByString
(
    @searchParam varchar(4000)
)

AS
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

    DECLARE @Err Int
    DECLARE @strSql varchar(4000)

    SET @strSql = ' Select [ProductMasterID],[ProductID],[DescriptionBriefHTML],[TaxCredit],[IsSureProDesk],[CountryID],[ImageURL],[AvailableForLiterature],[CreateDateTime__Gen],[UpdateDateTime__Gen]
    FROM [ProductMaster]
    WHERE ' +  @searchParam

    EXEC(@strSql)

    --//We should NOT be using exec above.
    --//If params are NOT known, then be sure to clean sql
    --//If params are known, format like example below

    --IF @prodname IS NOT NULL
    --SELECT @sql = @sql + ' ProductName LIKE @prodname'
    --EXEC sp_executesql @sql, N'@prodname varchar(400)',@prodname

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__ProductMaster_SearchByString Succeeded'
Else PRINT 'Procedure Creation: spGen__ProductMaster_SearchByString Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__ProductMaster_Delete') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__ProductMaster_Delete;
        PRINT 'Dropped spGen__ProductMaster_Delete'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__ProductMaster_Delete

   Description:  Deletes a record from table 'ProductMaster'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__ProductMaster_Delete
(
    @ProductMasterID uniqueidentifier

)
AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN
    DECLARE @Err Int


    DELETE FROM [ProductMaster]
    WHERE [ProductMasterID] = @ProductMasterID


End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__ProductMaster_Delete Succeeded'
Else PRINT 'Procedure Creation: spGen__ProductMaster_Delete Error on Creation'
GO




If EXISTS (Select * FROM SYSOBJECTS WHERE ID = OBJECT_ID('spGen__ProductMaster_Save') AND OBJECTPROPERTY(ID, 'IsProcedure') = 1)
    BEGIN
        DROP PROCEDURE spGen__ProductMaster_Save;
        PRINT 'Dropped spGen__ProductMaster_Save'
    END
GO

/* ------------------------------------------------------------
   PROCEDURE:    spGen__ProductMaster_Save

   Description:  Updates or Deletes a record In table 'ProductMaster'

   Generated by GenerateDataAndObjectLayer Version 1.0.0.0
   ------------------------------------------------------------ */

CREATE PROCEDURE dbo.spGen__ProductMaster_Save
(
    @ErrText varchar(4000) output,
    @ProductMasterID uniqueidentifier output,
    @ProductID uniqueidentifier,
    @DescriptionBriefHTML text,
    @TaxCredit bit,
    @IsSureProDesk bit,
    @CountryID uniqueidentifier,
    @ImageURL varchar(256),
    @AvailableForLiterature bit
)

AS
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN

    DECLARE @UniqueRowCount Int
    IF @ProductMasterID = '00000000-0000-0000-0000-000000000000' SET @ProductMasterID = NULL
    IF @ProductMasterID IS NULL
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    SET @ProductMasterID = NewID()

                    INSERT
                    INTO [ProductMaster]
                    (
                        [ProductMasterID],
                        [ProductID],
                        [DescriptionBriefHTML],
                        [TaxCredit],
                        [IsSureProDesk],
                        [CountryID],
                        [ImageURL],
                        [AvailableForLiterature],
                        [CreateDateTime__Gen],
                        [UpdateDateTime__Gen]
                    )
                    VALUES
                    (
                        @ProductMasterID,
                        @ProductID,
                        @DescriptionBriefHTML,
                        @TaxCredit,
                        @IsSureProDesk,
                        @CountryID,
                        @ImageURL,
                        @AvailableForLiterature,
                        SYSDATETIME(),
                        SYSDATETIME()
                    )
                END
        END
    ELSE
        BEGIN
            SET @UniqueRowCount = 0       -- No unique indexes exist for this table
            IF @UniqueRowCount > 0
                BEGIN
                    SET @ErrText = ''    -- No unique indexes exist for this table
                END
            ELSE
                BEGIN
                    UPDATE [ProductMaster]
                    SET
                    [ProductID] = @ProductID,
                    [DescriptionBriefHTML] = @DescriptionBriefHTML,
                    [TaxCredit] = @TaxCredit,
                    [IsSureProDesk] = @IsSureProDesk,
                    [CountryID] = @CountryID,
                    [ImageURL] = @ImageURL,
                    [AvailableForLiterature] = @AvailableForLiterature,
                    [UpdateDateTime__Gen] = SYSDATETIME()
                    WHERE [ProductMasterID] = @ProductMasterID
                END
        END

End
GO

-- Display the status of Proc creation
If @@Error = 0 PRINT 'Procedure Creation: spGen__ProductMaster_Save Succeeded'
Else PRINT 'Procedure Creation: spGen__ProductMaster_Save Error on Creation'
GO




